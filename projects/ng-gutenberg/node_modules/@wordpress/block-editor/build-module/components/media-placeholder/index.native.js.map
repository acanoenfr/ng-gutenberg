{"version":3,"sources":["@wordpress/block-editor/src/components/media-placeholder/index.native.js"],"names":["View","Text","TouchableWithoutFeedback","__","sprintf","MediaUpload","MEDIA_TYPE_IMAGE","MEDIA_TYPE_VIDEO","styles","MediaPlaceholder","props","mediaType","labels","icon","onSelectURL","isImage","isVideo","placeholderTitle","title","undefined","instructions","accessibilityHint","open","getMediaOptions","event","onFocus","emptyStateContainer","modalIcon","emptyStateTitle","emptyStateDescription"],"mappings":";;AAAA;;;AAGA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,wBAArB,QAAqD,cAArD;AAEA;;;;AAGA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,gBAAxC,QAAgE,yBAAhE;AAEA;;;;AAGA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,SAASC,gBAAT,CAA2BC,KAA3B,EAAmC;AAAA,MAC1BC,SAD0B,GACoBD,KADpB,CAC1BC,SAD0B;AAAA,sBACoBD,KADpB,CACfE,MADe;AAAA,MACfA,MADe,8BACN,EADM;AAAA,MACFC,IADE,GACoBH,KADpB,CACFG,IADE;AAAA,MACIC,WADJ,GACoBJ,KADpB,CACII,WADJ;AAGlC,MAAMC,OAAO,GAAGT,gBAAgB,KAAKK,SAArC;AACA,MAAMK,OAAO,GAAGT,gBAAgB,KAAKI,SAArC;AAEA,MAAIM,gBAAgB,GAAGL,MAAM,CAACM,KAA9B;;AACA,MAAKD,gBAAgB,KAAKE,SAA1B,EAAsC;AACrCF,IAAAA,gBAAgB,GAAGd,EAAE,CAAE,OAAF,CAArB;;AACA,QAAKY,OAAL,EAAe;AACdE,MAAAA,gBAAgB,GAAGd,EAAE,CAAE,OAAF,CAArB;AACA,KAFD,MAEO,IAAKa,OAAL,EAAe;AACrBC,MAAAA,gBAAgB,GAAGd,EAAE,CAAE,OAAF,CAArB;AACA;AACD;;AAED,MAAIiB,YAAY,GAAGR,MAAM,CAACQ,YAA1B;;AACA,MAAKA,YAAY,KAAKD,SAAtB,EAAkC;AACjC,QAAKJ,OAAL,EAAe;AACdK,MAAAA,YAAY,GAAGjB,EAAE,CAAE,WAAF,CAAjB;AACA,KAFD,MAEO,IAAKa,OAAL,EAAe;AACrBI,MAAAA,YAAY,GAAGjB,EAAE,CAAE,WAAF,CAAjB;AACA;AACD;;AAED,MAAIkB,iBAAiB,GAAGlB,EAAE,CAAE,sBAAF,CAA1B;;AACA,MAAKY,OAAL,EAAe;AACdM,IAAAA,iBAAiB,GAAGlB,EAAE,CAAE,+BAAF,CAAtB;AACA,GAFD,MAEO,IAAKa,OAAL,EAAe;AACrBK,IAAAA,iBAAiB,GAAGlB,EAAE,CAAE,8BAAF,CAAtB;AACA;;AAED,SACC,cAAC,WAAD;AACC,IAAA,SAAS,EAAGQ,SADb;AAEC,IAAA,WAAW,EAAGG,WAFf;AAGC,IAAA,MAAM,EAAG,sBAAiC;AAAA,UAA7BQ,IAA6B,QAA7BA,IAA6B;AAAA,UAAvBC,eAAuB,QAAvBA,eAAuB;AACzC,aACC,cAAC,wBAAD;AACC,QAAA,kBAAkB,EAAGnB,OAAO;AAC3B;AACAD,QAAAA,EAAE,CAAE,iBAAF,CAFyB,EAG3Bc,gBAH2B,CAD7B;AAMC,QAAA,iBAAiB,EAAG,QANrB;AAOC,QAAA,iBAAiB,EAAGI,iBAPrB;AAQC,QAAA,OAAO,EAAG,iBAAEG,KAAF,EAAa;AACtBd,UAAAA,KAAK,CAACe,OAAN,CAAeD,KAAf;AACAF,UAAAA,IAAI;AACJ;AAXF,SAaC,cAAC,IAAD;AAAM,QAAA,KAAK,EAAGd,MAAM,CAACkB;AAArB,SACGH,eAAe,EADlB,EAEC,cAAC,IAAD;AAAM,QAAA,KAAK,EAAGf,MAAM,CAACmB;AAArB,SACGd,IADH,CAFD,EAKC,cAAC,IAAD;AAAM,QAAA,KAAK,EAAGL,MAAM,CAACoB;AAArB,SACGX,gBADH,CALD,EAQC,cAAC,IAAD;AAAM,QAAA,KAAK,EAAGT,MAAM,CAACqB;AAArB,SACGT,YADH,CARD,CAbD,CADD;AA4BA;AAhCF,IADD;AAmCA;;AAED,eAAeX,gBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Text, TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { MediaUpload, MEDIA_TYPE_IMAGE, MEDIA_TYPE_VIDEO } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\n\nfunction MediaPlaceholder( props ) {\n\tconst { mediaType, labels = {}, icon, onSelectURL } = props;\n\n\tconst isImage = MEDIA_TYPE_IMAGE === mediaType;\n\tconst isVideo = MEDIA_TYPE_VIDEO === mediaType;\n\n\tlet placeholderTitle = labels.title;\n\tif ( placeholderTitle === undefined ) {\n\t\tplaceholderTitle = __( 'Media' );\n\t\tif ( isImage ) {\n\t\t\tplaceholderTitle = __( 'Image' );\n\t\t} else if ( isVideo ) {\n\t\t\tplaceholderTitle = __( 'Video' );\n\t\t}\n\t}\n\n\tlet instructions = labels.instructions;\n\tif ( instructions === undefined ) {\n\t\tif ( isImage ) {\n\t\t\tinstructions = __( 'ADD IMAGE' );\n\t\t} else if ( isVideo ) {\n\t\t\tinstructions = __( 'ADD VIDEO' );\n\t\t}\n\t}\n\n\tlet accessibilityHint = __( 'Double tap to select' );\n\tif ( isImage ) {\n\t\taccessibilityHint = __( 'Double tap to select an image' );\n\t} else if ( isVideo ) {\n\t\taccessibilityHint = __( 'Double tap to select a video' );\n\t}\n\n\treturn (\n\t\t<MediaUpload\n\t\t\tmediaType={ mediaType }\n\t\t\tonSelectURL={ onSelectURL }\n\t\t\trender={ ( { open, getMediaOptions } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<TouchableWithoutFeedback\n\t\t\t\t\t\taccessibilityLabel={ sprintf(\n\t\t\t\t\t\t\t/* translators: accessibility text for the media block empty state. %s: media type */\n\t\t\t\t\t\t\t__( '%s block. Empty' ),\n\t\t\t\t\t\t\tplaceholderTitle\n\t\t\t\t\t\t) }\n\t\t\t\t\t\taccessibilityRole={ 'button' }\n\t\t\t\t\t\taccessibilityHint={ accessibilityHint }\n\t\t\t\t\t\tonPress={ ( event ) => {\n\t\t\t\t\t\t\tprops.onFocus( event );\n\t\t\t\t\t\t\topen();\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t<View style={ styles.emptyStateContainer }>\n\t\t\t\t\t\t\t{ getMediaOptions() }\n\t\t\t\t\t\t\t<View style={ styles.modalIcon }>\n\t\t\t\t\t\t\t\t{ icon }\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t<Text style={ styles.emptyStateTitle }>\n\t\t\t\t\t\t\t\t{ placeholderTitle }\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text style={ styles.emptyStateDescription }>\n\t\t\t\t\t\t\t\t{ instructions }\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t\t);\n\t\t\t} } />\n\t);\n}\n\nexport default MediaPlaceholder;\n"]}