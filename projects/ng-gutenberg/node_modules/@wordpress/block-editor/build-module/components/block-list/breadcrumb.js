import { createElement, Fragment } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { Toolbar, Button } from '@wordpress/components';
import { useSelect, useDispatch } from '@wordpress/data';
import { forwardRef } from '@wordpress/element';
/**
 * Internal dependencies
 */

import BlockTitle from '../block-title';
/**
 * Block breadcrumb component, displaying the label of the block. If the block
 * descends from a root block, a button is displayed enabling the user to select
 * the root block.
 *
 * @param {string}   props.clientId        Client ID of block.
 * @return {WPElement} Block Breadcrumb.
 */

var BlockBreadcrumb = forwardRef(function (_ref, ref) {
  var clientId = _ref.clientId;

  var _useDispatch = useDispatch('core/block-editor'),
      setNavigationMode = _useDispatch.setNavigationMode;

  var _useSelect = useSelect(function (select) {
    return {
      rootClientId: select('core/block-editor').getBlockRootClientId(clientId)
    };
  }),
      rootClientId = _useSelect.rootClientId;

  return createElement("div", {
    className: "editor-block-list__breadcrumb block-editor-block-list__breadcrumb"
  }, createElement(Toolbar, null, rootClientId && createElement(Fragment, null, createElement(BlockTitle, {
    clientId: rootClientId
  }), createElement("span", {
    className: "editor-block-list__descendant-arrow block-editor-block-list__descendant-arrow"
  })), createElement(Button, {
    ref: ref,
    onClick: function onClick() {
      return setNavigationMode(false);
    }
  }, createElement(BlockTitle, {
    clientId: clientId
  }))));
});
export default BlockBreadcrumb;
//# sourceMappingURL=breadcrumb.js.map