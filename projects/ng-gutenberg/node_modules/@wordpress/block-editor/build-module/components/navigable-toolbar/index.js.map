{"version":3,"sources":["@wordpress/block-editor/src/components/navigable-toolbar/index.js"],"names":["omit","NavigableMenu","KeyboardShortcuts","Component","createRef","focus","NavigableToolbar","arguments","focusToolbar","bind","toolbar","tabbables","tabbable","find","current","length","props","focusOnMount","addEventListener","switchOnKeyDown","removeEventListener","children"],"mappings":";;;;;;;;;;AAAA;;;AAGA,SAASA,IAAT,QAAqB,QAArB;AAEA;;;;AAGA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,uBAAjD;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,KAAT,QAAsB,gBAAtB;;IAEMC,gB;;;;;AACL,8BAAc;AAAA;;AAAA;;AACb,2FAAUC,SAAV;AAEA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAEA,UAAKC,OAAL,GAAeN,SAAS,EAAxB;AALa;AAMb;;;;mCAEc;AACd,UAAMO,SAAS,GAAGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAqB,KAAKH,OAAL,CAAaI,OAAlC,CAAlB;;AACA,UAAKH,SAAS,CAACI,MAAf,EAAwB;AACvBJ,QAAAA,SAAS,CAAE,CAAF,CAAT,CAAeN,KAAf;AACA;AACD;;;wCAEmB;AACnB,UAAK,KAAKW,KAAL,CAAWC,YAAhB,EAA+B;AAC9B,aAAKT,YAAL;AACA,OAHkB,CAKnB;AACA;AACA;AACA;AACA;;;AACA,WAAKE,OAAL,CAAaI,OAAb,CAAqBI,gBAArB,CAAuC,SAAvC,EAAkD,KAAKC,eAAvD;AACA;;;2CAEsB;AACtB,WAAKT,OAAL,CAAaI,OAAb,CAAqBM,mBAArB,CAA0C,SAA1C,EAAqD,KAAKD,eAA1D;AACA;;;6BAEQ;AAAA,wBACuB,KAAKH,KAD5B;AAAA,UACAK,QADA,eACAA,QADA;AAAA,UACaL,KADb;;AAER,aACC,cAAC,aAAD;AACC,QAAA,WAAW,EAAC,YADb;AAEC,QAAA,IAAI,EAAC,SAFN;AAGC,QAAA,GAAG,EAAG,KAAKN;AAHZ,SAIMV,IAAI,CAAEgB,KAAF,EAAS,CACjB,cADiB,CAAT,CAJV,GAQC,cAAC,iBAAD;AACC,QAAA,UAAU,MADX,CAEC;AAFD;AAGC,QAAA,SAAS,EAAC,SAHX;AAIC,QAAA,SAAS,EAAG;AACX,qBAAW,KAAKR;AADL;AAJb,QARD,EAgBGa,QAhBH,CADD;AAoBA;;;;EAvD6BlB,S;;AA0D/B,eAAeG,gBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { NavigableMenu, KeyboardShortcuts } from '@wordpress/components';\nimport { Component, createRef } from '@wordpress/element';\nimport { focus } from '@wordpress/dom';\n\nclass NavigableToolbar extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.focusToolbar = this.focusToolbar.bind( this );\n\n\t\tthis.toolbar = createRef();\n\t}\n\n\tfocusToolbar() {\n\t\tconst tabbables = focus.tabbable.find( this.toolbar.current );\n\t\tif ( tabbables.length ) {\n\t\t\ttabbables[ 0 ].focus();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.focusToolbar();\n\t\t}\n\n\t\t// We use DOM event listeners instead of React event listeners\n\t\t// because we want to catch events from the underlying DOM tree\n\t\t// The React Tree can be different from the DOM tree when using\n\t\t// portals. Block Toolbars for instance are rendered in a separate\n\t\t// React Tree.\n\t\tthis.toolbar.current.addEventListener( 'keydown', this.switchOnKeyDown );\n\t}\n\n\tcomponentwillUnmount() {\n\t\tthis.toolbar.current.removeEventListener( 'keydown', this.switchOnKeyDown );\n\t}\n\n\trender() {\n\t\tconst { children, ...props } = this.props;\n\t\treturn (\n\t\t\t<NavigableMenu\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\trole=\"toolbar\"\n\t\t\t\tref={ this.toolbar }\n\t\t\t\t{ ...omit( props, [\n\t\t\t\t\t'focusOnMount',\n\t\t\t\t] ) }\n\t\t\t>\n\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\tbindGlobal\n\t\t\t\t\t// Use the same event that TinyMCE uses in the Classic block for its own `alt+f10` shortcut.\n\t\t\t\t\teventName=\"keydown\"\n\t\t\t\t\tshortcuts={ {\n\t\t\t\t\t\t'alt+f10': this.focusToolbar,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t{ children }\n\t\t\t</NavigableMenu>\n\t\t);\n\t}\n}\n\nexport default NavigableToolbar;\n"]}