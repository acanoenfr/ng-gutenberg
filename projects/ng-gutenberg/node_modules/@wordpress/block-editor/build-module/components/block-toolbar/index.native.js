import { createElement, Fragment } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { withSelect } from '@wordpress/data';
/**
 * WordPress dependencies
 */

import { BlockFormatControls, BlockControls } from '@wordpress/block-editor';
export var BlockToolbar = function BlockToolbar(_ref) {
  var blockClientIds = _ref.blockClientIds,
      isValid = _ref.isValid,
      mode = _ref.mode;

  if (blockClientIds.length === 0) {
    return null;
  }

  return createElement(Fragment, null, mode === 'visual' && isValid && createElement(Fragment, null, createElement(BlockControls.Slot, null), createElement(BlockFormatControls.Slot, null)));
};
export default withSelect(function (select) {
  var _select = select('core/block-editor'),
      getBlockMode = _select.getBlockMode,
      getSelectedBlockClientIds = _select.getSelectedBlockClientIds,
      isBlockValid = _select.isBlockValid;

  var blockClientIds = getSelectedBlockClientIds();
  return {
    blockClientIds: blockClientIds,
    isValid: blockClientIds.length === 1 ? isBlockValid(blockClientIds[0]) : null,
    mode: blockClientIds.length === 1 ? getBlockMode(blockClientIds[0]) : null
  };
})(BlockToolbar);
//# sourceMappingURL=index.native.js.map