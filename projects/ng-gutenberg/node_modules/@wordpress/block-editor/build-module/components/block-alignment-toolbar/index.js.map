{"version":3,"sources":["@wordpress/block-editor/src/components/block-alignment-toolbar/index.js"],"names":["__","Toolbar","withSelect","compose","withBlockEditContext","BLOCK_ALIGNMENTS_CONTROLS","left","icon","title","center","right","wide","full","DEFAULT_CONTROLS","DEFAULT_CONTROL","WIDE_CONTROLS","BlockAlignmentToolbar","value","onChange","controls","isCollapsed","wideControlsEnabled","applyOrUnset","align","undefined","enabledControls","filter","control","indexOf","activeAlignmentControl","defaultAlignmentControl","map","isActive","onClick","clientId","select","getSettings","settings","alignWide"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Toolbar } from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { withBlockEditContext } from '../block-edit/context';\n\nconst BLOCK_ALIGNMENTS_CONTROLS = {\n\tleft: {\n\t\ticon: 'align-left',\n\t\ttitle: __( 'Align Left' ),\n\t},\n\tcenter: {\n\t\ticon: 'align-center',\n\t\ttitle: __( 'Align Center' ),\n\t},\n\tright: {\n\t\ticon: 'align-right',\n\t\ttitle: __( 'Align Right' ),\n\t},\n\twide: {\n\t\ticon: 'align-wide',\n\t\ttitle: __( 'Wide Width' ),\n\t},\n\tfull: {\n\t\ticon: 'align-full-width',\n\t\ttitle: __( 'Full Width' ),\n\t},\n};\n\nconst DEFAULT_CONTROLS = [ 'left', 'center', 'right', 'wide', 'full' ];\nconst DEFAULT_CONTROL = 'center';\nconst WIDE_CONTROLS = [ 'wide', 'full' ];\n\nexport function BlockAlignmentToolbar( { value, onChange, controls = DEFAULT_CONTROLS, isCollapsed = true, wideControlsEnabled = false } ) {\n\tfunction applyOrUnset( align ) {\n\t\treturn () => onChange( value === align ? undefined : align );\n\t}\n\n\tconst enabledControls = wideControlsEnabled ?\n\t\tcontrols :\n\t\tcontrols.filter( ( control ) => WIDE_CONTROLS.indexOf( control ) === -1 );\n\n\tconst activeAlignmentControl = BLOCK_ALIGNMENTS_CONTROLS[ value ];\n\tconst defaultAlignmentControl = BLOCK_ALIGNMENTS_CONTROLS[ DEFAULT_CONTROL ];\n\n\treturn (\n\t\t<Toolbar\n\t\t\tisCollapsed={ isCollapsed }\n\t\t\ticon={ activeAlignmentControl ? activeAlignmentControl.icon : defaultAlignmentControl.icon }\n\t\t\tlabel={ __( 'Change alignment' ) }\n\t\t\tcontrols={\n\t\t\t\tenabledControls.map( ( control ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...BLOCK_ALIGNMENTS_CONTROLS[ control ],\n\t\t\t\t\t\tisActive: value === control,\n\t\t\t\t\t\tonClick: applyOrUnset( control ),\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default compose(\n\twithBlockEditContext( ( { clientId } ) => {\n\t\treturn {\n\t\t\tclientId,\n\t\t};\n\t} ),\n\twithSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\tconst settings = getSettings();\n\t\treturn {\n\t\t\twideControlsEnabled: settings.alignWide,\n\t\t};\n\t} ),\n)( BlockAlignmentToolbar );\n"]}