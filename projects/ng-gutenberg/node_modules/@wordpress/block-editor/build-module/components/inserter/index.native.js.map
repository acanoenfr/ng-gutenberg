{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/index.native.js"],"names":["__","Dropdown","ToolbarButton","Dashicon","Component","withSelect","compose","getUnregisteredTypeHandlerName","styles","InserterMenu","defaultRenderToggle","onToggle","disabled","addBlockButton","color","hint","Inserter","arguments","bind","renderToggle","renderContent","isOpen","props","onClose","rootClientId","clientId","isAppender","select","getInserterItems","getBlockRootClientId","getBlockSelectionEnd","destinationRootClientId","end","undefined","inserterItems","items","filter","name"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Dropdown, ToolbarButton, Dashicon } from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { getUnregisteredTypeHandlerName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\nimport InserterMenu from './menu';\n\nconst defaultRenderToggle = ( { onToggle, disabled } ) => (\n\t<ToolbarButton\n\t\ttitle={ __( 'Add block' ) }\n\t\ticon={ ( <Dashicon icon=\"plus-alt\" style={ styles.addBlockButton } color={ styles.addBlockButton.color } /> ) }\n\t\tonClick={ onToggle }\n\t\textraProps={ { hint: __( 'Double tap to add a block' ) } }\n\t\tisDisabled={ disabled }\n\t/>\n);\n\nclass Inserter extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onToggle = this.onToggle.bind( this );\n\t\tthis.renderToggle = this.renderToggle.bind( this );\n\t\tthis.renderContent = this.renderContent.bind( this );\n\t}\n\n\tonToggle( isOpen ) {\n\t\tconst { onToggle } = this.props;\n\n\t\t// Surface toggle callback to parent component\n\t\tif ( onToggle ) {\n\t\t\tonToggle( isOpen );\n\t\t}\n\t}\n\n\t/**\n\t * Render callback to display Dropdown toggle element.\n\t *\n\t * @param {Object}   options\n\t * @param {Function} options.onToggle Callback to invoke when toggle is\n\t *                                    pressed.\n\t * @param {boolean}  options.isOpen   Whether dropdown is currently open.\n\t *\n\t * @return {WPElement} Dropdown toggle element.\n\t */\n\trenderToggle( { onToggle, isOpen } ) {\n\t\tconst {\n\t\t\tdisabled,\n\t\t\trenderToggle = defaultRenderToggle,\n\t\t} = this.props;\n\n\t\treturn renderToggle( { onToggle, isOpen, disabled } );\n\t}\n\n\t/**\n\t * Render callback to display Dropdown content element.\n\t *\n\t * @param {Object}   options\n\t * @param {Function} options.onClose Callback to invoke when dropdown is\n\t *                                   closed.\n\t *\n\t * @return {WPElement} Dropdown content element.\n\t */\n\trenderContent( { onClose, isOpen } ) {\n\t\tconst { rootClientId, clientId, isAppender } = this.props;\n\n\t\treturn (\n\t\t\t<InserterMenu\n\t\t\t\tisOpen={ isOpen }\n\t\t\t\tonSelect={ onClose }\n\t\t\t\tonDismiss={ onClose }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisAppender={ isAppender }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\tonToggle={ this.onToggle }\n\t\t\t\theaderTitle={ __( 'Add a block' ) }\n\t\t\t\trenderToggle={ this.renderToggle }\n\t\t\t\trenderContent={ this.renderContent }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId, isAppender, rootClientId } ) => {\n\t\tconst {\n\t\t\tgetInserterItems,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockSelectionEnd,\n\t\t} = select( 'core/block-editor' );\n\n\t\tlet destinationRootClientId = rootClientId;\n\t\tif ( ! destinationRootClientId && ! clientId && ! isAppender ) {\n\t\t\tconst end = getBlockSelectionEnd();\n\t\t\tif ( end ) {\n\t\t\t\tdestinationRootClientId = getBlockRootClientId( end ) || undefined;\n\t\t\t}\n\t\t}\n\t\tconst inserterItems = getInserterItems( destinationRootClientId );\n\n\t\treturn {\n\t\t\titems: inserterItems.filter( ( { name } ) => name !== getUnregisteredTypeHandlerName() ),\n\t\t};\n\t} ),\n] )( Inserter );\n"]}