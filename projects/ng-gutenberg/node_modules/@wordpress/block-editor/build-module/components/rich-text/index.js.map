{"version":3,"sources":["@wordpress/block-editor/src/components/rich-text/index.js"],"names":["classnames","omit","RawHTML","Component","withDispatch","withSelect","pasteHandler","children","childrenSource","getBlockTransforms","findTransform","withInstanceId","compose","__experimentalRichText","RichText","__unstableCreateElement","isEmpty","__unstableIsEmptyLine","isEmptyLine","insert","__unstableInsertLineSeparator","insertLineSeparator","create","replace","split","__UNSTABLE_LINE_SEPARATOR","LINE_SEPARATOR","toHTMLString","slice","withFilters","IsolatedEventContainer","createBlobURL","deprecated","isURL","Autocomplete","BlockFormatControls","FormatToolbar","withBlockEditContext","RemoveBrowserShortcuts","requestIdleCallback","window","fallbackRequestIdleCallback","fn","setTimeout","wrapperClasses","classes","getMultilineTag","multiline","RichTextWrapper","arguments","onEnter","bind","onSplit","onPaste","onDelete","inputRule","markAutomaticChange","value","onChange","shiftKey","props","onReplace","canSplit","transforms","filter","type","transformation","item","regExp","test","text","transform","content","isReverse","onMerge","onRemove","html","plainText","image","tagName","canUserUseUnfilteredHTML","__unstableEmbedURLOnPaste","file","getAsFile","HTML","mode","console","log","trim","valueToInsert","length","record","pastedBlocks","onSplitMiddle","__unstableOnSplitMiddle","blocks","before","after","hasPastedBlocks","multilineTag","push","indexToSelect","valueToFormat","start","characterBefore","trimmedTextBefore","prefixTransforms","prefix","block","allowedFormats","formattingControls","alternative","map","name","originalValue","originalOnChange","selectionStart","selectionEnd","onSelectionChange","inlineToolbar","wrapperClassName","className","autocompleters","isCaretWithinFormattedText","onEnterFormattedText","onExitFormattedText","originalIsSelected","isSelected","onCreateUndoLevel","didAutomaticChange","undo","placeholder","keepPlaceholderOnFocus","withoutInteractiveFormatting","clientId","identifier","instanceId","reversed","experimentalProps","adjustedAllowedFormats","getAllowedFormats","hasFormats","adjustedValue","adjustedOnChange","Array","isArray","toHTML","newValue","fromDOM","document","childNodes","Editable","listBoxId","activeId","onKeyDown","undefined","RichTextContainer","select","getSelectionStart","getSelectionEnd","getSettings","__experimentalCanUserUseUnfilteredHTML","attributeKey","offset","dispatch","__unstableMarkLastChangeAsPersistent","enterFormattedText","exitFormattedText","selectionChange","__unstableMarkAutomaticChange","end","Content","Tag","MultilineTag","defaultProps","format","RichTextShortcut","RichTextToolbarButton","__unstableRichTextInputEvent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { RawHTML, Component } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { pasteHandler, children as childrenSource, getBlockTransforms, findTransform } from '@wordpress/blocks';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport {\n\t__experimentalRichText as RichText,\n\t__unstableCreateElement,\n\tisEmpty,\n\t__unstableIsEmptyLine as isEmptyLine,\n\tinsert,\n\t__unstableInsertLineSeparator as insertLineSeparator,\n\tcreate,\n\treplace,\n\tsplit,\n\t__UNSTABLE_LINE_SEPARATOR as LINE_SEPARATOR,\n\ttoHTMLString,\n\tslice,\n} from '@wordpress/rich-text';\nimport { withFilters, IsolatedEventContainer } from '@wordpress/components';\nimport { createBlobURL } from '@wordpress/blob';\nimport deprecated from '@wordpress/deprecated';\nimport { isURL } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport Autocomplete from '../autocomplete';\nimport BlockFormatControls from '../block-format-controls';\nimport FormatToolbar from './format-toolbar';\nimport { withBlockEditContext } from '../block-edit/context';\nimport { RemoveBrowserShortcuts } from './remove-browser-shortcuts';\n\nconst requestIdleCallback = window.requestIdleCallback ||\n\tfunction fallbackRequestIdleCallback( fn ) {\n\t\twindow.setTimeout( fn, 100 );\n\t};\n\nconst wrapperClasses = 'editor-rich-text block-editor-rich-text';\nconst classes = 'editor-rich-text__editable block-editor-rich-text__editable';\n\n/**\n * Get the multiline tag based on the multiline prop.\n *\n * @param {?(string|boolean)} multiline The multiline prop.\n *\n * @return {?string} The multiline tag.\n */\nfunction getMultilineTag( multiline ) {\n\tif ( multiline !== true && multiline !== 'p' && multiline !== 'li' ) {\n\t\treturn;\n\t}\n\n\treturn multiline === true ? 'p' : multiline;\n}\n\nclass RichTextWrapper extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onEnter = this.onEnter.bind( this );\n\t\tthis.onSplit = this.onSplit.bind( this );\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onDelete = this.onDelete.bind( this );\n\t\tthis.inputRule = this.inputRule.bind( this );\n\t\tthis.markAutomaticChange = this.markAutomaticChange.bind( this );\n\t}\n\n\tonEnter( { value, onChange, shiftKey } ) {\n\t\tconst { onReplace, onSplit, multiline } = this.props;\n\t\tconst canSplit = onReplace && onSplit;\n\n\t\tif ( onReplace ) {\n\t\t\tconst transforms = getBlockTransforms( 'from' )\n\t\t\t\t.filter( ( { type } ) => type === 'enter' );\n\t\t\tconst transformation = findTransform( transforms, ( item ) => {\n\t\t\t\treturn item.regExp.test( value.text );\n\t\t\t} );\n\n\t\t\tif ( transformation ) {\n\t\t\t\tonReplace( [\n\t\t\t\t\ttransformation.transform( { content: value.text } ),\n\t\t\t\t] );\n\t\t\t\tthis.markAutomaticChange();\n\t\t\t}\n\t\t}\n\n\t\tif ( multiline ) {\n\t\t\tif ( shiftKey ) {\n\t\t\t\tonChange( insert( value, '\\n' ) );\n\t\t\t} else if ( canSplit && isEmptyLine( value ) ) {\n\t\t\t\tthis.onSplit( value );\n\t\t\t} else {\n\t\t\t\tonChange( insertLineSeparator( value ) );\n\t\t\t}\n\t\t} else if ( shiftKey || ! canSplit ) {\n\t\t\tonChange( insert( value, '\\n' ) );\n\t\t} else {\n\t\t\tthis.onSplit( value );\n\t\t}\n\t}\n\n\tonDelete( { value, isReverse } ) {\n\t\tconst { onMerge, onRemove } = this.props;\n\n\t\tif ( onMerge ) {\n\t\t\tonMerge( ! isReverse );\n\t\t}\n\n\t\t// Only handle remove on Backspace. This serves dual-purpose of being\n\t\t// an intentional user interaction distinguishing between Backspace and\n\t\t// Delete to remove the empty field, but also to avoid merge & remove\n\t\t// causing destruction of two fields (merge, then removed merged).\n\t\tif ( onRemove && isEmpty( value ) && isReverse ) {\n\t\t\tonRemove( ! isReverse );\n\t\t}\n\t}\n\n\tonPaste( { value, onChange, html, plainText, image } ) {\n\t\tconst {\n\t\t\tonReplace,\n\t\t\tonSplit,\n\t\t\ttagName,\n\t\t\tcanUserUseUnfilteredHTML,\n\t\t\tmultiline,\n\t\t\t__unstableEmbedURLOnPaste,\n\t\t} = this.props;\n\n\t\tif ( image && ! html ) {\n\t\t\tconst file = image.getAsFile ? image.getAsFile() : image;\n\t\t\tconst content = pasteHandler( {\n\t\t\t\tHTML: `<img src=\"${ createBlobURL( file ) }\">`,\n\t\t\t\tmode: 'BLOCKS',\n\t\t\t\ttagName,\n\t\t\t} );\n\n\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\twindow.console.log( 'Received item:\\n\\n', file );\n\n\t\t\tif ( onReplace && isEmpty( value ) ) {\n\t\t\t\tonReplace( content );\n\t\t\t} else {\n\t\t\t\tthis.onSplit( value, content );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet mode = onReplace && onSplit ? 'AUTO' : 'INLINE';\n\n\t\tif (\n\t\t\t__unstableEmbedURLOnPaste &&\n\t\t\tisEmpty( value ) &&\n\t\t\tisURL( plainText.trim() )\n\t\t) {\n\t\t\tmode = 'BLOCKS';\n\t\t}\n\n\t\tconst content = pasteHandler( {\n\t\t\tHTML: html,\n\t\t\tplainText,\n\t\t\tmode,\n\t\t\ttagName,\n\t\t\tcanUserUseUnfilteredHTML,\n\t\t} );\n\n\t\tif ( typeof content === 'string' ) {\n\t\t\tlet valueToInsert = create( { html: content } );\n\n\t\t\t// If the content should be multiline, we should process text\n\t\t\t// separated by a line break as separate lines.\n\t\t\tif ( multiline ) {\n\t\t\t\tvalueToInsert = replace( valueToInsert, /\\n+/g, LINE_SEPARATOR );\n\t\t\t}\n\n\t\t\tonChange( insert( value, valueToInsert ) );\n\t\t} else if ( content.length > 0 ) {\n\t\t\tif ( onReplace && isEmpty( value ) ) {\n\t\t\t\tonReplace( content );\n\t\t\t} else {\n\t\t\t\tthis.onSplit( value, content );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Signals to the RichText owner that the block can be replaced with two\n\t * blocks as a result of splitting the block by pressing enter, or with\n\t * blocks as a result of splitting the block by pasting block content in the\n\t * instance.\n\t *\n\t * @param  {Object} record       The rich text value to split.\n\t * @param  {Array}  pastedBlocks The pasted blocks to insert, if any.\n\t */\n\tonSplit( record, pastedBlocks = [] ) {\n\t\tconst {\n\t\t\tonReplace,\n\t\t\tonSplit,\n\t\t\t__unstableOnSplitMiddle: onSplitMiddle,\n\t\t\tmultiline,\n\t\t} = this.props;\n\n\t\tif ( ! onReplace || ! onSplit ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst blocks = [];\n\t\tconst [ before, after ] = split( record );\n\t\tconst hasPastedBlocks = pastedBlocks.length > 0;\n\t\tconst multilineTag = getMultilineTag( multiline );\n\n\t\t// Create a block with the content before the caret if there's no pasted\n\t\t// blocks, or if there are pasted blocks and the value is not empty.\n\t\t// We do not want a leading empty block on paste, but we do if split\n\t\t// with e.g. the enter key.\n\t\tif ( ! hasPastedBlocks || ! isEmpty( before ) ) {\n\t\t\tblocks.push( onSplit( toHTMLString( {\n\t\t\t\tvalue: before,\n\t\t\t\tmultilineTag,\n\t\t\t} ) ) );\n\t\t}\n\n\t\tif ( hasPastedBlocks ) {\n\t\t\tblocks.push( ...pastedBlocks );\n\t\t} else if ( onSplitMiddle ) {\n\t\t\tblocks.push( onSplitMiddle() );\n\t\t}\n\n\t\t// If there's pasted blocks, append a block with the content after the\n\t\t// caret. Otherwise, do append and empty block if there is no\n\t\t// `onSplitMiddle` prop, but if there is and the content is empty, the\n\t\t// middle block is enough to set focus in.\n\t\tif ( hasPastedBlocks || ! onSplitMiddle || ! isEmpty( after ) ) {\n\t\t\tblocks.push( onSplit( toHTMLString( {\n\t\t\t\tvalue: after,\n\t\t\t\tmultilineTag,\n\t\t\t} ) ) );\n\t\t}\n\n\t\t// If there are pasted blocks, set the selection to the last one.\n\t\t// Otherwise, set the selection to the second block.\n\t\tconst indexToSelect = hasPastedBlocks ? blocks.length - 1 : 1;\n\n\t\tonReplace( blocks, indexToSelect );\n\t}\n\n\tinputRule( value, valueToFormat ) {\n\t\tconst { onReplace } = this.props;\n\n\t\tif ( ! onReplace ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, text } = value;\n\t\tconst characterBefore = text.slice( start - 1, start );\n\n\t\t// The character right before the caret must be a plain space.\n\t\tif ( characterBefore !== ' ' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst trimmedTextBefore = text.slice( 0, start ).trim();\n\t\tconst prefixTransforms = getBlockTransforms( 'from' )\n\t\t\t.filter( ( { type } ) => type === 'prefix' );\n\t\tconst transformation = findTransform( prefixTransforms, ( { prefix } ) => {\n\t\t\treturn trimmedTextBefore === prefix;\n\t\t} );\n\n\t\tif ( ! transformation ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst content = valueToFormat( slice( value, start, text.length ) );\n\t\tconst block = transformation.transform( content );\n\n\t\tonReplace( [ block ] );\n\t\tthis.markAutomaticChange();\n\t}\n\n\tgetAllowedFormats() {\n\t\tconst { allowedFormats, formattingControls } = this.props;\n\n\t\tif ( ! allowedFormats && ! formattingControls ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( allowedFormats ) {\n\t\t\treturn allowedFormats;\n\t\t}\n\n\t\tdeprecated( 'wp.blockEditor.RichText formattingControls prop', {\n\t\t\talternative: 'allowedFormats',\n\t\t} );\n\n\t\treturn formattingControls.map( ( name ) => `core/${ name }` );\n\t}\n\n\t/**\n\t * Marks the last change as an automatic change at the next idle period to\n\t * ensure all selection changes have been recorded.\n\t */\n\tmarkAutomaticChange() {\n\t\trequestIdleCallback( () => {\n\t\t\tthis.props.markAutomaticChange();\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\ttagName,\n\t\t\tvalue: originalValue,\n\t\t\tonChange: originalOnChange,\n\t\t\tselectionStart,\n\t\t\tselectionEnd,\n\t\t\tonSelectionChange,\n\t\t\tmultiline,\n\t\t\tinlineToolbar,\n\t\t\twrapperClassName,\n\t\t\tclassName,\n\t\t\tautocompleters,\n\t\t\tonReplace,\n\t\t\tisCaretWithinFormattedText,\n\t\t\tonEnterFormattedText,\n\t\t\tonExitFormattedText,\n\t\t\tisSelected: originalIsSelected,\n\t\t\tonCreateUndoLevel,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tmarkAutomaticChange,\n\t\t\tdidAutomaticChange,\n\t\t\tundo,\n\t\t\tplaceholder,\n\t\t\tkeepPlaceholderOnFocus,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tallowedFormats,\n\t\t\twithoutInteractiveFormatting,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tonRemove,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tonMerge,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tonSplit,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tcanUserUseUnfilteredHTML,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tclientId,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tidentifier,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tinstanceId,\n\t\t\t// To do: find a better way to implicitly inherit props.\n\t\t\tstart,\n\t\t\treversed,\n\t\t\t// From experimental filter. To do: pick props instead.\n\t\t\t...experimentalProps\n\t\t} = this.props;\n\t\tconst multilineTag = getMultilineTag( multiline );\n\n\t\tconst adjustedAllowedFormats = this.getAllowedFormats();\n\t\tconst hasFormats = ! adjustedAllowedFormats || adjustedAllowedFormats.length > 0;\n\t\tlet adjustedValue = originalValue;\n\t\tlet adjustedOnChange = originalOnChange;\n\n\t\t// Handle deprecated format.\n\t\tif ( Array.isArray( originalValue ) ) {\n\t\t\tadjustedValue = childrenSource.toHTML( originalValue );\n\t\t\tadjustedOnChange = ( newValue ) => originalOnChange( childrenSource.fromDOM(\n\t\t\t\t__unstableCreateElement( document, newValue ).childNodes\n\t\t\t) );\n\t\t}\n\n\t\tconst content = (\n\t\t\t<RichText\n\t\t\t\t{ ...experimentalProps }\n\t\t\t\tvalue={ adjustedValue }\n\t\t\t\tonChange={ adjustedOnChange }\n\t\t\t\tselectionStart={ selectionStart }\n\t\t\t\tselectionEnd={ selectionEnd }\n\t\t\t\tonSelectionChange={ onSelectionChange }\n\t\t\t\ttagName={ tagName }\n\t\t\t\tclassName={ classnames( classes, className, {\n\t\t\t\t\t'is-selected': originalIsSelected,\n\t\t\t\t\t'keep-placeholder-on-focus': keepPlaceholderOnFocus,\n\t\t\t\t} ) }\n\t\t\t\tplaceholder={ placeholder }\n\t\t\t\tallowedFormats={ adjustedAllowedFormats }\n\t\t\t\twithoutInteractiveFormatting={ withoutInteractiveFormatting }\n\t\t\t\tonEnter={ this.onEnter }\n\t\t\t\tonDelete={ this.onDelete }\n\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\t__unstableIsSelected={ originalIsSelected }\n\t\t\t\t__unstableInputRule={ this.inputRule }\n\t\t\t\t__unstableMultilineTag={ multilineTag }\n\t\t\t\t__unstableIsCaretWithinFormattedText={ isCaretWithinFormattedText }\n\t\t\t\t__unstableOnEnterFormattedText={ onEnterFormattedText }\n\t\t\t\t__unstableOnExitFormattedText={ onExitFormattedText }\n\t\t\t\t__unstableOnCreateUndoLevel={ onCreateUndoLevel }\n\t\t\t\t__unstableMarkAutomaticChange={ this.markAutomaticChange }\n\t\t\t\t__unstableDidAutomaticChange={ didAutomaticChange }\n\t\t\t\t__unstableUndo={ undo }\n\t\t\t>\n\t\t\t\t{ ( { isSelected, value, onChange, Editable } ) =>\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ children && children( { value, onChange } ) }\n\t\t\t\t\t\t{ isSelected && ! inlineToolbar && hasFormats && (\n\t\t\t\t\t\t\t<BlockFormatControls>\n\t\t\t\t\t\t\t\t<FormatToolbar />\n\t\t\t\t\t\t\t</BlockFormatControls>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ isSelected && inlineToolbar && hasFormats && (\n\t\t\t\t\t\t\t<IsolatedEventContainer\n\t\t\t\t\t\t\t\tclassName=\"editor-rich-text__inline-toolbar block-editor-rich-text__inline-toolbar\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FormatToolbar />\n\t\t\t\t\t\t\t</IsolatedEventContainer>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ isSelected && <RemoveBrowserShortcuts /> }\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\t\t\tcompleters={ autocompleters }\n\t\t\t\t\t\t\trecord={ value }\n\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ ( { listBoxId, activeId, onKeyDown } ) =>\n\t\t\t\t\t\t\t\t<Editable\n\t\t\t\t\t\t\t\t\taria-autocomplete={ listBoxId ? 'list' : undefined }\n\t\t\t\t\t\t\t\t\taria-owns={ listBoxId }\n\t\t\t\t\t\t\t\t\taria-activedescendant={ activeId }\n\t\t\t\t\t\t\t\t\tstart={ start }\n\t\t\t\t\t\t\t\t\treversed={ reversed }\n\t\t\t\t\t\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Autocomplete>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</RichText>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className={ classnames( wrapperClasses, wrapperClassName ) }>\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst RichTextContainer = compose( [\n\twithInstanceId,\n\twithBlockEditContext( ( { clientId } ) => ( { clientId } ) ),\n\twithSelect( ( select, {\n\t\tclientId,\n\t\tinstanceId,\n\t\tidentifier = instanceId,\n\t\tisSelected,\n\t} ) => {\n\t\tconst {\n\t\t\tisCaretWithinFormattedText,\n\t\t\tgetSelectionStart,\n\t\t\tgetSelectionEnd,\n\t\t\tgetSettings,\n\t\t\tdidAutomaticChange,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst selectionStart = getSelectionStart();\n\t\tconst selectionEnd = getSelectionEnd();\n\t\tconst { __experimentalCanUserUseUnfilteredHTML } = getSettings();\n\t\tif ( isSelected === undefined ) {\n\t\t\tisSelected = (\n\t\t\t\tselectionStart.clientId === clientId &&\n\t\t\t\tselectionStart.attributeKey === identifier\n\t\t\t);\n\t\t} else if ( isSelected ) {\n\t\t\tisSelected = selectionStart.clientId === clientId;\n\t\t}\n\n\t\treturn {\n\t\t\tcanUserUseUnfilteredHTML: __experimentalCanUserUseUnfilteredHTML,\n\t\t\tisCaretWithinFormattedText: isCaretWithinFormattedText(),\n\t\t\tselectionStart: isSelected ? selectionStart.offset : undefined,\n\t\t\tselectionEnd: isSelected ? selectionEnd.offset : undefined,\n\t\t\tisSelected,\n\t\t\tdidAutomaticChange: didAutomaticChange(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, {\n\t\tclientId,\n\t\tinstanceId,\n\t\tidentifier = instanceId,\n\t} ) => {\n\t\tconst {\n\t\t\t__unstableMarkLastChangeAsPersistent,\n\t\t\tenterFormattedText,\n\t\t\texitFormattedText,\n\t\t\tselectionChange,\n\t\t\t__unstableMarkAutomaticChange,\n\t\t} = dispatch( 'core/block-editor' );\n\t\tconst { undo } = dispatch( 'core/editor' );\n\n\t\treturn {\n\t\t\tonCreateUndoLevel: __unstableMarkLastChangeAsPersistent,\n\t\t\tonEnterFormattedText: enterFormattedText,\n\t\t\tonExitFormattedText: exitFormattedText,\n\t\t\tonSelectionChange( start, end ) {\n\t\t\t\tselectionChange( clientId, identifier, start, end );\n\t\t\t},\n\t\t\tmarkAutomaticChange: __unstableMarkAutomaticChange,\n\t\t\tundo,\n\t\t};\n\t} ),\n\twithFilters( 'experimentalRichText' ),\n] )( RichTextWrapper );\n\nRichTextContainer.Content = ( { value, tagName: Tag, multiline, ...props } ) => {\n\t// Handle deprecated `children` and `node` sources.\n\tif ( Array.isArray( value ) ) {\n\t\tvalue = childrenSource.toHTML( value );\n\t}\n\n\tconst MultilineTag = getMultilineTag( multiline );\n\n\tif ( ! value && MultilineTag ) {\n\t\tvalue = `<${ MultilineTag }></${ MultilineTag }>`;\n\t}\n\n\tconst content = <RawHTML>{ value }</RawHTML>;\n\n\tif ( Tag ) {\n\t\treturn <Tag { ...omit( props, [ 'format' ] ) }>{ content }</Tag>;\n\t}\n\n\treturn content;\n};\n\nRichTextContainer.isEmpty = ( value ) => {\n\treturn ! value || value.length === 0;\n};\n\nRichTextContainer.Content.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/rich-text/README.md\n */\nexport default RichTextContainer;\nexport { RichTextShortcut } from './shortcut';\nexport { RichTextToolbarButton } from './toolbar-button';\nexport { __unstableRichTextInputEvent } from './input-event';\n"]}