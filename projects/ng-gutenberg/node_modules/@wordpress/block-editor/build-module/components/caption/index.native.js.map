{"version":3,"sources":["@wordpress/block-editor/src/components/caption/index.native.js"],"names":["View","RichText","compose","withDispatch","withSelect","__","Caption","accessible","accessibilityLabel","onBlur","onChange","onFocus","isSelected","shouldDisplay","text","padding","flex","display","select","accessibilityLabelCreator","clientId","getBlockAttributes","getSelectedBlockClientId","caption","undefined","isBlockSelected","isEmpty","dispatch","updateBlockAttributes"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { RichText } from '@wordpress/block-editor';\nimport { compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\nconst Caption = ( { accessible, accessibilityLabel, onBlur, onChange, onFocus, isSelected, shouldDisplay, text } ) => (\n\t<View style={ {\tpadding: 12, flex: 1, display: shouldDisplay ? 'flex' : 'none' } }\n\t\taccessible={ accessible }\n\t\taccessibilityLabel={ accessibilityLabel }\n\t\taccessibilityRole={ 'button' }\n\t>\n\t\t<RichText\n\t\t\trootTagsToEliminate={ [ 'p' ] }\n\t\t\tplaceholder={ __( 'Write captionâ€¦' ) }\n\t\t\tvalue={ text }\n\t\t\tonChange={ onChange }\n\t\t\tunstableOnFocus={ onFocus }\n\t\t\tonBlur={ onBlur } // always assign onBlur as props\n\t\t\tisSelected={ isSelected }\n\t\t\t__unstableMobileNoFocusOnMount\n\t\t\tfontSize={ 14 }\n\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\ttextAlign={ 'center' }\n\t\t\ttagName={ '' }\n\t\t/>\n\t</View>\n);\n\nexport default compose( [\n\twithSelect( ( select, { accessibilityLabelCreator, clientId } ) => {\n\t\tconst {\n\t\t\tgetBlockAttributes,\n\t\t\tgetSelectedBlockClientId,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { caption } = getBlockAttributes( clientId );\n\t\tconst accessibilityLabel = accessibilityLabelCreator ? accessibilityLabelCreator( caption ) : undefined;\n\t\tconst isBlockSelected = getSelectedBlockClientId() === clientId;\n\n\t\t// We'll render the caption so that the soft keyboard is not forced to close on Android\n\t\t// but still hide it by setting its display style to none. See wordpress-mobile/gutenberg-mobile#1221\n\t\tconst shouldDisplay = ! RichText.isEmpty( caption ) > 0 || isBlockSelected;\n\n\t\treturn {\n\t\t\taccessibilityLabel,\n\t\t\tshouldDisplay,\n\t\t\ttext: caption,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId } ) => {\n\t\tconst { updateBlockAttributes } = dispatch( 'core/block-editor' );\n\t\treturn {\n\t\t\tonChange: ( caption ) => {\n\t\t\t\tupdateBlockAttributes( clientId, { caption } );\n\t\t\t},\n\t\t};\n\t} ),\n] )( Caption );\n"]}