{"version":3,"sources":["@wordpress/block-editor/src/components/block-inspector/index.js"],"names":["isEmpty","__","getBlockType","getUnregisteredTypeHandlerName","PanelBody","withSelect","SkipToSelectedBlock","BlockCard","InspectorControls","InspectorAdvancedControls","BlockStyles","MultiSelectionInspector","DefaultStylePicker","BlockInspector","blockType","count","hasBlockStyles","selectedBlockClientId","selectedBlockName","showNoBlockSelectedMessage","isSelectedBlockUnregistered","name","fills","select","getSelectedBlockClientId","getSelectedBlockCount","getBlockName","getBlockStyles","blockStyles","length"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { isEmpty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { getBlockType, getUnregisteredTypeHandlerName } from '@wordpress/blocks';\nimport { PanelBody } from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport SkipToSelectedBlock from '../skip-to-selected-block';\nimport BlockCard from '../block-card';\nimport InspectorControls from '../inspector-controls';\nimport InspectorAdvancedControls from '../inspector-advanced-controls';\nimport BlockStyles from '../block-styles';\nimport MultiSelectionInspector from '../multi-selection-inspector';\nimport DefaultStylePicker from '../default-style-picker';\nconst BlockInspector = ( {\n\tblockType,\n\tcount,\n\thasBlockStyles,\n\tselectedBlockClientId,\n\tselectedBlockName,\n\tshowNoBlockSelectedMessage = true,\n} ) => {\n\tif ( count > 1 ) {\n\t\treturn <MultiSelectionInspector />;\n\t}\n\n\tconst isSelectedBlockUnregistered = selectedBlockName === getUnregisteredTypeHandlerName();\n\n\t/*\n\t * If the selected block is of an unregistered type, avoid showing it as an actual selection\n\t * because we want the user to focus on the unregistered block warning, not block settings.\n\t */\n\tif ( ! blockType || ! selectedBlockClientId || isSelectedBlockUnregistered ) {\n\t\tif ( showNoBlockSelectedMessage ) {\n\t\t\treturn (\n\t\t\t\t<span className=\"editor-block-inspector__no-blocks block-editor-block-inspector__no-blocks\">\n\t\t\t\t\t{ __( 'No block selected.' ) }\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockCard blockType={ blockType } />\n\t\t\t{ hasBlockStyles && (\n\t\t\t\t<div>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __( 'Styles' ) }\n\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockStyles\n\t\t\t\t\t\t\tclientId={ selectedBlockClientId }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DefaultStylePicker blockName={ blockType.name } />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<div><InspectorControls.Slot /></div>\n\t\t\t<div>\n\t\t\t\t<InspectorAdvancedControls.Slot>\n\t\t\t\t\t{ ( fills ) => ! isEmpty( fills ) && (\n\t\t\t\t\t\t<PanelBody\n\t\t\t\t\t\t\tclassName=\"editor-block-inspector__advanced block-editor-block-inspector__advanced\"\n\t\t\t\t\t\t\ttitle={ __( 'Advanced' ) }\n\t\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ fills }\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\t\t\t\t</InspectorAdvancedControls.Slot>\n\t\t\t</div>\n\t\t\t<SkipToSelectedBlock key=\"back\" />\n\t\t</>\n\t);\n};\n\nexport default withSelect(\n\t( select ) => {\n\t\tconst { getSelectedBlockClientId, getSelectedBlockCount, getBlockName } = select( 'core/block-editor' );\n\t\tconst { getBlockStyles } = select( 'core/blocks' );\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\tconst selectedBlockName = selectedBlockClientId && getBlockName( selectedBlockClientId );\n\t\tconst blockType = selectedBlockClientId && getBlockType( selectedBlockName );\n\t\tconst blockStyles = selectedBlockClientId && getBlockStyles( selectedBlockName );\n\t\treturn {\n\t\t\tcount: getSelectedBlockCount(),\n\t\t\thasBlockStyles: blockStyles && blockStyles.length > 0,\n\t\t\tselectedBlockName,\n\t\t\tselectedBlockClientId,\n\t\t\tblockType,\n\t\t};\n\t}\n)( BlockInspector );\n"]}