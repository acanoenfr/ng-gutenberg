import { createElement, Fragment } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { Button, Icon } from '@wordpress/components';
import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import BlockDropZone from '../block-drop-zone';
import Inserter from '../inserter';

function ButtonBlockAppender(_ref) {
  var rootClientId = _ref.rootClientId,
      className = _ref.className;
  return createElement(Fragment, null, createElement(BlockDropZone, {
    rootClientId: rootClientId
  }), createElement(Inserter, {
    rootClientId: rootClientId,
    renderToggle: function renderToggle(_ref2) {
      var onToggle = _ref2.onToggle,
          disabled = _ref2.disabled,
          isOpen = _ref2.isOpen;
      return createElement(Button, {
        className: classnames(className, 'block-editor-button-block-appender'),
        onClick: onToggle,
        "aria-expanded": isOpen,
        disabled: disabled
      }, createElement("span", {
        className: "screen-reader-text"
      }, __('Add Block')), createElement(Icon, {
        icon: "insert"
      }));
    },
    isAppender: true
  }));
}
/**
 * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/button-block-appender/README.md
 */


export default ButtonBlockAppender;
//# sourceMappingURL=index.js.map