{"version":3,"sources":["@wordpress/block-editor/src/components/default-style-picker/index.js"],"names":["DefaultStylePicker","blockName","select","settings","getSettings","preferredStyleVariations","__experimentalPreferredStyleVariations","preferredStyle","onUpdatePreferredStyleVariations","styles","getBlockStyles","selectOptions","label","value","map","name","selectOnChange","blockStyle"],"mappings":";;;;;;;;;AAQA;;;;AALA;;AAMA;;AACA;;AACA;;AAXA;;;;AAKA;;;AAQe,SAASA,kBAAT,OAA6C;AAAA,MAAdC,SAAc,QAAdA,SAAc;;AAAA,mBAKvD,qBACH,UAAEC,MAAF,EAAc;AACb,QAAMC,QAAQ,GAAGD,MAAM,CAAE,mBAAF,CAAN,CAA8BE,WAA9B,EAAjB;AACA,QAAMC,wBAAwB,GAAGF,QAAQ,CAACG,sCAA1C;AACA,WAAO;AACNC,MAAAA,cAAc,EAAE,iBACfF,wBADe,EAEf,CAAE,OAAF,EAAWJ,SAAX,CAFe,CADV;AAKNO,MAAAA,gCAAgC,EAAE,iBACjCH,wBADiC,EAEjC,CAAE,UAAF,CAFiC,EAGjC,IAHiC,CAL5B;AAUNI,MAAAA,MAAM,EAAEP,MAAM,CAAE,aAAF,CAAN,CAAwBQ,cAAxB,CAAwCT,SAAxC;AAVF,KAAP;AAYA,GAhBE,EAiBH,CAAEA,SAAF,CAjBG,CALuD;AAAA,MAE1DM,cAF0D,cAE1DA,cAF0D;AAAA,MAG1DC,gCAH0D,cAG1DA,gCAH0D;AAAA,MAI1DC,MAJ0D,cAI1DA,MAJ0D;;AAwB3D,MAAME,aAAa,GAAG,sBACrB;AAAA,YACC;AAAEC,MAAAA,KAAK,EAAE,cAAI,SAAJ,CAAT;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KADD,0CAEIJ,MAAM,CAACK,GAAP,CAAY;AAAA,UAAIF,KAAJ,SAAIA,KAAJ;AAAA,UAAWG,IAAX,SAAWA,IAAX;AAAA,aAAyB;AAAEH,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,KAAK,EAAEE;AAAhB,OAAzB;AAAA,KAAZ,CAFJ;AAAA,GADqB,EAKrB,CAAEN,MAAF,CALqB,CAAtB;AAOA,MAAMO,cAAc,GAAG,0BACtB,UAAEC,UAAF,EAAkB;AACjBT,IAAAA,gCAAgC,CAAEP,SAAF,EAAagB,UAAb,CAAhC;AACA,GAHqB,EAItB,CAAEhB,SAAF,EAAaO,gCAAb,CAJsB,CAAvB;AAOA,SAAOA,gCAAgC,IACtC,4BAAC,yBAAD;AACC,IAAA,OAAO,EAAGG,aADX;AAEC,IAAA,KAAK,EAAGJ,cAAc,IAAI,EAF3B;AAGC,IAAA,KAAK,EAAG,cAAI,eAAJ,CAHT;AAIC,IAAA,QAAQ,EAAGS;AAJZ,IADD;AAQA","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { SelectControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\nexport default function DefaultStylePicker( { blockName } ) {\n\tconst {\n\t\tpreferredStyle,\n\t\tonUpdatePreferredStyleVariations,\n\t\tstyles,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst settings = select( 'core/block-editor' ).getSettings();\n\t\t\tconst preferredStyleVariations = settings.__experimentalPreferredStyleVariations;\n\t\t\treturn {\n\t\t\t\tpreferredStyle: get(\n\t\t\t\t\tpreferredStyleVariations,\n\t\t\t\t\t[ 'value', blockName ]\n\t\t\t\t),\n\t\t\t\tonUpdatePreferredStyleVariations: get(\n\t\t\t\t\tpreferredStyleVariations,\n\t\t\t\t\t[ 'onChange' ],\n\t\t\t\t\tnull\n\t\t\t\t),\n\t\t\t\tstyles: select( 'core/blocks' ).getBlockStyles( blockName ),\n\t\t\t};\n\t\t},\n\t\t[ blockName ]\n\t);\n\tconst selectOptions = useMemo(\n\t\t() => ( [\n\t\t\t{ label: __( 'Not set' ), value: '' },\n\t\t\t...styles.map( ( { label, name } ) => ( { label, value: name } ) ),\n\t\t] ),\n\t\t[ styles ],\n\t);\n\tconst selectOnChange = useCallback(\n\t\t( blockStyle ) => {\n\t\t\tonUpdatePreferredStyleVariations( blockName, blockStyle );\n\t\t},\n\t\t[ blockName, onUpdatePreferredStyleVariations ]\n\t);\n\n\treturn onUpdatePreferredStyleVariations && (\n\t\t<SelectControl\n\t\t\toptions={ selectOptions }\n\t\t\tvalue={ preferredStyle || '' }\n\t\t\tlabel={ __( 'Default Style' ) }\n\t\t\tonChange={ selectOnChange }\n\t\t/>\n\t);\n}\n"]}