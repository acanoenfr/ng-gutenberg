{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-mobile-toolbar.native.js"],"names":["BlockMobileToolbar","clientId","onDelete","order","styles","toolbar","spacer","hint","select","getBlockIndex","dispatch","rootClientId","removeBlock","Keyboard","dismiss"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAlBA;;;;AAKA;;;;AAQA;;;AAOA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAC1BC,QAD0B,QAC1BA,QAD0B;AAAA,MAE1BC,QAF0B,QAE1BA,QAF0B;AAAA,MAG1BC,KAH0B,QAG1BA,KAH0B;AAAA,SAK1B,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGC,4BAAOC;AAArB,KACC,4BAAC,mBAAD;AAAY,IAAA,SAAS,EAAG,CAAEJ,QAAF;AAAxB,IADD,EAGC,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGG,4BAAOE;AAArB,IAHD,EAKC,4BAAC,0BAAD,CAAmB,IAAnB,OALD,EAOC,4BAAC,yBAAD;AACC,IAAA,KAAK,EACJ;AACC;AACA,kBAAI,wBAAJ,CAFD,EAGCH,KAAK,GAAG,CAHT,CAFF;AAQC,IAAA,OAAO,EAAGD,QARX;AASC,IAAA,IAAI,EAAC,OATN;AAUC,IAAA,UAAU,EAAG;AAAEK,MAAAA,IAAI,EAAE,cAAI,gCAAJ;AAAR;AAVd,IAPD,CAL0B;AAAA,CAA3B;;eA2Be,sBACd,sBAAY,UAAEC,MAAF,SAA4B;AAAA,MAAhBP,QAAgB,SAAhBA,QAAgB;;AAAA,gBAGnCO,MAAM,CAAE,mBAAF,CAH6B;AAAA,MAEtCC,aAFsC,WAEtCA,aAFsC;;AAKvC,SAAO;AACNN,IAAAA,KAAK,EAAEM,aAAa,CAAER,QAAF;AADd,GAAP;AAGA,CARD,CADc,EAUd,wBAAc,UAAES,QAAF,SAA4C;AAAA,MAA9BT,QAA8B,SAA9BA,QAA8B;AAAA,MAApBU,YAAoB,SAApBA,YAAoB;;AAAA,kBACjCD,QAAQ,CAAE,mBAAF,CADyB;AAAA,MACjDE,WADiD,aACjDA,WADiD;;AAEzD,SAAO;AACNV,IAAAA,QAAQ,EAAE,oBAAM;AACfW,4BAASC,OAAT;;AACAF,MAAAA,WAAW,CAAEX,QAAF,EAAYU,YAAZ,CAAX;AACA;AAJK,GAAP;AAMA,CARD,CAVc,EAmBZX,kBAnBY,C","sourcesContent":["/**\n * External dependencies\n */\nimport { Keyboard, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { ToolbarButton } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport styles from './block-mobile-toolbar.scss';\nimport BlockMover from '../block-mover';\nimport InspectorControls from '../inspector-controls';\n\nconst BlockMobileToolbar = ( {\n\tclientId,\n\tonDelete,\n\torder,\n} ) => (\n\t<View style={ styles.toolbar }>\n\t\t<BlockMover clientIds={ [ clientId ] } />\n\n\t\t<View style={ styles.spacer } />\n\n\t\t<InspectorControls.Slot />\n\n\t\t<ToolbarButton\n\t\t\ttitle={\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: accessibility text. %s: current block position (number). */\n\t\t\t\t\t__( 'Remove block at row %s' ),\n\t\t\t\t\torder + 1\n\t\t\t\t)\n\t\t\t}\n\t\t\tonClick={ onDelete }\n\t\t\ticon=\"trash\"\n\t\t\textraProps={ { hint: __( 'Double tap to remove the block' ) } }\n\t\t/>\n\t</View>\n);\n\nexport default compose(\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst {\n\t\t\tgetBlockIndex,\n\t\t} = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\torder: getBlockIndex( clientId ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId, rootClientId } ) => {\n\t\tconst { removeBlock } = dispatch( 'core/block-editor' );\n\t\treturn {\n\t\t\tonDelete: () => {\n\t\t\t\tKeyboard.dismiss();\n\t\t\t\tremoveBlock( clientId, rootClientId );\n\t\t\t},\n\t\t};\n\t} ),\n)( BlockMobileToolbar );\n"]}