"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _blockTitle = _interopRequireDefault(require("../block-title"));

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Block breadcrumb component, displaying the label of the block. If the block
 * descends from a root block, a button is displayed enabling the user to select
 * the root block.
 *
 * @param {string}   props.clientId        Client ID of block.
 * @return {WPElement} Block Breadcrumb.
 */
var BlockBreadcrumb = (0, _element.forwardRef)(function (_ref, ref) {
  var clientId = _ref.clientId;

  var _useDispatch = (0, _data.useDispatch)('core/block-editor'),
      setNavigationMode = _useDispatch.setNavigationMode;

  var _useSelect = (0, _data.useSelect)(function (select) {
    return {
      rootClientId: select('core/block-editor').getBlockRootClientId(clientId)
    };
  }),
      rootClientId = _useSelect.rootClientId;

  return (0, _element.createElement)("div", {
    className: "editor-block-list__breadcrumb block-editor-block-list__breadcrumb"
  }, (0, _element.createElement)(_components.Toolbar, null, rootClientId && (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_blockTitle.default, {
    clientId: rootClientId
  }), (0, _element.createElement)("span", {
    className: "editor-block-list__descendant-arrow block-editor-block-list__descendant-arrow"
  })), (0, _element.createElement)(_components.Button, {
    ref: ref,
    onClick: function onClick() {
      return setNavigationMode(false);
    }
  }, (0, _element.createElement)(_blockTitle.default, {
    clientId: clientId
  }))));
});
var _default = BlockBreadcrumb;
exports.default = _default;
//# sourceMappingURL=breadcrumb.js.map