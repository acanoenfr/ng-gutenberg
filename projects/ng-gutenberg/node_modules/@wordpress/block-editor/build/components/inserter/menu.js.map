{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/menu.js"],"names":["MAX_SUGGESTED_ITEMS","stopKeyPropagation","event","stopPropagation","searchItems","items","searchTerm","normalizedSearchTerm","normalizeTerm","matchSearch","string","indexOf","categories","filter","item","itemCategory","slug","category","title","keywords","term","replace","toLowerCase","trim","InserterMenu","arguments","state","childItems","filterValue","hoveredItem","suggestedItems","reusableItems","itemsPerCategory","openPanels","onChangeSearchInput","bind","onHover","panels","inserterResults","props","fetchReusableBlocks","prevProps","target","value","setState","showInsertionPoint","hideInsertionPoint","name","ref","panel","isOpened","setTimeout","current","alignWithTop","filteredItems","length","push","concat","Object","keys","debouncedSpeak","rootChildBlocks","maxSuggestedItems","utility","slice","getCategoryIndex","itemList","filterOpenPanels","resultCount","reduce","accumulator","currentCategorySlug","resultsFoundMessage","LEFT","DOWN","RIGHT","UP","BACKSPACE","ENTER","keyCode","instanceId","onSelect","rootClientId","showInserterHelpPanel","isPanelOpen","hasItems","hoveredItemBlockType","hasHelpPanel","onKeyDown","onTogglePanel","bindPanel","categoryItems","icon","post_type","fills","example","initialAttributes","Component","select","clientId","isAppender","getInserterItems","getBlockName","getBlockRootClientId","getBlockSelectionEnd","getSettings","getChildBlockNames","destinationRootClientId","end","undefined","destinationRootBlockName","dispatch","ownProps","__experimentalFetchReusableBlocks","getInsertionIndex","getBlockIndex","getBlockOrder","index","replaceBlocks","insertBlock","getSelectedBlock","selectedBlock","insertedBlock","withSpokenMessages","withInstanceId","withSafeTimeout"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tfilter,\n\tfind,\n\tfindIndex,\n\tflow,\n\tgroupBy,\n\tisEmpty,\n\tmap,\n\tsome,\n\tsortBy,\n\twithout,\n\tincludes,\n\tdeburr,\n} from 'lodash';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, _n, _x, sprintf } from '@wordpress/i18n';\nimport { Component, createRef } from '@wordpress/element';\nimport {\n\tPanelBody,\n\twithSpokenMessages,\n\tTip,\n} from '@wordpress/components';\nimport {\n\tgetCategories,\n\tisReusableBlock,\n\tcreateBlock,\n\tisUnmodifiedDefaultBlock,\n\tgetBlockType,\n\tgetBlockFromExample,\n} from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { withInstanceId, compose, withSafeTimeout } from '@wordpress/compose';\nimport { LEFT, RIGHT, UP, DOWN, BACKSPACE, ENTER } from '@wordpress/keycodes';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport BlockPreview from '../block-preview';\nimport BlockTypesList from '../block-types-list';\nimport BlockCard from '../block-card';\nimport ChildBlocks from './child-blocks';\nimport __experimentalInserterMenuExtension from '../inserter-menu-extension';\n\nconst MAX_SUGGESTED_ITEMS = 9;\n\nconst stopKeyPropagation = ( event ) => event.stopPropagation();\n\n/**\n * Filters an item list given a search term.\n *\n * @param {Array} items        Item list\n * @param {string} searchTerm  Search term.\n *\n * @return {Array}             Filtered item list.\n */\nexport const searchItems = ( items, searchTerm ) => {\n\tconst normalizedSearchTerm = normalizeTerm( searchTerm );\n\tconst matchSearch = ( string ) => normalizeTerm( string ).indexOf( normalizedSearchTerm ) !== -1;\n\tconst categories = getCategories();\n\n\treturn items.filter( ( item ) => {\n\t\tconst itemCategory = find( categories, { slug: item.category } );\n\t\treturn matchSearch( item.title ) || some( item.keywords, matchSearch ) || ( itemCategory && matchSearch( itemCategory.title ) );\n\t} );\n};\n\n/**\n * Converts the search term into a normalized term.\n *\n * @param {string} term The search term to normalize.\n *\n * @return {string} The normalized search term.\n */\nexport const normalizeTerm = ( term ) => {\n\t// Disregard diacritics.\n\t//  Input: \"média\"\n\tterm = deburr( term );\n\n\t// Accommodate leading slash, matching autocomplete expectations.\n\t//  Input: \"/media\"\n\tterm = term.replace( /^\\//, '' );\n\n\t// Lowercase.\n\t//  Input: \"MEDIA\"\n\tterm = term.toLowerCase();\n\n\t// Strip leading and trailing whitespace.\n\t//  Input: \" media \"\n\tterm = term.trim();\n\n\treturn term;\n};\n\nexport class InserterMenu extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tchildItems: [],\n\t\t\tfilterValue: '',\n\t\t\thoveredItem: null,\n\t\t\tsuggestedItems: [],\n\t\t\treusableItems: [],\n\t\t\titemsPerCategory: {},\n\t\t\topenPanels: [ 'suggested' ],\n\t\t};\n\t\tthis.onChangeSearchInput = this.onChangeSearchInput.bind( this );\n\t\tthis.onHover = this.onHover.bind( this );\n\t\tthis.panels = {};\n\t\tthis.inserterResults = createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\t// This could be replaced by a resolver.\n\t\tthis.props.fetchReusableBlocks();\n\t\tthis.filter();\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( prevProps.items !== this.props.items ) {\n\t\t\tthis.filter( this.state.filterValue );\n\t\t}\n\t}\n\n\tonChangeSearchInput( event ) {\n\t\tthis.filter( event.target.value );\n\t}\n\n\tonHover( item ) {\n\t\tthis.setState( {\n\t\t\thoveredItem: item,\n\t\t} );\n\n\t\tconst { showInsertionPoint, hideInsertionPoint } = this.props;\n\t\tif ( item ) {\n\t\t\tshowInsertionPoint();\n\t\t} else {\n\t\t\thideInsertionPoint();\n\t\t}\n\t}\n\n\tbindPanel( name ) {\n\t\treturn ( ref ) => {\n\t\t\tthis.panels[ name ] = ref;\n\t\t};\n\t}\n\n\tonTogglePanel( panel ) {\n\t\treturn () => {\n\t\t\tconst isOpened = this.state.openPanels.indexOf( panel ) !== -1;\n\t\t\tif ( isOpened ) {\n\t\t\t\tthis.setState( {\n\t\t\t\t\topenPanels: without( this.state.openPanels, panel ),\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tthis.setState( {\n\t\t\t\t\topenPanels: [\n\t\t\t\t\t\t...this.state.openPanels,\n\t\t\t\t\t\tpanel,\n\t\t\t\t\t],\n\t\t\t\t} );\n\n\t\t\t\tthis.props.setTimeout( () => {\n\t\t\t\t\t// We need a generic way to access the panel's container\n\t\t\t\t\tscrollIntoView( this.panels[ panel ], this.inserterResults.current, {\n\t\t\t\t\t\talignWithTop: true,\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\tfilterOpenPanels( filterValue, itemsPerCategory, filteredItems, reusableItems ) {\n\t\tif ( filterValue === this.state.filterValue ) {\n\t\t\treturn this.state.openPanels;\n\t\t}\n\t\tif ( ! filterValue ) {\n\t\t\treturn [ 'suggested' ];\n\t\t}\n\t\tlet openPanels = [];\n\t\tif ( reusableItems.length > 0 ) {\n\t\t\topenPanels.push( 'reusable' );\n\t\t}\n\t\tif ( filteredItems.length > 0 ) {\n\t\t\topenPanels = openPanels.concat(\n\t\t\t\tObject.keys( itemsPerCategory )\n\t\t\t);\n\t\t}\n\t\treturn openPanels;\n\t}\n\n\tfilter( filterValue = '' ) {\n\t\tconst { debouncedSpeak, items, rootChildBlocks } = this.props;\n\n\t\tconst filteredItems = searchItems( items, filterValue );\n\n\t\tconst childItems = filter( filteredItems, ( { name } ) => includes( rootChildBlocks, name ) );\n\n\t\tlet suggestedItems = [];\n\t\tif ( ! filterValue ) {\n\t\t\tconst maxSuggestedItems = this.props.maxSuggestedItems || MAX_SUGGESTED_ITEMS;\n\t\t\tsuggestedItems = filter( items, ( item ) => item.utility > 0 ).slice( 0, maxSuggestedItems );\n\t\t}\n\n\t\tconst reusableItems = filter( filteredItems, { category: 'reusable' } );\n\n\t\tconst getCategoryIndex = ( item ) => {\n\t\t\treturn findIndex( getCategories(), ( category ) => category.slug === item.category );\n\t\t};\n\t\tconst itemsPerCategory = flow(\n\t\t\t( itemList ) => filter( itemList, ( item ) => item.category !== 'reusable' ),\n\t\t\t( itemList ) => sortBy( itemList, getCategoryIndex ),\n\t\t\t( itemList ) => groupBy( itemList, 'category' )\n\t\t)( filteredItems );\n\n\t\tthis.setState( {\n\t\t\thoveredItem: null,\n\t\t\tchildItems,\n\t\t\tfilterValue,\n\t\t\tsuggestedItems,\n\t\t\treusableItems,\n\t\t\titemsPerCategory,\n\t\t\topenPanels: this.filterOpenPanels(\n\t\t\t\tfilterValue,\n\t\t\t\titemsPerCategory,\n\t\t\t\tfilteredItems,\n\t\t\t\treusableItems\n\t\t\t),\n\t\t} );\n\n\t\tconst resultCount = Object.keys( itemsPerCategory ).reduce( ( accumulator, currentCategorySlug ) => {\n\t\t\treturn accumulator + itemsPerCategory[ currentCategorySlug ].length;\n\t\t}, 0 );\n\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t_n( '%d result found.', '%d results found.', resultCount ),\n\t\t\tresultCount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}\n\n\tonKeyDown( event ) {\n\t\tif ( includes( [ LEFT, DOWN, RIGHT, UP, BACKSPACE, ENTER ], event.keyCode ) ) {\n\t\t\t// Stop the key event from propagating up to ObserveTyping.startTypingInTextField.\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { instanceId, onSelect, rootClientId, showInserterHelpPanel } = this.props;\n\t\tconst {\n\t\t\tchildItems,\n\t\t\thoveredItem,\n\t\t\titemsPerCategory,\n\t\t\topenPanels,\n\t\t\treusableItems,\n\t\t\tsuggestedItems,\n\t\t\tfilterValue,\n\t\t} = this.state;\n\n\t\tconst isPanelOpen = ( panel ) => openPanels.indexOf( panel ) !== -1;\n\t\tconst hasItems = ! isEmpty( suggestedItems ) || ! isEmpty( reusableItems ) || ! isEmpty( itemsPerCategory );\n\t\tconst hoveredItemBlockType = hoveredItem ? getBlockType( hoveredItem.name ) : null;\n\t\tconst hasHelpPanel = hasItems && showInserterHelpPanel;\n\n\t\t// Disable reason (no-autofocus): The inserter menu is a modal display, not one which\n\t\t// is always visible, and one which already incurs this behavior of autoFocus via\n\t\t// Popover's focusOnMount.\n\t\t// Disable reason (no-static-element-interactions): Navigational key-presses within\n\t\t// the menu are prevented from triggering WritingFlow and ObserveTyping interactions.\n\t\t/* eslint-disable jsx-a11y/no-autofocus, jsx-a11y/no-static-element-interactions */\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ classnames( 'editor-inserter__menu block-editor-inserter__menu', {\n\t\t\t\t\t'has-help-panel': hasHelpPanel,\n\t\t\t\t} ) }\n\t\t\t\tonKeyPress={ stopKeyPropagation }\n\t\t\t\tonKeyDown={ this.onKeyDown }\n\t\t\t>\n\t\t\t\t<div className=\"block-editor-inserter__main-area\">\n\t\t\t\t\t<label htmlFor={ `block-editor-inserter__search-${ instanceId }` } className=\"screen-reader-text\">\n\t\t\t\t\t\t{ __( 'Search for a block' ) }\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={ `block-editor-inserter__search-${ instanceId }` }\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tplaceholder={ __( 'Search for a block' ) }\n\t\t\t\t\t\tclassName=\"editor-inserter__search block-editor-inserter__search\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonChange={ this.onChangeSearchInput }\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"editor-inserter__results block-editor-inserter__results\"\n\t\t\t\t\t\tref={ this.inserterResults }\n\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\taria-label={ __( 'Available block types' ) }\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<ChildBlocks\n\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\titems={ childItems }\n\t\t\t\t\t\t\tonSelect={ onSelect }\n\t\t\t\t\t\t\tonHover={ this.onHover }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{ !! suggestedItems.length &&\n\t\t\t\t\t\t\t<PanelBody\n\t\t\t\t\t\t\t\ttitle={ _x( 'Most Used', 'blocks' ) }\n\t\t\t\t\t\t\t\topened={ isPanelOpen( 'suggested' ) }\n\t\t\t\t\t\t\t\tonToggle={ this.onTogglePanel( 'suggested' ) }\n\t\t\t\t\t\t\t\tref={ this.bindPanel( 'suggested' ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BlockTypesList items={ suggestedItems } onSelect={ onSelect } onHover={ this.onHover } />\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{ map( getCategories(), ( category ) => {\n\t\t\t\t\t\t\tconst categoryItems = itemsPerCategory[ category.slug ];\n\t\t\t\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<PanelBody\n\t\t\t\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t\t\t\t\topened={ isPanelOpen( category.slug ) }\n\t\t\t\t\t\t\t\t\tonToggle={ this.onTogglePanel( category.slug ) }\n\t\t\t\t\t\t\t\t\tref={ this.bindPanel( category.slug ) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<BlockTypesList items={ categoryItems } onSelect={ onSelect } onHover={ this.onHover } />\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ) }\n\n\t\t\t\t\t\t{ !! reusableItems.length && (\n\t\t\t\t\t\t\t<PanelBody\n\t\t\t\t\t\t\t\tclassName=\"editor-inserter__reusable-blocks-panel block-editor-inserter__reusable-blocks-panel\"\n\t\t\t\t\t\t\t\ttitle={ __( 'Reusable' ) }\n\t\t\t\t\t\t\t\topened={ isPanelOpen( 'reusable' ) }\n\t\t\t\t\t\t\t\tonToggle={ this.onTogglePanel( 'reusable' ) }\n\t\t\t\t\t\t\t\ticon=\"controls-repeat\"\n\t\t\t\t\t\t\t\tref={ this.bindPanel( 'reusable' ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BlockTypesList items={ reusableItems } onSelect={ onSelect } onHover={ this.onHover } />\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName=\"editor-inserter__manage-reusable-blocks block-editor-inserter__manage-reusable-blocks\"\n\t\t\t\t\t\t\t\t\thref={ addQueryArgs( 'edit.php', { post_type: 'wp_block' } ) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Manage All Reusable Blocks' ) }\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t<__experimentalInserterMenuExtension.Slot\n\t\t\t\t\t\t\tfillProps={ {\n\t\t\t\t\t\t\t\tonSelect,\n\t\t\t\t\t\t\t\tonHover: this.onHover,\n\t\t\t\t\t\t\t\tfilterValue,\n\t\t\t\t\t\t\t\thasItems,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ ( fills ) => {\n\t\t\t\t\t\t\t\tif ( fills.length ) {\n\t\t\t\t\t\t\t\t\treturn fills;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( ! hasItems ) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<p className=\"editor-inserter__no-results block-editor-inserter__no-results\">{ __( 'No blocks found.' ) }</p>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t</__experimentalInserterMenuExtension.Slot>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{ hasHelpPanel && (\n\t\t\t\t\t<div className=\"block-editor-inserter__menu-help-panel\">\n\t\t\t\t\t\t{ hoveredItem && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{ ! isReusableBlock( hoveredItem ) && (\n\t\t\t\t\t\t\t\t\t<BlockCard blockType={ hoveredItemBlockType } />\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<div className=\"block-editor-inserter__preview\">\n\t\t\t\t\t\t\t\t\t{ ( isReusableBlock( hoveredItem ) || hoveredItemBlockType.example ) ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"block-editor-inserter__preview-content\">\n\t\t\t\t\t\t\t\t\t\t\t<BlockPreview\n\t\t\t\t\t\t\t\t\t\t\t\tpadding={ 10 }\n\t\t\t\t\t\t\t\t\t\t\t\tviewportWidth={ 500 }\n\t\t\t\t\t\t\t\t\t\t\t\tblocks={\n\t\t\t\t\t\t\t\t\t\t\t\t\thoveredItemBlockType.example ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetBlockFromExample( hoveredItem.name, hoveredItemBlockType.example ) :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcreateBlock( hoveredItem.name, hoveredItem.initialAttributes )\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"block-editor-inserter__preview-content-missing\">\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'No Preview Available.' ) }\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ ! hoveredItem && (\n\t\t\t\t\t\t\t<div className=\"block-editor-inserter__menu-help-panel-no-block\">\n\t\t\t\t\t\t\t\t<div className=\"block-editor-inserter__menu-help-panel-no-block-text\">\n\t\t\t\t\t\t\t\t\t<div className=\"block-editor-inserter__menu-help-panel-title\">{ __( 'Content Blocks' ) }</div>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'Welcome to the wonderful world of blocks! Blocks are the basis of all content within the editor.'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'There are blocks available for all kinds of content: insert text, headings, images, lists, videos, tables, and lots more.'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'Browse through the library to learn more about what each block does.'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Tip>\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'While writing, you can press \"/\" to quickly insert new blocks.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</Tip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t);\n\t\t/* eslint-enable jsx-a11y/no-autofocus, jsx-a11y/no-static-element-interactions */\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select, { clientId, isAppender, rootClientId, showInserterHelpPanel } ) => {\n\t\tconst {\n\t\t\tgetInserterItems,\n\t\t\tgetBlockName,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockSelectionEnd,\n\t\t\tgetSettings,\n\t\t} = select( 'core/block-editor' );\n\t\tconst {\n\t\t\tgetChildBlockNames,\n\t\t} = select( 'core/blocks' );\n\n\t\tlet destinationRootClientId = rootClientId;\n\t\tif ( ! destinationRootClientId && ! clientId && ! isAppender ) {\n\t\t\tconst end = getBlockSelectionEnd();\n\t\t\tif ( end ) {\n\t\t\t\tdestinationRootClientId = getBlockRootClientId( end ) || undefined;\n\t\t\t}\n\t\t}\n\t\tconst destinationRootBlockName = getBlockName( destinationRootClientId );\n\n\t\treturn {\n\t\t\trootChildBlocks: getChildBlockNames( destinationRootBlockName ),\n\t\t\titems: getInserterItems( destinationRootClientId ),\n\t\t\tshowInserterHelpPanel: showInserterHelpPanel && getSettings().showInserterHelpPanel,\n\t\t\tdestinationRootClientId,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\n\t\tconst {\n\t\t\tshowInsertionPoint,\n\t\t\thideInsertionPoint,\n\t\t} = dispatch( 'core/block-editor' );\n\n\t\t// This should be an external action provided in the editor settings.\n\t\tconst {\n\t\t\t__experimentalFetchReusableBlocks: fetchReusableBlocks,\n\t\t} = dispatch( 'core/editor' );\n\n\t\t// To avoid duplication, getInsertionIndex is extracted and used in two event handlers\n\t\t// This breaks the withDispatch not containing any logic rule.\n\t\t// Since it's a function only called when the event handlers are called,\n\t\t// it's fine to extract it.\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfunction getInsertionIndex() {\n\t\t\tconst {\n\t\t\t\tgetBlockIndex,\n\t\t\t\tgetBlockSelectionEnd,\n\t\t\t\tgetBlockOrder,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst { clientId, destinationRootClientId, isAppender } = ownProps;\n\n\t\t\t// If the clientId is defined, we insert at the position of the block.\n\t\t\tif ( clientId ) {\n\t\t\t\treturn getBlockIndex( clientId, destinationRootClientId );\n\t\t\t}\n\n\t\t\t// If there a selected block, we insert after the selected block.\n\t\t\tconst end = getBlockSelectionEnd();\n\t\t\tif ( ! isAppender && end ) {\n\t\t\t\treturn getBlockIndex( end, destinationRootClientId ) + 1;\n\t\t\t}\n\n\t\t\t// Otherwise, we insert at the end of the current rootClientId\n\t\t\treturn getBlockOrder( destinationRootClientId ).length;\n\t\t}\n\n\t\treturn {\n\t\t\tfetchReusableBlocks,\n\t\t\tshowInsertionPoint() {\n\t\t\t\tconst index = getInsertionIndex();\n\t\t\t\tshowInsertionPoint( ownProps.destinationRootClientId, index );\n\t\t\t},\n\t\t\thideInsertionPoint,\n\t\t\tonSelect( item ) {\n\t\t\t\tconst {\n\t\t\t\t\treplaceBlocks,\n\t\t\t\t\tinsertBlock,\n\t\t\t\t} = dispatch( 'core/block-editor' );\n\t\t\t\tconst {\n\t\t\t\t\tgetSelectedBlock,\n\t\t\t\t} = select( 'core/block-editor' );\n\t\t\t\tconst { isAppender } = ownProps;\n\t\t\t\tconst { name, initialAttributes } = item;\n\t\t\t\tconst selectedBlock = getSelectedBlock();\n\t\t\t\tconst insertedBlock = createBlock( name, initialAttributes );\n\t\t\t\tif ( ! isAppender && selectedBlock && isUnmodifiedDefaultBlock( selectedBlock ) ) {\n\t\t\t\t\treplaceBlocks( selectedBlock.clientId, insertedBlock );\n\t\t\t\t} else {\n\t\t\t\t\tinsertBlock(\n\t\t\t\t\t\tinsertedBlock,\n\t\t\t\t\t\tgetInsertionIndex(),\n\t\t\t\t\t\townProps.destinationRootClientId\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\townProps.onSelect();\n\t\t\t\treturn insertedBlock;\n\t\t\t},\n\t\t};\n\t} ),\n\twithSpokenMessages,\n\twithInstanceId,\n\twithSafeTimeout\n)( InserterMenu );\n"]}