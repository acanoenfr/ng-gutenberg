{"version":3,"sources":["@wordpress/notices/src/store/selectors.js"],"names":["DEFAULT_CONTEXT","DEFAULT_NOTICES","getNotices","state","context"],"mappings":"AAAA;;;AAGA,SAASA,eAAT,QAAgC,aAAhC;AAEA;;;;;;;;;;AASA,IAAMC,eAAe,GAAG,EAAxB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;;;;;;;;;AAWA;;;;;;;;;;AASA,OAAO,SAASC,UAAT,CAAqBC,KAArB,EAAwD;AAAA,MAA5BC,OAA4B,uEAAlBJ,eAAkB;AAC9D,SAAOG,KAAK,CAAEC,OAAF,CAAL,IAAoBH,eAA3B;AACA","sourcesContent":["/**\n * Internal dependencies\n */\nimport { DEFAULT_CONTEXT } from './constants';\n\n/**\n * The default empty set of notices to return when there are no notices\n * assigned for a given notices context. This can occur if the getNotices\n * selector is called without a notice ever having been created for the\n * context. A shared value is used to ensure referential equality between\n * sequential selector calls, since otherwise `[] !== []`.\n *\n * @type {Array}\n */\nconst DEFAULT_NOTICES = [];\n\n/**\n * @typedef {Object} WPNotice Notice object.\n *\n * @property {string}  id               Unique identifier of notice.\n * @property {string}  status           Status of notice, one of `success`,\n *                                      `info`, `error`, or `warning`. Defaults\n *                                      to `info`.\n * @property {string}  content          Notice message.\n * @property {string}  __unstableHTML   Notice message as raw HTML. Intended to\n *                                      serve primarily for compatibility of\n *                                      server-rendered notices, and SHOULD NOT\n *                                      be used for notices. It is subject to\n *                                      removal without notice.\n * @property {boolean} isDismissible    Whether the notice can be dismissed by\n *                                      user. Defaults to `true`.\n * @property {string}  type             Type of notice, one of `default`,\n *                                      or `snackbar`. Defaults to `default`.\n * @property {boolean} speak            Whether the notice content should be\n *                                      announced to screen readers. Defaults to\n *                                      `true`.\n * @property {WPNoticeAction[]} actions User actions to present with notice.\n *\n */\n\n/**\n * @typedef {Object} WPNoticeAction Object describing a user action option associated with a notice.\n *\n * @property {string}    label    Message to use as action label.\n * @property {?string}   url      Optional URL of resource if action incurs\n *                                browser navigation.\n * @property {?Function} onClick  Optional function to invoke when action is\n *                                triggered by user.\n *\n */\n\n/**\n * Returns all notices as an array, optionally for a given context. Defaults to\n * the global context.\n *\n * @param {Object}  state   Notices state.\n * @param {?string} context Optional grouping context.\n *\n * @return {WPNotice[]} Array of notices.\n */\nexport function getNotices( state, context = DEFAULT_CONTEXT ) {\n\treturn state[ context ] || DEFAULT_NOTICES;\n}\n"]}