{"version":3,"sources":["@wordpress/editor/src/components/post-taxonomies/hierarchical-term-selector.js"],"names":["get","unescape","unescapeString","without","find","some","invoke","__","_x","_n","sprintf","Component","CheckboxControl","TreeSelect","withSpokenMessages","withFilters","Button","withSelect","withDispatch","withInstanceId","compose","apiFetch","addQueryArgs","buildTermsTree","DEFAULT_QUERY","per_page","orderby","order","_fields","MIN_TERMS_COUNT_FOR_FILTER","HierarchicalTermSelector","arguments","findTerm","bind","onChange","onChangeFormName","onChangeFormParent","onAddTerm","onToggleForm","setFilterValue","sortBySelected","state","loading","availableTermsTree","availableTerms","adding","formName","formParent","showForm","filterValue","filteredTermsTree","termId","props","onUpdateTerms","terms","taxonomy","hasTerm","indexOf","newTerms","rest_base","event","newValue","target","value","trim","setState","newParent","parent","name","term","parseInt","toLowerCase","preventDefault","slug","existingTerm","id","addRequest","path","method","data","undefined","findOrCreatePromise","catch","error","errorCode","code","search","then","searchResult","Promise","reject","availableTerm","newAvailableTerms","termAddedMessage","speak","xhr","statusText","fetchTerms","fetchRequest","prevProps","termsTree","treeHasSelection","termTree","children","anyChildIsSelected","map","filter","child","length","termOrChildIsSelected","termA","termB","termASelected","termBSelected","sort","getFilterMatcher","getResultCount","count","i","resultCount","resultsFoundMessage","debouncedSpeak","matchTermsForFilter","originalTerm","renderedTerms","renderTerms","instanceId","hasCreateAction","hasAssignAction","labelWithFallback","labelProperty","fallbackIsCategory","fallbackIsNotCategory","newTermButtonLabel","newTermLabel","parentSelectLabel","noParentOption","newTermSubmitLabel","inputId","filterInputId","filterLabel","groupLabel","showFilter","select","getCurrentPost","getTaxonomy","getEditedPostAttribute","dispatch","restBase","editPost"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get, unescape as unescapeString, without, find, some, invoke } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x, _n, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { CheckboxControl, TreeSelect, withSpokenMessages, withFilters, Button } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { buildTermsTree } from '../../utils/terms';\n\n/**\n * Module Constants\n */\nconst DEFAULT_QUERY = {\n\tper_page: -1,\n\torderby: 'name',\n\torder: 'asc',\n\t_fields: 'id,name,parent',\n};\n\nconst MIN_TERMS_COUNT_FOR_FILTER = 8;\n\nclass HierarchicalTermSelector extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.findTerm = this.findTerm.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.onChangeFormName = this.onChangeFormName.bind( this );\n\t\tthis.onChangeFormParent = this.onChangeFormParent.bind( this );\n\t\tthis.onAddTerm = this.onAddTerm.bind( this );\n\t\tthis.onToggleForm = this.onToggleForm.bind( this );\n\t\tthis.setFilterValue = this.setFilterValue.bind( this );\n\t\tthis.sortBySelected = this.sortBySelected.bind( this );\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tavailableTermsTree: [],\n\t\t\tavailableTerms: [],\n\t\t\tadding: false,\n\t\t\tformName: '',\n\t\t\tformParent: '',\n\t\t\tshowForm: false,\n\t\t\tfilterValue: '',\n\t\t\tfilteredTermsTree: [],\n\t\t};\n\t}\n\n\tonChange( termId ) {\n\t\tconst { onUpdateTerms, terms = [], taxonomy } = this.props;\n\t\tconst hasTerm = terms.indexOf( termId ) !== -1;\n\t\tconst newTerms = hasTerm ?\n\t\t\twithout( terms, termId ) :\n\t\t\t[ ...terms, termId ];\n\t\tonUpdateTerms( newTerms, taxonomy.rest_base );\n\t}\n\n\tonChangeFormName( event ) {\n\t\tconst newValue = event.target.value.trim() === '' ? '' : event.target.value;\n\t\tthis.setState( { formName: newValue } );\n\t}\n\n\tonChangeFormParent( newParent ) {\n\t\tthis.setState( { formParent: newParent } );\n\t}\n\n\tonToggleForm() {\n\t\tthis.setState( ( state ) => ( {\n\t\t\tshowForm: ! state.showForm,\n\t\t} ) );\n\t}\n\n\tfindTerm( terms, parent, name ) {\n\t\treturn find( terms, ( term ) => {\n\t\t\treturn ( ( ! term.parent && ! parent ) || parseInt( term.parent ) === parseInt( parent ) ) &&\n\t\t\t\tterm.name.toLowerCase() === name.toLowerCase();\n\t\t} );\n\t}\n\n\tonAddTerm( event ) {\n\t\tevent.preventDefault();\n\t\tconst { onUpdateTerms, taxonomy, terms, slug } = this.props;\n\t\tconst { formName, formParent, adding, availableTerms } = this.state;\n\t\tif ( formName === '' || adding ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// check if the term we are adding already exists\n\t\tconst existingTerm = this.findTerm( availableTerms, formParent, formName );\n\t\tif ( existingTerm ) {\n\t\t\t// if the term we are adding exists but is not selected select it\n\t\t\tif ( ! some( terms, ( term ) => term === existingTerm.id ) ) {\n\t\t\t\tonUpdateTerms( [ ...terms, existingTerm.id ], taxonomy.rest_base );\n\t\t\t}\n\t\t\tthis.setState( {\n\t\t\t\tformName: '',\n\t\t\t\tformParent: '',\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState( {\n\t\t\tadding: true,\n\t\t} );\n\t\tthis.addRequest = apiFetch( {\n\t\t\tpath: `/wp/v2/${ taxonomy.rest_base }`,\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\tname: formName,\n\t\t\t\tparent: formParent ? formParent : undefined,\n\t\t\t},\n\t\t} );\n\t\t// Tries to create a term or fetch it if it already exists\n\t\tconst findOrCreatePromise = this.addRequest\n\t\t\t.catch( ( error ) => {\n\t\t\t\tconst errorCode = error.code;\n\t\t\t\tif ( errorCode === 'term_exists' ) {\n\t\t\t\t\t// search the new category created since last fetch\n\t\t\t\t\tthis.addRequest = apiFetch( {\n\t\t\t\t\t\tpath: addQueryArgs(\n\t\t\t\t\t\t\t`/wp/v2/${ taxonomy.rest_base }`,\n\t\t\t\t\t\t\t{ ...DEFAULT_QUERY, parent: formParent || 0, search: formName }\n\t\t\t\t\t\t),\n\t\t\t\t\t} );\n\t\t\t\t\treturn this.addRequest\n\t\t\t\t\t\t.then( ( searchResult ) => {\n\t\t\t\t\t\t\treturn this.findTerm( searchResult, formParent, formName );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn Promise.reject( error );\n\t\t\t} );\n\t\tfindOrCreatePromise\n\t\t\t.then( ( term ) => {\n\t\t\t\tconst hasTerm = !! find( this.state.availableTerms, ( availableTerm ) => availableTerm.id === term.id );\n\t\t\t\tconst newAvailableTerms = hasTerm ? this.state.availableTerms : [ term, ...this.state.availableTerms ];\n\t\t\t\tconst termAddedMessage = sprintf(\n\t\t\t\t\t_x( '%s added', 'term' ),\n\t\t\t\t\tget(\n\t\t\t\t\t\tthis.props.taxonomy,\n\t\t\t\t\t\t[ 'labels', 'singular_name' ],\n\t\t\t\t\t\tslug === 'category' ? __( 'Category' ) : __( 'Term' )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis.props.speak( termAddedMessage, 'assertive' );\n\t\t\t\tthis.addRequest = null;\n\t\t\t\tthis.setState( {\n\t\t\t\t\tadding: false,\n\t\t\t\t\tformName: '',\n\t\t\t\t\tformParent: '',\n\t\t\t\t\tavailableTerms: newAvailableTerms,\n\t\t\t\t\tavailableTermsTree: this.sortBySelected( buildTermsTree( newAvailableTerms ) ),\n\t\t\t\t} );\n\t\t\t\tonUpdateTerms( [ ...terms, term.id ], taxonomy.rest_base );\n\t\t\t}, ( xhr ) => {\n\t\t\t\tif ( xhr.statusText === 'abort' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.addRequest = null;\n\t\t\t\tthis.setState( {\n\t\t\t\t\tadding: false,\n\t\t\t\t} );\n\t\t\t} );\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchTerms();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tinvoke( this.fetchRequest, [ 'abort' ] );\n\t\tinvoke( this.addRequest, [ 'abort' ] );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.taxonomy !== prevProps.taxonomy ) {\n\t\t\tthis.fetchTerms();\n\t\t}\n\t}\n\n\tfetchTerms() {\n\t\tconst { taxonomy } = this.props;\n\t\tif ( ! taxonomy ) {\n\t\t\treturn;\n\t\t}\n\t\tthis.fetchRequest = apiFetch( {\n\t\t\tpath: addQueryArgs( `/wp/v2/${ taxonomy.rest_base }`, DEFAULT_QUERY ),\n\t\t} );\n\t\tthis.fetchRequest.then(\n\t\t\t( terms ) => { // resolve\n\t\t\t\tconst availableTermsTree = this.sortBySelected( buildTermsTree( terms ) );\n\n\t\t\t\tthis.fetchRequest = null;\n\t\t\t\tthis.setState( {\n\t\t\t\t\tloading: false,\n\t\t\t\t\tavailableTermsTree,\n\t\t\t\t\tavailableTerms: terms,\n\t\t\t\t} );\n\t\t\t},\n\t\t\t( xhr ) => { // reject\n\t\t\t\tif ( xhr.statusText === 'abort' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.fetchRequest = null;\n\t\t\t\tthis.setState( {\n\t\t\t\t\tloading: false,\n\t\t\t\t} );\n\t\t\t}\n\t\t);\n\t}\n\n\tsortBySelected( termsTree ) {\n\t\tconst { terms } = this.props;\n\t\tconst treeHasSelection = ( termTree ) => {\n\t\t\tif ( terms.indexOf( termTree.id ) !== -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif ( undefined === termTree.children ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst anyChildIsSelected = termTree.children.map( treeHasSelection ).filter( ( child ) => child ).length > 0;\n\t\t\tif ( anyChildIsSelected ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst termOrChildIsSelected = ( termA, termB ) => {\n\t\t\tconst termASelected = treeHasSelection( termA );\n\t\t\tconst termBSelected = treeHasSelection( termB );\n\n\t\t\tif ( termASelected === termBSelected ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif ( termASelected && ! termBSelected ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif ( ! termASelected && termBSelected ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\t\ttermsTree.sort( termOrChildIsSelected );\n\t\treturn termsTree;\n\t}\n\n\tsetFilterValue( event ) {\n\t\tconst { availableTermsTree } = this.state;\n\t\tconst filterValue = event.target.value;\n\t\tconst filteredTermsTree = availableTermsTree.map( this.getFilterMatcher( filterValue ) ).filter( ( term ) => term );\n\t\tconst getResultCount = ( terms ) => {\n\t\t\tlet count = 0;\n\t\t\tfor ( let i = 0; i < terms.length; i++ ) {\n\t\t\t\tcount++;\n\t\t\t\tif ( undefined !== terms[ i ].children ) {\n\t\t\t\t\tcount += getResultCount( terms[ i ].children );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t};\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tfilterValue,\n\t\t\t\tfilteredTermsTree,\n\t\t\t}\n\t\t);\n\n\t\tconst resultCount = getResultCount( filteredTermsTree );\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t_n( '%d result found.', '%d results found.', resultCount ),\n\t\t\tresultCount\n\t\t);\n\t\tthis.props.debouncedSpeak( resultsFoundMessage, 'assertive' );\n\t}\n\n\tgetFilterMatcher( filterValue ) {\n\t\tconst matchTermsForFilter = ( originalTerm ) => {\n\t\t\tif ( '' === filterValue ) {\n\t\t\t\treturn originalTerm;\n\t\t\t}\n\n\t\t\t// Shallow clone, because we'll be filtering the term's children and\n\t\t\t// don't want to modify the original term.\n\t\t\tconst term = { ...originalTerm };\n\n\t\t\t// Map and filter the children, recursive so we deal with grandchildren\n\t\t\t// and any deeper levels.\n\t\t\tif ( term.children.length > 0 ) {\n\t\t\t\tterm.children = term.children.map( matchTermsForFilter ).filter( ( child ) => child );\n\t\t\t}\n\n\t\t\t// If the term's name contains the filterValue, or it has children\n\t\t\t// (i.e. some child matched at some point in the tree) then return it.\n\t\t\tif ( -1 !== term.name.toLowerCase().indexOf( filterValue.toLowerCase() ) || term.children.length > 0 ) {\n\t\t\t\treturn term;\n\t\t\t}\n\n\t\t\t// Otherwise, return false. After mapping, the list of terms will need\n\t\t\t// to have false values filtered out.\n\t\t\treturn false;\n\t\t};\n\t\treturn matchTermsForFilter;\n\t}\n\n\trenderTerms( renderedTerms ) {\n\t\tconst { terms = [] } = this.props;\n\t\treturn renderedTerms.map( ( term ) => {\n\t\t\treturn (\n\t\t\t\t<div key={ term.id } className=\"editor-post-taxonomies__hierarchical-terms-choice\">\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\tchecked={ terms.indexOf( term.id ) !== -1 }\n\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\tconst termId = parseInt( term.id, 10 );\n\t\t\t\t\t\t\tthis.onChange( termId );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tlabel={ unescapeString( term.name ) }\n\t\t\t\t\t/>\n\t\t\t\t\t{ !! term.children.length && (\n\t\t\t\t\t\t<div className=\"editor-post-taxonomies__hierarchical-terms-subchoices\">\n\t\t\t\t\t\t\t{ this.renderTerms( term.children ) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t);\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst { slug, taxonomy, instanceId, hasCreateAction, hasAssignAction } = this.props;\n\n\t\tif ( ! hasAssignAction ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { availableTermsTree, availableTerms, filteredTermsTree, formName, formParent, loading, showForm, filterValue } = this.state;\n\t\tconst labelWithFallback = ( labelProperty, fallbackIsCategory, fallbackIsNotCategory ) => get(\n\t\t\ttaxonomy,\n\t\t\t[ 'labels', labelProperty ],\n\t\t\tslug === 'category' ? fallbackIsCategory : fallbackIsNotCategory\n\t\t);\n\t\tconst newTermButtonLabel = labelWithFallback(\n\t\t\t'add_new_item',\n\t\t\t__( 'Add new category' ),\n\t\t\t__( 'Add new term' )\n\t\t);\n\t\tconst newTermLabel = labelWithFallback(\n\t\t\t'new_item_name',\n\t\t\t__( 'Add new category' ),\n\t\t\t__( 'Add new term' )\n\t\t);\n\t\tconst parentSelectLabel = labelWithFallback(\n\t\t\t'parent_item',\n\t\t\t__( 'Parent Category' ),\n\t\t\t__( 'Parent Term' )\n\t\t);\n\t\tconst noParentOption = `— ${ parentSelectLabel } —`;\n\t\tconst newTermSubmitLabel = newTermButtonLabel;\n\t\tconst inputId = `editor-post-taxonomies__hierarchical-terms-input-${ instanceId }`;\n\t\tconst filterInputId = `editor-post-taxonomies__hierarchical-terms-filter-${ instanceId }`;\n\t\tconst filterLabel = get(\n\t\t\tthis.props.taxonomy,\n\t\t\t[ 'labels', 'search_items' ],\n\t\t\t__( 'Search Terms' )\n\t\t);\n\t\tconst groupLabel = get(\n\t\t\tthis.props.taxonomy,\n\t\t\t[ 'name' ],\n\t\t\t__( 'Terms' )\n\t\t);\n\t\tconst showFilter = availableTerms.length >= MIN_TERMS_COUNT_FOR_FILTER;\n\n\t\treturn [\n\t\t\tshowFilter && <label\n\t\t\t\tkey=\"filter-label\"\n\t\t\t\thtmlFor={ filterInputId }>\n\t\t\t\t{ filterLabel }\n\t\t\t</label>,\n\t\t\tshowFilter && <input\n\t\t\t\ttype=\"search\"\n\t\t\t\tid={ filterInputId }\n\t\t\t\tvalue={ filterValue }\n\t\t\t\tonChange={ this.setFilterValue }\n\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-filter\"\n\t\t\t\tkey=\"term-filter-input\"\n\t\t\t/>,\n\t\t\t<div\n\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-list\"\n\t\t\t\tkey=\"term-list\"\n\t\t\t\ttabIndex=\"0\"\n\t\t\t\trole=\"group\"\n\t\t\t\taria-label={ groupLabel }\n\t\t\t>\n\t\t\t\t{ this.renderTerms( '' !== filterValue ? filteredTermsTree : availableTermsTree ) }\n\t\t\t</div>,\n\t\t\t! loading && hasCreateAction && (\n\t\t\t\t<Button\n\t\t\t\t\tkey=\"term-add-button\"\n\t\t\t\t\tonClick={ this.onToggleForm }\n\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-add\"\n\t\t\t\t\taria-expanded={ showForm }\n\t\t\t\t\tisLink\n\t\t\t\t>\n\t\t\t\t\t{ newTermButtonLabel }\n\t\t\t\t</Button>\n\t\t\t),\n\t\t\tshowForm && (\n\t\t\t\t<form onSubmit={ this.onAddTerm } key=\"hierarchical-terms-form\">\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor={ inputId }\n\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ newTermLabel }\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid={ inputId }\n\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-input\"\n\t\t\t\t\t\tvalue={ formName }\n\t\t\t\t\t\tonChange={ this.onChangeFormName }\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t{ !! availableTerms.length &&\n\t\t\t\t\t\t<TreeSelect\n\t\t\t\t\t\t\tlabel={ parentSelectLabel }\n\t\t\t\t\t\t\tnoOptionLabel={ noParentOption }\n\t\t\t\t\t\t\tonChange={ this.onChangeFormParent }\n\t\t\t\t\t\t\tselectedId={ formParent }\n\t\t\t\t\t\t\ttree={ availableTermsTree }\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tisDefault\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ newTermSubmitLabel }\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t),\n\t\t];\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { slug } ) => {\n\t\tconst { getCurrentPost } = select( 'core/editor' );\n\t\tconst { getTaxonomy } = select( 'core' );\n\t\tconst taxonomy = getTaxonomy( slug );\n\t\treturn {\n\t\t\thasCreateAction: taxonomy ? get( getCurrentPost(), [ '_links', 'wp:action-create-' + taxonomy.rest_base ], false ) : false,\n\t\t\thasAssignAction: taxonomy ? get( getCurrentPost(), [ '_links', 'wp:action-assign-' + taxonomy.rest_base ], false ) : false,\n\t\t\tterms: taxonomy ? select( 'core/editor' ).getEditedPostAttribute( taxonomy.rest_base ) : [],\n\t\t\ttaxonomy,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonUpdateTerms( terms, restBase ) {\n\t\t\tdispatch( 'core/editor' ).editPost( { [ restBase ]: terms } );\n\t\t},\n\t} ) ),\n\twithSpokenMessages,\n\twithInstanceId,\n\twithFilters( 'editor.PostTaxonomyType' ),\n] )( HierarchicalTermSelector );\n"]}