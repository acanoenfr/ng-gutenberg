{"version":3,"sources":["@wordpress/editor/src/components/convert-to-group-buttons/convert-button.js"],"names":["noop","Fragment","MenuItem","_x","switchToBlockType","withSelect","withDispatch","compose","Group","Ungroup","ConvertToGroupButton","onConvertToGroup","onConvertFromGroup","isGroupable","isUngroupable","select","clientIds","getBlockRootClientId","getBlocksByClientId","canInsertBlockType","getGroupingBlockName","groupingBlockName","rootClientId","length","undefined","groupingBlockAvailable","blocksSelection","isSingleGroupingBlock","name","innerBlocks","dispatch","onToggle","replaceBlocks","newBlocks"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { MenuItem } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\nimport { switchToBlockType } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { Group, Ungroup } from './icons';\n\nexport function ConvertToGroupButton( {\n\tonConvertToGroup,\n\tonConvertFromGroup,\n\tisGroupable = false,\n\tisUngroupable = false,\n} ) {\n\treturn (\n\t\t<Fragment>\n\t\t\t{ isGroupable && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tclassName=\"editor-block-settings-menu__control block-editor-block-settings-menu__control\"\n\t\t\t\t\ticon={ Group }\n\t\t\t\t\tonClick={ onConvertToGroup }\n\t\t\t\t>\n\t\t\t\t\t{ _x( 'Group', 'verb' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t\t{ isUngroupable && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tclassName=\"editor-block-settings-menu__control block-editor-block-settings-menu__control\"\n\t\t\t\t\ticon={ Ungroup }\n\t\t\t\t\tonClick={ onConvertFromGroup }\n\t\t\t\t>\n\t\t\t\t\t{ _x( 'Ungroup', 'Ungrouping blocks from within a Group block back into individual blocks within the Editor ' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientIds } ) => {\n\t\tconst {\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlocksByClientId,\n\t\t\tcanInsertBlockType,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst {\n\t\t\tgetGroupingBlockName,\n\t\t} = select( 'core/blocks' );\n\n\t\tconst groupingBlockName = getGroupingBlockName();\n\n\t\tconst rootClientId = clientIds && clientIds.length > 0 ?\n\t\t\tgetBlockRootClientId( clientIds[ 0 ] ) :\n\t\t\tundefined;\n\n\t\tconst groupingBlockAvailable = canInsertBlockType( groupingBlockName, rootClientId );\n\n\t\tconst blocksSelection = getBlocksByClientId( clientIds );\n\n\t\tconst isSingleGroupingBlock = blocksSelection.length === 1 && blocksSelection[ 0 ] && blocksSelection[ 0 ].name === groupingBlockName;\n\n\t\t// Do we have\n\t\t// 1. Grouping block available to be inserted?\n\t\t// 2. One or more blocks selected\n\t\t// (we allow single Blocks to become groups unless\n\t\t// they are a soltiary group block themselves)\n\t\tconst isGroupable = (\n\t\t\tgroupingBlockAvailable &&\n\t\t\tblocksSelection.length &&\n\t\t\t! isSingleGroupingBlock\n\t\t);\n\n\t\t// Do we have a single Group Block selected and does that group have inner blocks?\n\t\tconst isUngroupable = isSingleGroupingBlock && !! blocksSelection[ 0 ].innerBlocks.length;\n\n\t\treturn {\n\t\t\tisGroupable,\n\t\t\tisUngroupable,\n\t\t\tblocksSelection,\n\t\t\tgroupingBlockName,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientIds, onToggle = noop, blocksSelection = [], groupingBlockName } ) => {\n\t\tconst {\n\t\t\treplaceBlocks,\n\t\t} = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonConvertToGroup() {\n\t\t\t\tif ( ! blocksSelection.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Activate the `transform` on the Grouping Block which does the conversion\n\t\t\t\tconst newBlocks = switchToBlockType( blocksSelection, groupingBlockName );\n\n\t\t\t\tif ( newBlocks ) {\n\t\t\t\t\treplaceBlocks(\n\t\t\t\t\t\tclientIds,\n\t\t\t\t\t\tnewBlocks\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tonToggle();\n\t\t\t},\n\t\t\tonConvertFromGroup() {\n\t\t\t\tif ( ! blocksSelection.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst innerBlocks = blocksSelection[ 0 ].innerBlocks;\n\n\t\t\t\tif ( ! innerBlocks.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treplaceBlocks(\n\t\t\t\t\tclientIds,\n\t\t\t\t\tinnerBlocks\n\t\t\t\t);\n\n\t\t\t\tonToggle();\n\t\t\t},\n\t\t};\n\t} ),\n] )( ConvertToGroupButton );\n"]}