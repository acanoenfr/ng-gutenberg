{"version":3,"sources":["@wordpress/api-fetch/src/index.js"],"names":["createNonceMiddleware","createRootURLMiddleware","createPreloadingMiddleware","fetchAllMiddleware","namespaceEndpointMiddleware","httpV1Middleware","userLocaleMiddleware","mediaUploadMiddleware","parseResponseAndNormalizeError","parseAndThrowError","DEFAULT_HEADERS","Accept","DEFAULT_OPTIONS","credentials","middlewares","registerMiddleware","middleware","unshift","checkStatus","response","status","defaultFetchHandler","nextOptions","url","path","data","parse","remainingOptions","body","headers","JSON","stringify","responsePromise","window","fetch","then","catch","fetchHandler","setFetchHandler","newFetchHandler","apiFetch","options","steps","createRunStep","index","workingOptions","step","length","next","Promise","resolve","reject","error","code","nonceEndpoint","text","nonceMiddleware","nonce","use"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport createNonceMiddleware from './middlewares/nonce';\nimport createRootURLMiddleware from './middlewares/root-url';\nimport createPreloadingMiddleware from './middlewares/preloading';\nimport fetchAllMiddleware from './middlewares/fetch-all-middleware';\nimport namespaceEndpointMiddleware from './middlewares/namespace-endpoint';\nimport httpV1Middleware from './middlewares/http-v1';\nimport userLocaleMiddleware from './middlewares/user-locale';\nimport mediaUploadMiddleware from './middlewares/media-upload';\nimport { parseResponseAndNormalizeError, parseAndThrowError } from './utils/response';\n\n/**\n * Default set of header values which should be sent with every request unless\n * explicitly provided through apiFetch options.\n *\n * @type {Object}\n */\nconst DEFAULT_HEADERS = {\n\t// The backend uses the Accept header as a condition for considering an\n\t// incoming request as a REST request.\n\t//\n\t// See: https://core.trac.wordpress.org/ticket/44534\n\tAccept: 'application/json, */*;q=0.1',\n};\n\n/**\n * Default set of fetch option values which should be sent with every request\n * unless explicitly provided through apiFetch options.\n *\n * @type {Object}\n */\nconst DEFAULT_OPTIONS = {\n\tcredentials: 'include',\n};\n\nconst middlewares = [\n\tuserLocaleMiddleware,\n\tnamespaceEndpointMiddleware,\n\thttpV1Middleware,\n\tfetchAllMiddleware,\n];\n\nfunction registerMiddleware( middleware ) {\n\tmiddlewares.unshift( middleware );\n}\n\nconst checkStatus = ( response ) => {\n\tif ( response.status >= 200 && response.status < 300 ) {\n\t\treturn response;\n\t}\n\n\tthrow response;\n};\n\nconst defaultFetchHandler = ( nextOptions ) => {\n\tconst { url, path, data, parse = true, ...remainingOptions } = nextOptions;\n\tlet { body, headers } = nextOptions;\n\n\t// Merge explicitly-provided headers with default values.\n\theaders = { ...DEFAULT_HEADERS, ...headers };\n\n\t// The `data` property is a shorthand for sending a JSON body.\n\tif ( data ) {\n\t\tbody = JSON.stringify( data );\n\t\theaders[ 'Content-Type' ] = 'application/json';\n\t}\n\n\tconst responsePromise = window.fetch(\n\t\turl || path,\n\t\t{\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t...remainingOptions,\n\t\t\tbody,\n\t\t\theaders,\n\t\t}\n\t);\n\n\treturn responsePromise\n\t\t.then( checkStatus )\n\t\t.catch( ( response ) => parseAndThrowError( response, parse ) )\n\t\t.then( ( response ) => parseResponseAndNormalizeError( response, parse ) );\n};\n\nlet fetchHandler = defaultFetchHandler;\n\n/**\n * Defines a custom fetch handler for making the requests that will override\n * the default one using window.fetch\n *\n * @param {Function} newFetchHandler The new fetch handler\n */\nfunction setFetchHandler( newFetchHandler ) {\n\tfetchHandler = newFetchHandler;\n}\n\nfunction apiFetch( options ) {\n\tconst steps = [ ...middlewares, fetchHandler ];\n\n\tconst createRunStep = ( index ) => ( workingOptions ) => {\n\t\tconst step = steps[ index ];\n\t\tif ( index === steps.length - 1 ) {\n\t\t\treturn step( workingOptions );\n\t\t}\n\n\t\tconst next = createRunStep( index + 1 );\n\t\treturn step( workingOptions, next );\n\t};\n\n\treturn new Promise( function( resolve, reject ) {\n\t\tcreateRunStep( 0 )( options )\n\t\t\t.then( resolve )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tif ( error.code !== 'rest_cookie_invalid_nonce' ) {\n\t\t\t\t\treturn reject( error );\n\t\t\t\t}\n\n\t\t\t\t// If the nonce is invalid, refresh it and try again.\n\t\t\t\twindow.fetch( apiFetch.nonceEndpoint )\n\t\t\t\t\t.then( checkStatus )\n\t\t\t\t\t.then( ( data ) => data.text() )\n\t\t\t\t\t.then( ( text ) => {\n\t\t\t\t\t\tapiFetch.nonceMiddleware.nonce = text;\n\t\t\t\t\t\tapiFetch( options )\n\t\t\t\t\t\t\t.then( resolve )\n\t\t\t\t\t\t\t.catch( reject );\n\t\t\t\t\t} )\n\t\t\t\t\t.catch( reject );\n\t\t\t} );\n\t} );\n}\n\napiFetch.use = registerMiddleware;\napiFetch.setFetchHandler = setFetchHandler;\n\napiFetch.createNonceMiddleware = createNonceMiddleware;\napiFetch.createPreloadingMiddleware = createPreloadingMiddleware;\napiFetch.createRootURLMiddleware = createRootURLMiddleware;\napiFetch.fetchAllMiddleware = fetchAllMiddleware;\napiFetch.mediaUploadMiddleware = mediaUploadMiddleware;\n\nexport default apiFetch;\n"]}