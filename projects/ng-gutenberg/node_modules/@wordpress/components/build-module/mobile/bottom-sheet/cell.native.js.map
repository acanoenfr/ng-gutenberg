{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/cell.native.js"],"names":["TouchableOpacity","Text","View","TextInput","I18nManager","isEmpty","Dashicon","Component","__","_x","sprintf","styles","platformStyles","BottomSheetCell","props","arguments","state","isEditingValue","autoFocus","_valueTextInput","focus","accessibilityLabel","accessibilityHint","accessibilityRole","onPress","label","value","valuePlaceholder","icon","labelStyle","valueStyle","onChangeValue","children","editable","separatorType","style","valueProps","showValue","undefined","isValueEditable","defaultLabelStyle","cellLabel","cellLabelCentered","drawSeparator","separatorStyle","onCellPress","startEditing","finishEditing","setState","leftMarginStyle","cellSeparator","separatorMarginLeft","separator","getValueComponent","styleRTL","isRTL","cellValueRTL","finalStyle","cellValue","shouldShowPlaceholder","c","getAccessibilityLabel","clipToBounds","cellContainer","cellRowContainer","labelIconSeparator"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { TouchableOpacity, Text, View, TextInput, I18nManager } from 'react-native';\nimport { isEmpty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Dashicon } from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { __, _x, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\nimport platformStyles from './cellStyles.scss';\n\nexport default class BottomSheetCell extends Component {\n\tconstructor( props ) {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisEditingValue: props.autoFocus || false,\n\t\t};\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.state.isEditingValue ) {\n\t\t\tthis._valueTextInput.focus();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\taccessibilityLabel,\n\t\t\taccessibilityHint,\n\t\t\taccessibilityRole,\n\t\t\tonPress,\n\t\t\tlabel,\n\t\t\tvalue,\n\t\t\tvaluePlaceholder = '',\n\t\t\ticon,\n\t\t\tlabelStyle = {},\n\t\t\tvalueStyle = {},\n\t\t\tonChangeValue,\n\t\t\tchildren,\n\t\t\teditable = true,\n\t\t\tseparatorType,\n\t\t\tstyle = {},\n\t\t\t...valueProps\n\t\t} = this.props;\n\n\t\tconst showValue = value !== undefined;\n\t\tconst isValueEditable = editable && onChangeValue !== undefined;\n\t\tconst defaultLabelStyle = showValue || icon !== undefined ? styles.cellLabel : styles.cellLabelCentered;\n\t\tconst drawSeparator = ( separatorType && separatorType !== 'none' ) || separatorStyle === undefined;\n\n\t\tconst onCellPress = () => {\n\t\t\tif ( isValueEditable ) {\n\t\t\t\tstartEditing();\n\t\t\t} else if ( onPress !== undefined ) {\n\t\t\t\tonPress();\n\t\t\t}\n\t\t};\n\n\t\tconst finishEditing = () => {\n\t\t\tthis.setState( { isEditingValue: false } );\n\t\t};\n\n\t\tconst startEditing = () => {\n\t\t\tif ( this.state.isEditingValue === false ) {\n\t\t\t\tthis.setState( { isEditingValue: true } );\n\t\t\t}\n\t\t};\n\n\t\tconst separatorStyle = () => {\n\t\t\tconst leftMarginStyle = { ...styles.cellSeparator, ...platformStyles.separatorMarginLeft };\n\t\t\tswitch ( separatorType ) {\n\t\t\t\tcase 'leftMargin':\n\t\t\t\t\treturn leftMarginStyle;\n\t\t\t\tcase 'fullWidth':\n\t\t\t\t\treturn styles.separator;\n\t\t\t\tcase 'none':\n\t\t\t\t\treturn undefined;\n\t\t\t\tcase undefined:\n\t\t\t\t\treturn showValue ? leftMarginStyle : styles.separator;\n\t\t\t}\n\t\t};\n\n\t\tconst getValueComponent = () => {\n\t\t\tconst styleRTL = I18nManager.isRTL && styles.cellValueRTL;\n\t\t\tconst finalStyle = { ...styles.cellValue, ...valueStyle, ...styleRTL };\n\n\t\t\t// To be able to show the `middle` ellipsizeMode on editable cells\n\t\t\t// we show the TextInput just when the user wants to edit the value,\n\t\t\t// and the Text component to display it.\n\t\t\t// We also show the TextInput to display placeholder.\n\t\t\tconst shouldShowPlaceholder = isValueEditable && value === '';\n\t\t\treturn this.state.isEditingValue || shouldShowPlaceholder ? (\n\t\t\t\t<TextInput\n\t\t\t\t\tref={ ( c ) => this._valueTextInput = c }\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tstyle={ finalStyle }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tplaceholder={ valuePlaceholder }\n\t\t\t\t\tplaceholderTextColor={ '#87a6bc' }\n\t\t\t\t\tonChangeText={ onChangeValue }\n\t\t\t\t\teditable={ isValueEditable }\n\t\t\t\t\tpointerEvents={ this.state.isEditingValue ? 'auto' : 'none' }\n\t\t\t\t\tonFocus={ startEditing }\n\t\t\t\t\tonBlur={ finishEditing }\n\t\t\t\t\t{ ...valueProps }\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Text\n\t\t\t\t\tstyle={ { ...styles.cellValue, ...valueStyle } }\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tellipsizeMode={ 'middle' }\n\t\t\t\t>\n\t\t\t\t\t{ value }\n\t\t\t\t</Text>\n\t\t\t);\n\t\t};\n\n\t\tconst getAccessibilityLabel = () => {\n\t\t\tif ( accessibilityLabel || ! showValue ) {\n\t\t\t\treturn accessibilityLabel || label;\n\t\t\t}\n\t\t\treturn isEmpty( value ) ?\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: accessibility text. Empty state of a inline textinput cell. %s: The cell's title */\n\t\t\t\t\t_x( '%s. Empty', 'inline textinput cell' ),\n\t\t\t\t\tlabel\n\t\t\t\t) :\n\t\t\t\t// Separating by ',' is necessary to make a pause on urls (non-capitalized text)\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: accessibility text. Inline textinput title and value.%1: Cell title, %2: cell value. */\n\t\t\t\t\t_x( '%1$s, %2$s', 'inline textinput cell' ),\n\t\t\t\t\tlabel,\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<TouchableOpacity\n\t\t\t\taccessible={ ! this.state.isEditingValue }\n\t\t\t\taccessibilityLabel={ getAccessibilityLabel() }\n\t\t\t\taccessibilityRole={ accessibilityRole || 'button' }\n\t\t\t\taccessibilityHint={ isValueEditable ?\n\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t__( 'Double tap to edit this value' ) :\n\t\t\t\t\taccessibilityHint\n\t\t\t\t}\n\t\t\t\tonPress={ onCellPress }\n\t\t\t\tstyle={ { ...styles.clipToBounds, ...style } }\n\t\t\t>\n\t\t\t\t<View style={ styles.cellContainer }>\n\t\t\t\t\t<View style={ styles.cellRowContainer }>\n\t\t\t\t\t\t{ icon && (\n\t\t\t\t\t\t\t<View style={ styles.cellRowContainer }>\n\t\t\t\t\t\t\t\t<Dashicon icon={ icon } size={ 24 } />\n\t\t\t\t\t\t\t\t<View style={ platformStyles.labelIconSeparator } />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<Text numberOfLines={ 1 } style={ { ...defaultLabelStyle, ...labelStyle } }>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t{ showValue && getValueComponent() }\n\t\t\t\t\t{ children }\n\t\t\t\t</View>\n\t\t\t\t{ drawSeparator && (\n\t\t\t\t\t<View style={ separatorStyle() } />\n\t\t\t\t) }\n\t\t\t</TouchableOpacity>\n\t\t);\n\t}\n}\n"]}