{"version":3,"sources":["@wordpress/block-library/src/index.native.js"],"names":["registerBlockType","setDefaultBlockName","setUnregisteredTypeHandlerName","paragraph","image","heading","quote","gallery","archives","audio","button","calendar","categories","code","columns","column","cover","embed","file","html","mediaText","latestComments","latestPosts","list","missing","more","nextpage","preformatted","pullquote","reusableBlock","rss","search","separator","shortcode","spacer","subhead","table","textColumns","verse","video","tagCloud","coreBlocks","common","others","reduce","memo","block","name","registerCoreBlocks","forEach","metadata","settings"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tregisterBlockType,\n\tsetDefaultBlockName,\n\tsetUnregisteredTypeHandlerName,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport * as paragraph from './paragraph';\nimport * as image from './image';\nimport * as heading from './heading';\nimport * as quote from './quote';\nimport * as gallery from './gallery';\nimport * as archives from './archives';\nimport * as audio from './audio';\nimport * as button from './button';\nimport * as calendar from './calendar';\nimport * as categories from './categories';\nimport * as code from './code';\nimport * as columns from './columns';\nimport * as column from './column';\nimport * as cover from './cover';\nimport * as embed from './embed';\nimport * as file from './file';\nimport * as html from './html';\nimport * as mediaText from './media-text';\nimport * as latestComments from './latest-comments';\nimport * as latestPosts from './latest-posts';\nimport * as list from './list';\nimport * as missing from './missing';\nimport * as more from './more';\nimport * as nextpage from './nextpage';\nimport * as preformatted from './preformatted';\nimport * as pullquote from './pullquote';\nimport * as reusableBlock from './block';\nimport * as rss from './rss';\nimport * as search from './search';\nimport * as separator from './separator';\nimport * as shortcode from './shortcode';\nimport * as spacer from './spacer';\nimport * as subhead from './subhead';\nimport * as table from './table';\nimport * as textColumns from './text-columns';\nimport * as verse from './verse';\nimport * as video from './video';\nimport * as tagCloud from './tag-cloud';\n\nexport const coreBlocks = [\n\t// Common blocks are grouped at the top to prioritize their display\n\t// in various contexts â€” like the inserter and auto-complete components.\n\tparagraph,\n\timage,\n\theading,\n\tgallery,\n\tlist,\n\tquote,\n\n\t// Register all remaining core blocks.\n\tshortcode,\n\tarchives,\n\taudio,\n\tbutton,\n\tcalendar,\n\tcategories,\n\tcode,\n\tcolumns,\n\tcolumn,\n\tcover,\n\tembed,\n\t...embed.common,\n\t...embed.others,\n\tfile,\n\thtml,\n\tmediaText,\n\tlatestComments,\n\tlatestPosts,\n\tmissing,\n\tmore,\n\tnextpage,\n\tpreformatted,\n\tpullquote,\n\trss,\n\tsearch,\n\tseparator,\n\treusableBlock,\n\tspacer,\n\tsubhead,\n\ttable,\n\ttagCloud,\n\ttextColumns,\n\tverse,\n\tvideo,\n].reduce( ( memo, block ) => {\n\tmemo[ block.name ] = block;\n\treturn memo;\n}, {} );\n\nexport const registerCoreBlocks = () => {\n\t[\n\t\tparagraph,\n\t\theading,\n\t\tcode,\n\t\tmissing,\n\t\tmore,\n\t\timage,\n\t\tvideo,\n\t\tnextpage,\n\t\tseparator,\n\t\tlist,\n\t\tquote,\n\t].forEach( ( { metadata, name, settings } ) => {\n\t\tregisterBlockType( name, {\n\t\t\t...metadata,\n\t\t\t...settings,\n\t\t} );\n\t} );\n};\n\nsetDefaultBlockName( paragraph.name );\nsetUnregisteredTypeHandlerName( missing.name );\n"]}