{"version":3,"sources":["@wordpress/block-library/src/cover/edit.js"],"names":["classnames","FastAverageColor","tinycolor","Component","createRef","useCallback","useState","FocalPointPicker","IconButton","PanelBody","PanelRow","RangeControl","ToggleControl","Toolbar","withNotices","ResizableBox","BaseControl","Button","compose","withInstanceId","BlockControls","BlockIcon","InnerBlocks","InspectorControls","MediaPlaceholder","MediaUpload","MediaUploadCheck","PanelColorSettings","withColors","ColorPalette","__","withDispatch","icon","IMAGE_BACKGROUND_TYPE","VIDEO_BACKGROUND_TYPE","COVER_MIN_HEIGHT","backgroundImageStyles","dimRatioToClass","ALLOWED_MEDIA_TYPES","INNER_BLOCKS_TEMPLATE","align","fontSize","placeholder","retrieveFastAverageColor","fastAverageColor","CoverHeightInput","value","instanceId","onChange","temporaryInput","setTemporaryInput","onChangeEvent","event","unprocessedValue","target","inputValue","parseInt","undefined","isNaN","onBlurEvent","inputId","RESIZABLE_BOX_ENABLE_OPTION","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","ResizableCover","className","children","onResizeStart","onResize","onResizeStop","isResizing","setIsResizing","onResizeEvent","direction","elt","clientHeight","onResizeStartEvent","onResizeStopEvent","CoverEdit","arguments","state","isDark","temporaryMinHeight","imageRef","videoRef","changeIsDarkIfRequired","bind","onUploadError","handleBackgroundMode","prevProps","message","noticeOperations","props","removeAllNotices","createErrorNotice","attributes","setAttributes","isSelected","noticeUI","overlayColor","setOverlayColor","toggleSelection","backgroundType","dimRatio","focalPoint","hasParallax","id","url","minHeight","onSelectMedia","media","mediaType","media_type","type","toggleParallax","setDimRatio","ratio","style","backgroundColor","color","backgroundPosition","x","y","controls","open","label","placeholderIcon","title","instructions","classes","class","newMinHeight","setState","display","element","current","getColorAsync","newIsDark","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport FastAverageColor from 'fast-average-color';\nimport tinycolor from 'tinycolor2';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tComponent,\n\tcreateRef,\n\tuseCallback,\n\tuseState,\n} from '@wordpress/element';\nimport {\n\tFocalPointPicker,\n\tIconButton,\n\tPanelBody,\n\tPanelRow,\n\tRangeControl,\n\tToggleControl,\n\tToolbar,\n\twithNotices,\n\tResizableBox,\n\tBaseControl,\n\tButton,\n} from '@wordpress/components';\nimport { compose, withInstanceId } from '@wordpress/compose';\nimport {\n\tBlockControls,\n\tBlockIcon,\n\tInnerBlocks,\n\tInspectorControls,\n\tMediaPlaceholder,\n\tMediaUpload,\n\tMediaUploadCheck,\n\tPanelColorSettings,\n\twithColors,\n\tColorPalette,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport icon from './icon';\nimport {\n\tIMAGE_BACKGROUND_TYPE,\n\tVIDEO_BACKGROUND_TYPE,\n\tCOVER_MIN_HEIGHT,\n\tbackgroundImageStyles,\n\tdimRatioToClass,\n} from './shared';\n\n/**\n * Module Constants\n */\nconst ALLOWED_MEDIA_TYPES = [ 'image', 'video' ];\nconst INNER_BLOCKS_TEMPLATE = [\n\t[ 'core/paragraph', {\n\t\talign: 'center',\n\t\tfontSize: 'large',\n\t\tplaceholder: __( 'Write title…' ),\n\t} ],\n];\n\nfunction retrieveFastAverageColor() {\n\tif ( ! retrieveFastAverageColor.fastAverageColor ) {\n\t\tretrieveFastAverageColor.fastAverageColor = new FastAverageColor();\n\t}\n\treturn retrieveFastAverageColor.fastAverageColor;\n}\n\nconst CoverHeightInput = withInstanceId(\n\tfunction( { value = '', instanceId, onChange } ) {\n\t\tconst [ temporaryInput, setTemporaryInput ] = useState( null );\n\t\tconst onChangeEvent = useCallback(\n\t\t\t( event ) => {\n\t\t\t\tconst unprocessedValue = event.target.value;\n\t\t\t\tconst inputValue = unprocessedValue !== '' ?\n\t\t\t\t\tparseInt( event.target.value, 10 ) :\n\t\t\t\t\tundefined;\n\t\t\t\tif ( ( isNaN( inputValue ) || inputValue < COVER_MIN_HEIGHT ) && inputValue !== undefined ) {\n\t\t\t\t\tsetTemporaryInput( event.target.value );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetTemporaryInput( null );\n\t\t\t\tonChange( inputValue );\n\t\t\t},\n\t\t\t[ onChange, setTemporaryInput ]\n\t\t);\n\t\tconst onBlurEvent = useCallback(\n\t\t\t() => {\n\t\t\t\tif ( temporaryInput !== null ) {\n\t\t\t\t\tsetTemporaryInput( null );\n\t\t\t\t}\n\t\t\t},\n\t\t\t[ temporaryInput, setTemporaryInput ]\n\t\t);\n\t\tconst inputId = `block-cover-height-input-${ instanceId }`;\n\t\treturn (\n\t\t\t<BaseControl label={ __( 'Minimum height in pixels' ) } id={ inputId }>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tid={ inputId }\n\t\t\t\t\tonChange={ onChangeEvent }\n\t\t\t\t\tonBlur={ onBlurEvent }\n\t\t\t\t\tvalue={ temporaryInput !== null ? temporaryInput : value }\n\t\t\t\t\tmin={ COVER_MIN_HEIGHT }\n\t\t\t\t\tstep=\"10\"\n\t\t\t\t/>\n\t\t\t</BaseControl>\n\t\t);\n\t}\n);\n\nconst RESIZABLE_BOX_ENABLE_OPTION = {\n\ttop: false,\n\tright: false,\n\tbottom: true,\n\tleft: false,\n\ttopRight: false,\n\tbottomRight: false,\n\tbottomLeft: false,\n\ttopLeft: false,\n};\n\nfunction ResizableCover( {\n\tclassName,\n\tchildren,\n\tonResizeStart,\n\tonResize,\n\tonResizeStop,\n} ) {\n\tconst [ isResizing, setIsResizing ] = useState( false );\n\tconst onResizeEvent = useCallback(\n\t\t( event, direction, elt ) => {\n\t\t\tonResize( elt.clientHeight );\n\t\t\tif ( ! isResizing ) {\n\t\t\t\tsetIsResizing( true );\n\t\t\t}\n\t\t},\n\t\t[ onResize, setIsResizing ],\n\t);\n\tconst onResizeStartEvent = useCallback(\n\t\t( event, direction, elt ) => {\n\t\t\tonResizeStart( elt.clientHeight );\n\t\t\tonResize( elt.clientHeight );\n\t\t},\n\t\t[ onResizeStart, onResize ]\n\t);\n\tconst onResizeStopEvent = useCallback(\n\t\t( event, direction, elt ) => {\n\t\t\tonResizeStop( elt.clientHeight );\n\t\t\tsetIsResizing( false );\n\t\t},\n\t\t[ onResizeStop, setIsResizing ]\n\t);\n\n\treturn (\n\t\t<ResizableBox\n\t\t\tclassName={ classnames(\n\t\t\t\tclassName,\n\t\t\t\t{\n\t\t\t\t\t'is-resizing': isResizing,\n\t\t\t\t}\n\t\t\t) }\n\t\t\tenable={ RESIZABLE_BOX_ENABLE_OPTION }\n\t\t\tonResizeStart={ onResizeStartEvent }\n\t\t\tonResize={ onResizeEvent }\n\t\t\tonResizeStop={ onResizeStopEvent }\n\t\t\tminHeight={ COVER_MIN_HEIGHT }\n\t\t>\n\t\t\t{ children }\n\t\t</ResizableBox>\n\t);\n}\n\nclass CoverEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisDark: false,\n\t\t\ttemporaryMinHeight: null,\n\t\t};\n\t\tthis.imageRef = createRef();\n\t\tthis.videoRef = createRef();\n\t\tthis.changeIsDarkIfRequired = this.changeIsDarkIfRequired.bind( this );\n\t\tthis.onUploadError = this.onUploadError.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.handleBackgroundMode();\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tthis.handleBackgroundMode( prevProps );\n\t}\n\n\tonUploadError( message ) {\n\t\tconst { noticeOperations } = this.props;\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tsetAttributes,\n\t\t\tisSelected,\n\t\t\tclassName,\n\t\t\tnoticeUI,\n\t\t\toverlayColor,\n\t\t\tsetOverlayColor,\n\t\t\ttoggleSelection,\n\t\t} = this.props;\n\t\tconst {\n\t\t\tbackgroundType,\n\t\t\tdimRatio,\n\t\t\tfocalPoint,\n\t\t\thasParallax,\n\t\t\tid,\n\t\t\turl,\n\t\t\tminHeight,\n\t\t} = attributes;\n\t\tconst onSelectMedia = ( media ) => {\n\t\t\tif ( ! media || ! media.url ) {\n\t\t\t\tsetAttributes( { url: undefined, id: undefined } );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet mediaType;\n\t\t\t// for media selections originated from a file upload.\n\t\t\tif ( media.media_type ) {\n\t\t\t\tif ( media.media_type === IMAGE_BACKGROUND_TYPE ) {\n\t\t\t\t\tmediaType = IMAGE_BACKGROUND_TYPE;\n\t\t\t\t} else {\n\t\t\t\t\t// only images and videos are accepted so if the media_type is not an image we can assume it is a video.\n\t\t\t\t\t// Videos contain the media type of 'file' in the object returned from the rest api.\n\t\t\t\t\tmediaType = VIDEO_BACKGROUND_TYPE;\n\t\t\t\t}\n\t\t\t} else { // for media selections originated from existing files in the media library.\n\t\t\t\tif (\n\t\t\t\t\tmedia.type !== IMAGE_BACKGROUND_TYPE &&\n\t\t\t\t\tmedia.type !== VIDEO_BACKGROUND_TYPE\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmediaType = media.type;\n\t\t\t}\n\n\t\t\tsetAttributes( {\n\t\t\t\turl: media.url,\n\t\t\t\tid: media.id,\n\t\t\t\tbackgroundType: mediaType,\n\t\t\t\t...( mediaType === VIDEO_BACKGROUND_TYPE ?\n\t\t\t\t\t{ focalPoint: undefined, hasParallax: undefined } :\n\t\t\t\t\t{}\n\t\t\t\t),\n\t\t\t} );\n\t\t};\n\n\t\tconst toggleParallax = () => {\n\t\t\tsetAttributes( {\n\t\t\t\thasParallax: ! hasParallax,\n\t\t\t\t...( ! hasParallax ? { focalPoint: undefined } : {} ),\n\t\t\t} );\n\t\t};\n\t\tconst setDimRatio = ( ratio ) => setAttributes( { dimRatio: ratio } );\n\n\t\tconst { temporaryMinHeight } = this.state;\n\n\t\tconst style = {\n\t\t\t...(\n\t\t\t\tbackgroundType === IMAGE_BACKGROUND_TYPE ?\n\t\t\t\t\tbackgroundImageStyles( url ) :\n\t\t\t\t\t{}\n\t\t\t),\n\t\t\tbackgroundColor: overlayColor.color,\n\t\t\tminHeight: ( temporaryMinHeight || minHeight ),\n\t\t};\n\n\t\tif ( focalPoint ) {\n\t\t\tstyle.backgroundPosition = `${ focalPoint.x * 100 }% ${ focalPoint.y * 100 }%`;\n\t\t}\n\n\t\tconst controls = (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t{ !! ( url || overlayColor.color ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\t\t\t\tonSelect={ onSelectMedia }\n\t\t\t\t\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\t\t\t\t\tvalue={ id }\n\t\t\t\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"components-toolbar__control\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={ __( 'Edit media' ) }\n\t\t\t\t\t\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</BlockControls>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t{ !! url && (\n\t\t\t\t\t\t<PanelBody title={ __( 'Media Settings' ) }>\n\t\t\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Fixed Background' ) }\n\t\t\t\t\t\t\t\t\tchecked={ hasParallax }\n\t\t\t\t\t\t\t\t\tonChange={ toggleParallax }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType && ! hasParallax && (\n\t\t\t\t\t\t\t\t<FocalPointPicker\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Focal Point Picker' ) }\n\t\t\t\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\t\t\t\tvalue={ focalPoint }\n\t\t\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { focalPoint: value } ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisDefault\n\t\t\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t\t\t\tclassName=\"block-library-cover__reset-button\"\n\t\t\t\t\t\t\t\t\tonClick={ () => setAttributes( {\n\t\t\t\t\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\t\t\t\t\tbackgroundType: undefined,\n\t\t\t\t\t\t\t\t\t\tdimRatio: undefined,\n\t\t\t\t\t\t\t\t\t\tfocalPoint: undefined,\n\t\t\t\t\t\t\t\t\t\thasParallax: undefined,\n\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Clear Media' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ( url || overlayColor.color ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<PanelBody title={ __( 'Dimensions' ) }>\n\t\t\t\t\t\t\t\t<CoverHeightInput\n\t\t\t\t\t\t\t\t\tvalue={ temporaryMinHeight || minHeight }\n\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t( value ) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\t\tminHeight: value,\n\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\t\t\ttitle={ __( 'Overlay' ) }\n\t\t\t\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\t\t\t\tcolorSettings={ [ {\n\t\t\t\t\t\t\t\t\tvalue: overlayColor.color,\n\t\t\t\t\t\t\t\t\tonChange: setOverlayColor,\n\t\t\t\t\t\t\t\t\tlabel: __( 'Overlay Color' ),\n\t\t\t\t\t\t\t\t} ] }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ !! url && (\n\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\tlabel={ __( 'Background Opacity' ) }\n\t\t\t\t\t\t\t\t\t\tvalue={ dimRatio }\n\t\t\t\t\t\t\t\t\t\tonChange={ setDimRatio }\n\t\t\t\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\t\t\t\tmax={ 100 }\n\t\t\t\t\t\t\t\t\t\tstep={ 10 }\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</PanelColorSettings>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</InspectorControls>\n\t\t\t</>\n\t\t);\n\n\t\tif ( ! ( url || overlayColor.color ) ) {\n\t\t\tconst placeholderIcon = <BlockIcon icon={ icon } />;\n\t\t\tconst label = __( 'Cover' );\n\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{ controls }\n\t\t\t\t\t<MediaPlaceholder\n\t\t\t\t\t\ticon={ placeholderIcon }\n\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\tlabels={ {\n\t\t\t\t\t\t\ttitle: label,\n\t\t\t\t\t\t\tinstructions: __( 'Upload an image or video file, or pick one from your media library.' ),\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonSelect={ onSelectMedia }\n\t\t\t\t\t\taccept=\"image/*,video/*\"\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\tnotices={ noticeUI }\n\t\t\t\t\t\tonError={ this.onUploadError }\n\t\t\t\t\t>\n\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\tdisableCustomColors={ true }\n\t\t\t\t\t\t\tvalue={ overlayColor.color }\n\t\t\t\t\t\t\tonChange={ setOverlayColor }\n\t\t\t\t\t\t\tclearable={ false }\n\t\t\t\t\t\t\tclassName=\"wp-block-cover__placeholder-color-palette\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MediaPlaceholder>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\n\t\tconst classes = classnames(\n\t\t\tclassName,\n\t\t\tdimRatioToClass( dimRatio ),\n\t\t\t{\n\t\t\t\t'is-dark-theme': this.state.isDark,\n\t\t\t\t'has-background-dim': dimRatio !== 0,\n\t\t\t\t'has-parallax': hasParallax,\n\t\t\t\t[ overlayColor.class ]: overlayColor.class,\n\t\t\t}\n\t\t);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ controls }\n\t\t\t\t<ResizableCover\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'block-library-cover__resize-container',\n\t\t\t\t\t\t{ 'is-selected': isSelected },\n\t\t\t\t\t) }\n\t\t\t\t\tonResizeStart={ () => toggleSelection( false ) }\n\t\t\t\t\tonResize={ ( newMinHeight ) => {\n\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\ttemporaryMinHeight: newMinHeight,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tonResizeStop={\n\t\t\t\t\t\t( newMinHeight ) => {\n\t\t\t\t\t\t\ttoggleSelection( true );\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tminHeight: newMinHeight,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\t\ttemporaryMinHeight: null,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tdata-url={ url }\n\t\t\t\t\t\tstyle={ style }\n\t\t\t\t\t\tclassName={ classes }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t// Used only to programmatically check if the image is dark or not\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tref={ this.imageRef }\n\t\t\t\t\t\t\t\taria-hidden\n\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t\tdisplay: 'none',\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ VIDEO_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\tref={ this.videoRef }\n\t\t\t\t\t\t\t\tclassName=\"wp-block-cover__video-background\"\n\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\tmuted\n\t\t\t\t\t\t\t\tloop\n\t\t\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<div className=\"wp-block-cover__inner-container\">\n\t\t\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\t\t\ttemplate={ INNER_BLOCKS_TEMPLATE }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ResizableCover>\n\t\t\t</>\n\t\t);\n\t}\n\n\thandleBackgroundMode( prevProps ) {\n\t\tconst { attributes, overlayColor } = this.props;\n\t\tconst { dimRatio, url } = attributes;\n\t\t// If opacity is greater than 50 the dominant color is the overlay color,\n\t\t// so use that color for the dark mode computation.\n\t\tif ( dimRatio > 50 ) {\n\t\t\tif (\n\t\t\t\tprevProps &&\n\t\t\t\tprevProps.attributes.dimRatio > 50 &&\n\t\t\t\tprevProps.overlayColor.color === overlayColor.color\n\t\t\t) {\n\t\t\t\t// No relevant prop changes happened there is no need to apply any change.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( ! overlayColor.color ) {\n\t\t\t\t// If no overlay color exists the overlay color is black (isDark )\n\t\t\t\tthis.changeIsDarkIfRequired( true );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.changeIsDarkIfRequired(\n\t\t\t\ttinycolor( overlayColor.color ).isDark()\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t// If opacity is lower than 50 the dominant color is the image or video color,\n\t\t// so use that color for the dark mode computation.\n\n\t\tif (\n\t\t\tprevProps &&\n\t\t\tprevProps.attributes.dimRatio <= 50 &&\n\t\t\tprevProps.attributes.url === url\n\t\t) {\n\t\t\t// No relevant prop changes happened there is no need to apply any change.\n\t\t\treturn;\n\t\t}\n\t\tconst { backgroundType } = attributes;\n\n\t\tlet element;\n\n\t\tswitch ( backgroundType ) {\n\t\t\tcase IMAGE_BACKGROUND_TYPE:\n\t\t\t\telement = this.imageRef.current;\n\t\t\t\tbreak;\n\t\t\tcase VIDEO_BACKGROUND_TYPE:\n\t\t\t\telement = this.videoRef.current;\n\t\t\t\tbreak;\n\t\t}\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\t\tretrieveFastAverageColor().getColorAsync( element, ( color ) => {\n\t\t\tthis.changeIsDarkIfRequired( color.isDark );\n\t\t} );\n\t}\n\n\tchangeIsDarkIfRequired( newIsDark ) {\n\t\tif ( this.state.isDark !== newIsDark ) {\n\t\t\tthis.setState( {\n\t\t\t\tisDark: newIsDark,\n\t\t\t} );\n\t\t}\n\t}\n}\n\nexport default compose( [\n\twithDispatch( ( dispatch ) => {\n\t\tconst { toggleSelection } = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\ttoggleSelection,\n\t\t};\n\t} ),\n\twithColors( { overlayColor: 'background-color' } ),\n\twithNotices,\n\twithInstanceId,\n] )( CoverEdit );\n"]}