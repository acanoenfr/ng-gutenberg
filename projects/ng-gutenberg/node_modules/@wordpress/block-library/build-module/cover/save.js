import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { InnerBlocks, getColorClassName } from '@wordpress/block-editor';
/**
 * Internal dependencies
 */

import { IMAGE_BACKGROUND_TYPE, VIDEO_BACKGROUND_TYPE, backgroundImageStyles, dimRatioToClass } from './shared';
export default function save(_ref) {
  var attributes = _ref.attributes;
  var backgroundType = attributes.backgroundType,
      customOverlayColor = attributes.customOverlayColor,
      dimRatio = attributes.dimRatio,
      focalPoint = attributes.focalPoint,
      hasParallax = attributes.hasParallax,
      overlayColor = attributes.overlayColor,
      url = attributes.url,
      minHeight = attributes.minHeight;
  var overlayColorClass = getColorClassName('background-color', overlayColor);
  var style = backgroundType === IMAGE_BACKGROUND_TYPE ? backgroundImageStyles(url) : {};

  if (!overlayColorClass) {
    style.backgroundColor = customOverlayColor;
  }

  if (focalPoint && !hasParallax) {
    style.backgroundPosition = "".concat(focalPoint.x * 100, "% ").concat(focalPoint.y * 100, "%");
  }

  style.minHeight = minHeight || undefined;
  var classes = classnames(dimRatioToClass(dimRatio), overlayColorClass, {
    'has-background-dim': dimRatio !== 0,
    'has-parallax': hasParallax
  });
  return createElement("div", {
    className: classes,
    style: style
  }, VIDEO_BACKGROUND_TYPE === backgroundType && url && createElement("video", {
    className: "wp-block-cover__video-background",
    autoPlay: true,
    muted: true,
    loop: true,
    src: url
  }), createElement("div", {
    className: "wp-block-cover__inner-container"
  }, createElement(InnerBlocks.Content, null)));
}
//# sourceMappingURL=save.js.map