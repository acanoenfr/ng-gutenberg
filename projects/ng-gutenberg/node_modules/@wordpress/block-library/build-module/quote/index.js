import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";

/**
 * WordPress dependencies
 */
import { __, _x } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import deprecated from './deprecated';
import edit from './edit';
import icon from './icon';
var metadata = {
  name: "core/quote",
  category: "common",
  attributes: {
    value: {
      type: "string",
      source: "html",
      selector: "blockquote",
      multiline: "p",
      "default": ""
    },
    citation: {
      type: "string",
      source: "html",
      selector: "cite",
      "default": ""
    },
    align: {
      type: "string"
    }
  }
};
import save from './save';
import transforms from './transforms';
var name = metadata.name;
export { metadata, name };
export var settings = {
  title: __('Quote'),
  description: __('Give quoted text visual emphasis. "In quoting others, we cite ourselves." — Julio Cortázar'),
  icon: icon,
  keywords: [__('blockquote'), __('cite')],
  example: {
    attributes: {
      value: '<p>' + __('In quoting others, we cite ourselves.') + '</p>',
      citation: 'Julio Cortázar',
      className: 'is-style-large'
    }
  },
  styles: [{
    name: 'default',
    label: _x('Default', 'block style'),
    isDefault: true
  }, {
    name: 'large',
    label: _x('Large', 'block style')
  }],
  transforms: transforms,
  edit: edit,
  save: save,
  merge: function merge(attributes, _ref) {
    var value = _ref.value,
        citation = _ref.citation;

    // Quote citations cannot be merged. Pick the second one unless it's
    // empty.
    if (!citation) {
      citation = attributes.citation;
    }

    if (!value || value === '<p></p>') {
      return _objectSpread({}, attributes, {
        citation: citation
      });
    }

    return _objectSpread({}, attributes, {
      value: attributes.value + value,
      citation: citation
    });
  },
  deprecated: deprecated
};
//# sourceMappingURL=index.js.map