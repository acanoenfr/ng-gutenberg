{"version":3,"sources":["@wordpress/block-library/src/group/index.js"],"names":["__","createBlock","deprecated","edit","icon","save","name","metadata","settings","title","description","keywords","example","attributes","customBackgroundColor","innerBlocks","customTextColor","fontSize","content","supports","align","anchor","html","transforms","from","type","isMultiBlock","blocks","__experimentalConvert","length","alignments","widestAlignment","reduce","result","block","indexOf","undefined","groupInnerBlocks","map"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport deprecated from './deprecated';\nimport edit from './edit';\nimport icon from './icon';\nimport metadata from './block.json';\nimport save from './save';\n\nconst { name } = metadata;\n\nexport { metadata, name };\n\nexport const settings = {\n\ttitle: __( 'Group' ),\n\ticon,\n\tdescription: __( 'A block that groups other blocks.' ),\n\tkeywords: [ __( 'container' ), __( 'wrapper' ), __( 'row' ), __( 'section' ) ],\n\texample: {\n\t\tattributes: {\n\t\t\tcustomBackgroundColor: '#ffffff',\n\t\t},\n\t\tinnerBlocks: [\n\t\t\t{\n\t\t\t\tname: 'core/paragraph',\n\t\t\t\tattributes: {\n\t\t\t\t\tcustomTextColor: '#cf2e2e',\n\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\tcontent: __( 'One.' ),\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'core/paragraph',\n\t\t\t\tattributes: {\n\t\t\t\t\tcustomTextColor: '#ff6900',\n\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\tcontent: __( 'Two.' ),\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'core/paragraph',\n\t\t\t\tattributes: {\n\t\t\t\t\tcustomTextColor: '#fcb900',\n\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\tcontent: __( 'Three.' ),\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'core/paragraph',\n\t\t\t\tattributes: {\n\t\t\t\t\tcustomTextColor: '#00d084',\n\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\tcontent: __( 'Four.' ),\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'core/paragraph',\n\t\t\t\tattributes: {\n\t\t\t\t\tcustomTextColor: '#0693e3',\n\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\tcontent: __( 'Five.' ),\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'core/paragraph',\n\t\t\t\tattributes: {\n\t\t\t\t\tcustomTextColor: '#9b51e0',\n\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\tcontent: __( 'Six.' ),\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\tsupports: {\n\t\talign: [ 'wide', 'full' ],\n\t\tanchor: true,\n\t\thtml: false,\n\t},\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tisMultiBlock: true,\n\t\t\t\tblocks: [ '*' ],\n\t\t\t\t__experimentalConvert( blocks ) {\n\t\t\t\t\t// Avoid transforming a single `core/group` Block\n\t\t\t\t\tif ( blocks.length === 1 && blocks[ 0 ].name === 'core/group' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst alignments = [ 'wide', 'full' ];\n\n\t\t\t\t\t// Determine the widest setting of all the blocks to be grouped\n\t\t\t\t\tconst widestAlignment = blocks.reduce( ( result, block ) => {\n\t\t\t\t\t\tconst { align } = block.attributes;\n\t\t\t\t\t\treturn alignments.indexOf( align ) > alignments.indexOf( result ) ? align : result;\n\t\t\t\t\t}, undefined );\n\n\t\t\t\t\t// Clone the Blocks to be Grouped\n\t\t\t\t\t// Failing to create new block references causes the original blocks\n\t\t\t\t\t// to be replaced in the switchToBlockType call thereby meaning they\n\t\t\t\t\t// are removed both from their original location and within the\n\t\t\t\t\t// new group block.\n\t\t\t\t\tconst groupInnerBlocks = blocks.map( ( block ) => {\n\t\t\t\t\t\treturn createBlock( block.name, block.attributes, block.innerBlocks );\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn createBlock( 'core/group', {\n\t\t\t\t\t\talign: widestAlignment,\n\t\t\t\t\t}, groupInnerBlocks );\n\t\t\t\t},\n\t\t\t},\n\n\t\t],\n\t},\n\n\tedit,\n\tsave,\n\tdeprecated,\n};\n"]}