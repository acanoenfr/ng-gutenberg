import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { MenuItem, NavigableMenu } from '@wordpress/components';
import { __ } from '@wordpress/i18n';
import { withDispatch } from '@wordpress/data';
import { compose } from '@wordpress/compose';

function MenuItemActions(_ref) {
  var destination = _ref.destination,
      moveLeft = _ref.moveLeft,
      moveRight = _ref.moveRight,
      moveToEnd = _ref.moveToEnd,
      moveToStart = _ref.moveToStart,
      onEditLableClicked = _ref.onEditLableClicked,
      remove = _ref.remove;
  return createElement(NavigableMenu, null, createElement(MenuItem, {
    icon: "admin-links"
  }, destination), createElement(MenuItem, {
    onClick: onEditLableClicked,
    icon: "edit"
  }, __('Edit label text')), createElement("div", {
    className: "wp-block-navigation-menu-item__separator"
  }), createElement(MenuItem, {
    onClick: moveToStart,
    icon: "arrow-up-alt2"
  }, __('Move to start')), createElement(MenuItem, {
    onClick: moveLeft,
    icon: "arrow-left-alt2"
  }, __('Move left')), createElement(MenuItem, {
    onClick: moveRight,
    icon: "arrow-right-alt2"
  }, __('Move right')), createElement(MenuItem, {
    onClick: moveToEnd,
    icon: "arrow-down-alt2"
  }, __('Move to end')), createElement(MenuItem, {
    icon: "arrow-left-alt2"
  }, __('Nest underneathâ€¦')), createElement("div", {
    className: "navigation-menu-item__separator"
  }), createElement(MenuItem, {
    onClick: remove,
    icon: "trash"
  }, __('Remove from menu')));
}

export default compose([withDispatch(function (dispatch, _ref2, _ref3) {
  var clientId = _ref2.clientId;
  var select = _ref3.select;

  var _select = select('core/block-editor'),
      getBlockOrder = _select.getBlockOrder,
      getBlockRootClientId = _select.getBlockRootClientId;

  var parentID = getBlockRootClientId(clientId);

  var _dispatch = dispatch('core/block-editor'),
      moveBlocksDown = _dispatch.moveBlocksDown,
      moveBlocksUp = _dispatch.moveBlocksUp,
      moveBlockToPosition = _dispatch.moveBlockToPosition,
      removeBlocks = _dispatch.removeBlocks;

  return {
    moveToStart: function moveToStart() {
      moveBlockToPosition(clientId, parentID, parentID, 0);
    },
    moveRight: function moveRight() {
      moveBlocksDown(clientId, parentID);
    },
    moveLeft: function moveLeft() {
      moveBlocksUp(clientId, parentID);
    },
    moveToEnd: function moveToEnd() {
      moveBlockToPosition(clientId, parentID, parentID, getBlockOrder(parentID).length - 1);
    },
    remove: function remove() {
      removeBlocks(clientId);
    }
  };
})])(MenuItemActions);
//# sourceMappingURL=menu-item-actions.js.map