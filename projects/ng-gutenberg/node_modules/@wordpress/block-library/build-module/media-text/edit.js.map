{"version":3,"sources":["@wordpress/block-library/src/media-text/edit.js"],"names":["classnames","get","__","_x","BlockControls","BlockVerticalAlignmentToolbar","InnerBlocks","InspectorControls","PanelColorSettings","withColors","Component","PanelBody","TextareaControl","ToggleControl","Toolbar","ExternalLink","FocalPointPicker","MediaContainer","TEMPLATE","fontSize","placeholder","WIDTH_CONSTRAINT_PERCENTAGE","applyWidthConstraints","width","Math","max","min","MediaTextEdit","arguments","onSelectMedia","bind","onWidthChange","commitWidthChange","state","mediaWidth","media","setAttributes","props","mediaType","src","media_type","type","mediaAlt","alt","mediaId","id","mediaUrl","url","imageFill","undefined","focalPoint","setState","attributes","mediaPosition","className","backgroundColor","isSelected","setBackgroundColor","isStackedOnMobile","verticalAlignment","temporaryMediaWidth","classNames","class","color","widthString","gridTemplateColumns","style","msGridColumns","colorSettings","value","onChange","label","toolbarControls","icon","title","isActive","onClick","onMediaAltChange","newMediaAlt","onVerticalAlignmentChange","alignment","mediaTextGeneralSettings","renderMediaArea"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\tInnerBlocks,\n\tInspectorControls,\n\tPanelColorSettings,\n\twithColors,\n} from '@wordpress/block-editor';\nimport { Component } from '@wordpress/element';\nimport {\n\tPanelBody,\n\tTextareaControl,\n\tToggleControl,\n\tToolbar,\n\tExternalLink,\n\tFocalPointPicker,\n} from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport MediaContainer from './media-container';\n\n/**\n * Constants\n */\nconst TEMPLATE = [\n\t[ 'core/paragraph', { fontSize: 'large', placeholder: _x( 'Contentâ€¦', 'content placeholder' ) } ],\n];\n// this limits the resize to a safe zone to avoid making broken layouts\nconst WIDTH_CONSTRAINT_PERCENTAGE = 15;\nconst applyWidthConstraints = ( width ) => Math.max( WIDTH_CONSTRAINT_PERCENTAGE, Math.min( width, 100 - WIDTH_CONSTRAINT_PERCENTAGE ) );\n\nclass MediaTextEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onSelectMedia = this.onSelectMedia.bind( this );\n\t\tthis.onWidthChange = this.onWidthChange.bind( this );\n\t\tthis.commitWidthChange = this.commitWidthChange.bind( this );\n\t\tthis.state = {\n\t\t\tmediaWidth: null,\n\t\t};\n\t}\n\n\tonSelectMedia( media ) {\n\t\tconst { setAttributes } = this.props;\n\n\t\tlet mediaType;\n\t\tlet src;\n\t\t// for media selections originated from a file upload.\n\t\tif ( media.media_type ) {\n\t\t\tif ( media.media_type === 'image' ) {\n\t\t\t\tmediaType = 'image';\n\t\t\t} else {\n\t\t\t\t// only images and videos are accepted so if the media_type is not an image we can assume it is a video.\n\t\t\t\t// video contain the media type of 'file' in the object returned from the rest api.\n\t\t\t\tmediaType = 'video';\n\t\t\t}\n\t\t} else { // for media selections originated from existing files in the media library.\n\t\t\tmediaType = media.type;\n\t\t}\n\n\t\tif ( mediaType === 'image' ) {\n\t\t\t// Try the \"large\" size URL, falling back to the \"full\" size URL below.\n\t\t\tsrc = get( media, [ 'sizes', 'large', 'url' ] ) || get( media, [ 'media_details', 'sizes', 'large', 'source_url' ] );\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\tmediaAlt: media.alt,\n\t\t\tmediaId: media.id,\n\t\t\tmediaType,\n\t\t\tmediaUrl: src || media.url,\n\t\t\timageFill: undefined,\n\t\t\tfocalPoint: undefined,\n\t\t} );\n\t}\n\n\tonWidthChange( width ) {\n\t\tthis.setState( {\n\t\t\tmediaWidth: applyWidthConstraints( width ),\n\t\t} );\n\t}\n\n\tcommitWidthChange( width ) {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( {\n\t\t\tmediaWidth: applyWidthConstraints( width ),\n\t\t} );\n\t\tthis.setState( {\n\t\t\tmediaWidth: null,\n\t\t} );\n\t}\n\n\trenderMediaArea() {\n\t\tconst { attributes } = this.props;\n\t\tconst { mediaAlt, mediaId, mediaPosition, mediaType, mediaUrl, mediaWidth, imageFill, focalPoint } = attributes;\n\n\t\treturn (\n\t\t\t<MediaContainer\n\t\t\t\tclassName=\"block-library-media-text__media-container\"\n\t\t\t\tonSelectMedia={ this.onSelectMedia }\n\t\t\t\tonWidthChange={ this.onWidthChange }\n\t\t\t\tcommitWidthChange={ this.commitWidthChange }\n\t\t\t\t{ ...{ mediaAlt, mediaId, mediaType, mediaUrl, mediaPosition, mediaWidth, imageFill, focalPoint } }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tclassName,\n\t\t\tbackgroundColor,\n\t\t\tisSelected,\n\t\t\tsetAttributes,\n\t\t\tsetBackgroundColor,\n\t\t} = this.props;\n\t\tconst {\n\t\t\tisStackedOnMobile,\n\t\t\tmediaAlt,\n\t\t\tmediaPosition,\n\t\t\tmediaType,\n\t\t\tmediaWidth,\n\t\t\tverticalAlignment,\n\t\t\tmediaUrl,\n\t\t\timageFill,\n\t\t\tfocalPoint,\n\t\t} = attributes;\n\t\tconst temporaryMediaWidth = this.state.mediaWidth;\n\t\tconst classNames = classnames( className, {\n\t\t\t'has-media-on-the-right': 'right' === mediaPosition,\n\t\t\t'is-selected': isSelected,\n\t\t\t'has-background': ( backgroundColor.class || backgroundColor.color ),\n\t\t\t[ backgroundColor.class ]: backgroundColor.class,\n\t\t\t'is-stacked-on-mobile': isStackedOnMobile,\n\t\t\t[ `is-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t\t\t'is-image-fill': imageFill,\n\t\t} );\n\t\tconst widthString = `${ temporaryMediaWidth || mediaWidth }%`;\n\t\tconst gridTemplateColumns = 'right' === mediaPosition ? `1fr ${ widthString }` : `${ widthString } 1fr`;\n\t\tconst style = {\n\t\t\tgridTemplateColumns,\n\t\t\tmsGridColumns: gridTemplateColumns,\n\t\t\tbackgroundColor: backgroundColor.color,\n\t\t};\n\t\tconst colorSettings = [ {\n\t\t\tvalue: backgroundColor.color,\n\t\t\tonChange: setBackgroundColor,\n\t\t\tlabel: __( 'Background Color' ),\n\t\t} ];\n\t\tconst toolbarControls = [ {\n\t\t\ticon: 'align-pull-left',\n\t\t\ttitle: __( 'Show media on left' ),\n\t\t\tisActive: mediaPosition === 'left',\n\t\t\tonClick: () => setAttributes( { mediaPosition: 'left' } ),\n\t\t}, {\n\t\t\ticon: 'align-pull-right',\n\t\t\ttitle: __( 'Show media on right' ),\n\t\t\tisActive: mediaPosition === 'right',\n\t\t\tonClick: () => setAttributes( { mediaPosition: 'right' } ),\n\t\t} ];\n\t\tconst onMediaAltChange = ( newMediaAlt ) => {\n\t\t\tsetAttributes( { mediaAlt: newMediaAlt } );\n\t\t};\n\t\tconst onVerticalAlignmentChange = ( alignment ) => {\n\t\t\tsetAttributes( { verticalAlignment: alignment } );\n\t\t};\n\t\tconst mediaTextGeneralSettings = (\n\t\t\t<PanelBody title={ __( 'Media & Text Settings' ) }>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={ __( 'Stack on mobile' ) }\n\t\t\t\t\tchecked={ isStackedOnMobile }\n\t\t\t\t\tonChange={ () => setAttributes( {\n\t\t\t\t\t\tisStackedOnMobile: ! isStackedOnMobile,\n\t\t\t\t\t} ) }\n\t\t\t\t/>\n\t\t\t\t{ mediaType === 'image' && ( <ToggleControl\n\t\t\t\t\tlabel={ __( 'Crop image to fill entire column' ) }\n\t\t\t\t\tchecked={ imageFill }\n\t\t\t\t\tonChange={ () => setAttributes( {\n\t\t\t\t\t\timageFill: ! imageFill,\n\t\t\t\t\t} ) }\n\t\t\t\t/> ) }\n\t\t\t\t{ imageFill && ( <FocalPointPicker\n\t\t\t\t\tlabel={ __( 'Focal Point Picker' ) }\n\t\t\t\t\turl={ mediaUrl }\n\t\t\t\t\tvalue={ focalPoint }\n\t\t\t\t\tonChange={ ( value ) => setAttributes( { focalPoint: value } ) }\n\t\t\t\t/> ) }\n\t\t\t\t{ mediaType === 'image' && ( <TextareaControl\n\t\t\t\t\tlabel={ __( 'Alt Text (Alternative Text)' ) }\n\t\t\t\t\tvalue={ mediaAlt }\n\t\t\t\t\tonChange={ onMediaAltChange }\n\t\t\t\t\thelp={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\n\t\t\t\t\t\t\t\t{ __( 'Describe the purpose of the image' ) }\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t{ __( 'Leave empty if the image is purely decorative.' ) }\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/> ) }\n\t\t\t</PanelBody>\n\t\t);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t{ mediaTextGeneralSettings }\n\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\ttitle={ __( 'Color Settings' ) }\n\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\tcolorSettings={ colorSettings }\n\t\t\t\t\t/>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<Toolbar\n\t\t\t\t\t\tcontrols={ toolbarControls }\n\t\t\t\t\t/>\n\t\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\t\tonChange={ onVerticalAlignmentChange }\n\t\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t\t<div className={ classNames } style={ style } >\n\t\t\t\t\t{ this.renderMediaArea() }\n\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\ttemplate={ TEMPLATE }\n\t\t\t\t\t\ttemplateInsertUpdatesSelection={ false }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default withColors( 'backgroundColor' )( MediaTextEdit );\n"]}