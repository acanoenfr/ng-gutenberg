{"version":3,"sources":["@wordpress/block-library/src/paragraph/edit.js"],"names":["window","getComputedStyle","name","applyFallbackStyles","node","ownProps","attributes","textColor","backgroundColor","fontSize","customFontSize","editableNode","querySelector","computedStyles","fallbackBackgroundColor","undefined","fallbackTextColor","color","fallbackFontSize","parseInt","ParagraphBlock","arguments","toggleDropCap","bind","props","setAttributes","dropCap","checked","mergeBlocks","onReplace","className","setBackgroundColor","setTextColor","setFontSize","isRTL","align","content","placeholder","direction","nextAlign","icon","title","isActive","onClick","nextDirection","size","getDropCapHelp","value","onChange","label","class","nextContent","Component","ParagraphEdit","select","getSettings"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport {\n\tPanelBody,\n\tToggleControl,\n\tToolbar,\n\twithFallbackStyles,\n} from '@wordpress/components';\nimport {\n\twithColors,\n\tAlignmentToolbar,\n\tBlockControls,\n\tContrastChecker,\n\tFontSizePicker,\n\tInspectorControls,\n\tPanelColorSettings,\n\tRichText,\n\twithFontSizes,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\nimport { compose } from '@wordpress/compose';\nimport { withSelect } from '@wordpress/data';\n\nconst { getComputedStyle } = window;\n\nconst name = 'core/paragraph';\n\nconst applyFallbackStyles = withFallbackStyles( ( node, ownProps ) => {\n\tconst { textColor, backgroundColor, fontSize, customFontSize } = ownProps.attributes;\n\tconst editableNode = node.querySelector( '[contenteditable=\"true\"]' );\n\t//verify if editableNode is available, before using getComputedStyle.\n\tconst computedStyles = editableNode ? getComputedStyle( editableNode ) : null;\n\treturn {\n\t\tfallbackBackgroundColor: backgroundColor || ! computedStyles ? undefined : computedStyles.backgroundColor,\n\t\tfallbackTextColor: textColor || ! computedStyles ? undefined : computedStyles.color,\n\t\tfallbackFontSize: fontSize || customFontSize || ! computedStyles ? undefined : parseInt( computedStyles.fontSize ) || undefined,\n\t};\n} );\n\nclass ParagraphBlock extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.toggleDropCap = this.toggleDropCap.bind( this );\n\t}\n\n\ttoggleDropCap() {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tsetAttributes( { dropCap: ! attributes.dropCap } );\n\t}\n\n\tgetDropCapHelp( checked ) {\n\t\treturn checked ? __( 'Showing large initial letter.' ) : __( 'Toggle to show a large initial letter.' );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tsetAttributes,\n\t\t\tmergeBlocks,\n\t\t\tonReplace,\n\t\t\tclassName,\n\t\t\tbackgroundColor,\n\t\t\ttextColor,\n\t\t\tsetBackgroundColor,\n\t\t\tsetTextColor,\n\t\t\tfallbackBackgroundColor,\n\t\t\tfallbackTextColor,\n\t\t\tfallbackFontSize,\n\t\t\tfontSize,\n\t\t\tsetFontSize,\n\t\t\tisRTL,\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\talign,\n\t\t\tcontent,\n\t\t\tdropCap,\n\t\t\tplaceholder,\n\t\t\tdirection,\n\t\t} = attributes;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\tvalue={ align }\n\t\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\t\tsetAttributes( { align: nextAlign } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t{ isRTL && (\n\t\t\t\t\t\t<Toolbar\n\t\t\t\t\t\t\tcontrols={ [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticon: 'editor-ltr',\n\t\t\t\t\t\t\t\t\ttitle: _x( 'Left to right', 'editor button' ),\n\t\t\t\t\t\t\t\t\tisActive: direction === 'ltr',\n\t\t\t\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\t\t\t\tconst nextDirection = direction === 'ltr' ? undefined : 'ltr';\n\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\tdirection: nextDirection,\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</BlockControls>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Text Settings' ) } className=\"blocks-font-size\">\n\t\t\t\t\t\t<FontSizePicker\n\t\t\t\t\t\t\tfallbackFontSize={ fallbackFontSize }\n\t\t\t\t\t\t\tvalue={ fontSize.size }\n\t\t\t\t\t\t\tonChange={ setFontSize }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Drop Cap' ) }\n\t\t\t\t\t\t\tchecked={ !! dropCap }\n\t\t\t\t\t\t\tonChange={ this.toggleDropCap }\n\t\t\t\t\t\t\thelp={ this.getDropCapHelp }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\ttitle={ __( 'Color Settings' ) }\n\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\tcolorSettings={ [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: backgroundColor.color,\n\t\t\t\t\t\t\t\tonChange: setBackgroundColor,\n\t\t\t\t\t\t\t\tlabel: __( 'Background Color' ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: textColor.color,\n\t\t\t\t\t\t\t\tonChange: setTextColor,\n\t\t\t\t\t\t\t\tlabel: __( 'Text Color' ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t\t{ ...{\n\t\t\t\t\t\t\t\ttextColor: textColor.color,\n\t\t\t\t\t\t\t\tbackgroundColor: backgroundColor.color,\n\t\t\t\t\t\t\t\tfallbackTextColor,\n\t\t\t\t\t\t\t\tfallbackBackgroundColor,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tfontSize={ fontSize.size }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelColorSettings>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<RichText\n\t\t\t\t\tidentifier=\"content\"\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tclassName={ classnames( 'wp-block-paragraph', className, {\n\t\t\t\t\t\t'has-text-color': textColor.color,\n\t\t\t\t\t\t'has-background': backgroundColor.color,\n\t\t\t\t\t\t'has-drop-cap': dropCap,\n\t\t\t\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t\t\t\t\t[ backgroundColor.class ]: backgroundColor.class,\n\t\t\t\t\t\t[ textColor.class ]: textColor.class,\n\t\t\t\t\t\t[ fontSize.class ]: fontSize.class,\n\t\t\t\t\t} ) }\n\t\t\t\t\tstyle={ {\n\t\t\t\t\t\tbackgroundColor: backgroundColor.color,\n\t\t\t\t\t\tcolor: textColor.color,\n\t\t\t\t\t\tfontSize: fontSize.size ? fontSize.size + 'px' : undefined,\n\t\t\t\t\t\tdirection,\n\t\t\t\t\t} }\n\t\t\t\t\tvalue={ content }\n\t\t\t\t\tonChange={ ( nextContent ) => {\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tcontent: nextContent,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tonSplit={ ( value ) => {\n\t\t\t\t\t\tif ( ! value ) {\n\t\t\t\t\t\t\treturn createBlock( name );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn createBlock( name, {\n\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\tonRemove={ onReplace ? () => onReplace( [] ) : undefined }\n\t\t\t\t\taria-label={ content ? __( 'Paragraph block' ) : __( 'Empty block; start writing or type forward slash to choose a block' ) }\n\t\t\t\t\tplaceholder={ placeholder || __( 'Start writing or type / to choose a block' ) }\n\t\t\t\t\t__unstableEmbedURLOnPaste\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst ParagraphEdit = compose( [\n\twithColors( 'backgroundColor', { textColor: 'color' } ),\n\twithFontSizes( 'fontSize' ),\n\tapplyFallbackStyles,\n\twithSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tisRTL: getSettings().isRTL,\n\t\t};\n\t} ),\n] )( ParagraphBlock );\n\nexport default ParagraphEdit;\n"]}