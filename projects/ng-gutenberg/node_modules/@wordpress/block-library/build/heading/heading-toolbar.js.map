{"version":3,"sources":["@wordpress/block-library/src/heading/heading-toolbar.js"],"names":["HeadingToolbar","targetLevel","selectedLevel","onChange","icon","title","isActive","onClick","props","isCollapsed","minLevel","maxLevel","map","index","createLevelControl","Component"],"mappings":";;;;;;;;;AASA;;;;;;;;;;;;AANA;;AAKA;;AAEA;;AAKA;;AAfA;;;;AAKA;;;;AAOA;;;IAKMA,c;;;;;;;;;;;;uCACeC,W,EAAaC,a,EAAeC,Q,EAAW;AAC1D,aAAO;AACNC,QAAAA,IAAI,EAAE,4BAAC,yBAAD;AAAkB,UAAA,KAAK,EAAGH;AAA1B,UADA;AAEN;AACAI,QAAAA,KAAK,EAAE,mBAAS,cAAI,YAAJ,CAAT,EAA6BJ,WAA7B,CAHD;AAINK,QAAAA,QAAQ,EAAEL,WAAW,KAAKC,aAJpB;AAKNK,QAAAA,OAAO,EAAE;AAAA,iBAAMJ,QAAQ,CAAEF,WAAF,CAAd;AAAA;AALH,OAAP;AAOA;;;6BAEQ;AAAA;;AAAA,wBACoE,KAAKO,KADzE;AAAA,8CACAC,WADA;AAAA,UACAA,WADA,sCACc,IADd;AAAA,UACoBC,QADpB,eACoBA,QADpB;AAAA,UAC8BC,QAD9B,eAC8BA,QAD9B;AAAA,UACwCT,aADxC,eACwCA,aADxC;AAAA,UACuDC,QADvD,eACuDA,QADvD;AAGR,aACC,4BAAC,mBAAD;AACC,QAAA,WAAW,EAAGM,WADf;AAEC,QAAA,IAAI,EAAG,4BAAC,yBAAD;AAAkB,UAAA,KAAK,EAAGP;AAA1B,UAFR;AAGC,QAAA,QAAQ,EAAG,mBAAOQ,QAAP,EAAiBC,QAAjB,EAA4BC,GAA5B,CACV,UAAEC,KAAF;AAAA,iBAAa,KAAI,CAACC,kBAAL,CAAyBD,KAAzB,EAAgCX,aAAhC,EAA+CC,QAA/C,CAAb;AAAA,SADU;AAHZ,QADD;AAQA;;;EAtB2BY,kB;;eAyBdf,c","sourcesContent":["/**\n * External dependencies\n */\nimport { range } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { Toolbar } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport HeadingLevelIcon from './heading-level-icon';\n\nclass HeadingToolbar extends Component {\n\tcreateLevelControl( targetLevel, selectedLevel, onChange ) {\n\t\treturn {\n\t\t\ticon: <HeadingLevelIcon level={ targetLevel } />,\n\t\t\t// translators: %s: heading level e.g: \"1\", \"2\", \"3\"\n\t\t\ttitle: sprintf( __( 'Heading %d' ), targetLevel ),\n\t\t\tisActive: targetLevel === selectedLevel,\n\t\t\tonClick: () => onChange( targetLevel ),\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { isCollapsed = true, minLevel, maxLevel, selectedLevel, onChange } = this.props;\n\n\t\treturn (\n\t\t\t<Toolbar\n\t\t\t\tisCollapsed={ isCollapsed }\n\t\t\t\ticon={ <HeadingLevelIcon level={ selectedLevel } /> }\n\t\t\t\tcontrols={ range( minLevel, maxLevel ).map(\n\t\t\t\t\t( index ) => this.createLevelControl( index, selectedLevel, onChange )\n\t\t\t\t) } />\n\t\t);\n\t}\n}\n\nexport default HeadingToolbar;\n"]}