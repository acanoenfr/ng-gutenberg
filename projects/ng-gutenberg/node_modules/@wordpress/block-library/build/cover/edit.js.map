{"version":3,"sources":["@wordpress/block-library/src/cover/edit.js"],"names":["ALLOWED_MEDIA_TYPES","INNER_BLOCKS_TEMPLATE","align","fontSize","placeholder","retrieveFastAverageColor","fastAverageColor","FastAverageColor","CoverHeightInput","value","instanceId","onChange","temporaryInput","setTemporaryInput","onChangeEvent","event","unprocessedValue","target","inputValue","parseInt","undefined","isNaN","COVER_MIN_HEIGHT","onBlurEvent","inputId","RESIZABLE_BOX_ENABLE_OPTION","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","ResizableCover","className","children","onResizeStart","onResize","onResizeStop","isResizing","setIsResizing","onResizeEvent","direction","elt","clientHeight","onResizeStartEvent","onResizeStopEvent","CoverEdit","arguments","state","isDark","temporaryMinHeight","imageRef","videoRef","changeIsDarkIfRequired","bind","onUploadError","handleBackgroundMode","prevProps","message","noticeOperations","props","removeAllNotices","createErrorNotice","attributes","setAttributes","isSelected","noticeUI","overlayColor","setOverlayColor","toggleSelection","backgroundType","dimRatio","focalPoint","hasParallax","id","url","minHeight","onSelectMedia","media","mediaType","media_type","IMAGE_BACKGROUND_TYPE","VIDEO_BACKGROUND_TYPE","type","toggleParallax","setDimRatio","ratio","style","backgroundColor","color","backgroundPosition","x","y","controls","open","label","placeholderIcon","icon","title","instructions","classes","class","newMinHeight","setState","display","element","current","getColorAsync","newIsDark","Component","dispatch","withNotices","withInstanceId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport FastAverageColor from 'fast-average-color';\nimport tinycolor from 'tinycolor2';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tComponent,\n\tcreateRef,\n\tuseCallback,\n\tuseState,\n} from '@wordpress/element';\nimport {\n\tFocalPointPicker,\n\tIconButton,\n\tPanelBody,\n\tPanelRow,\n\tRangeControl,\n\tToggleControl,\n\tToolbar,\n\twithNotices,\n\tResizableBox,\n\tBaseControl,\n\tButton,\n} from '@wordpress/components';\nimport { compose, withInstanceId } from '@wordpress/compose';\nimport {\n\tBlockControls,\n\tBlockIcon,\n\tInnerBlocks,\n\tInspectorControls,\n\tMediaPlaceholder,\n\tMediaUpload,\n\tMediaUploadCheck,\n\tPanelColorSettings,\n\twithColors,\n\tColorPalette,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport icon from './icon';\nimport {\n\tIMAGE_BACKGROUND_TYPE,\n\tVIDEO_BACKGROUND_TYPE,\n\tCOVER_MIN_HEIGHT,\n\tbackgroundImageStyles,\n\tdimRatioToClass,\n} from './shared';\n\n/**\n * Module Constants\n */\nconst ALLOWED_MEDIA_TYPES = [ 'image', 'video' ];\nconst INNER_BLOCKS_TEMPLATE = [\n\t[ 'core/paragraph', {\n\t\talign: 'center',\n\t\tfontSize: 'large',\n\t\tplaceholder: __( 'Write title…' ),\n\t} ],\n];\n\nfunction retrieveFastAverageColor() {\n\tif ( ! retrieveFastAverageColor.fastAverageColor ) {\n\t\tretrieveFastAverageColor.fastAverageColor = new FastAverageColor();\n\t}\n\treturn retrieveFastAverageColor.fastAverageColor;\n}\n\nconst CoverHeightInput = withInstanceId(\n\tfunction( { value = '', instanceId, onChange } ) {\n\t\tconst [ temporaryInput, setTemporaryInput ] = useState( null );\n\t\tconst onChangeEvent = useCallback(\n\t\t\t( event ) => {\n\t\t\t\tconst unprocessedValue = event.target.value;\n\t\t\t\tconst inputValue = unprocessedValue !== '' ?\n\t\t\t\t\tparseInt( event.target.value, 10 ) :\n\t\t\t\t\tundefined;\n\t\t\t\tif ( ( isNaN( inputValue ) || inputValue < COVER_MIN_HEIGHT ) && inputValue !== undefined ) {\n\t\t\t\t\tsetTemporaryInput( event.target.value );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetTemporaryInput( null );\n\t\t\t\tonChange( inputValue );\n\t\t\t},\n\t\t\t[ onChange, setTemporaryInput ]\n\t\t);\n\t\tconst onBlurEvent = useCallback(\n\t\t\t() => {\n\t\t\t\tif ( temporaryInput !== null ) {\n\t\t\t\t\tsetTemporaryInput( null );\n\t\t\t\t}\n\t\t\t},\n\t\t\t[ temporaryInput, setTemporaryInput ]\n\t\t);\n\t\tconst inputId = `block-cover-height-input-${ instanceId }`;\n\t\treturn (\n\t\t\t<BaseControl label={ __( 'Minimum height in pixels' ) } id={ inputId }>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tid={ inputId }\n\t\t\t\t\tonChange={ onChangeEvent }\n\t\t\t\t\tonBlur={ onBlurEvent }\n\t\t\t\t\tvalue={ temporaryInput !== null ? temporaryInput : value }\n\t\t\t\t\tmin={ COVER_MIN_HEIGHT }\n\t\t\t\t\tstep=\"10\"\n\t\t\t\t/>\n\t\t\t</BaseControl>\n\t\t);\n\t}\n);\n\nconst RESIZABLE_BOX_ENABLE_OPTION = {\n\ttop: false,\n\tright: false,\n\tbottom: true,\n\tleft: false,\n\ttopRight: false,\n\tbottomRight: false,\n\tbottomLeft: false,\n\ttopLeft: false,\n};\n\nfunction ResizableCover( {\n\tclassName,\n\tchildren,\n\tonResizeStart,\n\tonResize,\n\tonResizeStop,\n} ) {\n\tconst [ isResizing, setIsResizing ] = useState( false );\n\tconst onResizeEvent = useCallback(\n\t\t( event, direction, elt ) => {\n\t\t\tonResize( elt.clientHeight );\n\t\t\tif ( ! isResizing ) {\n\t\t\t\tsetIsResizing( true );\n\t\t\t}\n\t\t},\n\t\t[ onResize, setIsResizing ],\n\t);\n\tconst onResizeStartEvent = useCallback(\n\t\t( event, direction, elt ) => {\n\t\t\tonResizeStart( elt.clientHeight );\n\t\t\tonResize( elt.clientHeight );\n\t\t},\n\t\t[ onResizeStart, onResize ]\n\t);\n\tconst onResizeStopEvent = useCallback(\n\t\t( event, direction, elt ) => {\n\t\t\tonResizeStop( elt.clientHeight );\n\t\t\tsetIsResizing( false );\n\t\t},\n\t\t[ onResizeStop, setIsResizing ]\n\t);\n\n\treturn (\n\t\t<ResizableBox\n\t\t\tclassName={ classnames(\n\t\t\t\tclassName,\n\t\t\t\t{\n\t\t\t\t\t'is-resizing': isResizing,\n\t\t\t\t}\n\t\t\t) }\n\t\t\tenable={ RESIZABLE_BOX_ENABLE_OPTION }\n\t\t\tonResizeStart={ onResizeStartEvent }\n\t\t\tonResize={ onResizeEvent }\n\t\t\tonResizeStop={ onResizeStopEvent }\n\t\t\tminHeight={ COVER_MIN_HEIGHT }\n\t\t>\n\t\t\t{ children }\n\t\t</ResizableBox>\n\t);\n}\n\nclass CoverEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisDark: false,\n\t\t\ttemporaryMinHeight: null,\n\t\t};\n\t\tthis.imageRef = createRef();\n\t\tthis.videoRef = createRef();\n\t\tthis.changeIsDarkIfRequired = this.changeIsDarkIfRequired.bind( this );\n\t\tthis.onUploadError = this.onUploadError.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.handleBackgroundMode();\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tthis.handleBackgroundMode( prevProps );\n\t}\n\n\tonUploadError( message ) {\n\t\tconst { noticeOperations } = this.props;\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tsetAttributes,\n\t\t\tisSelected,\n\t\t\tclassName,\n\t\t\tnoticeUI,\n\t\t\toverlayColor,\n\t\t\tsetOverlayColor,\n\t\t\ttoggleSelection,\n\t\t} = this.props;\n\t\tconst {\n\t\t\tbackgroundType,\n\t\t\tdimRatio,\n\t\t\tfocalPoint,\n\t\t\thasParallax,\n\t\t\tid,\n\t\t\turl,\n\t\t\tminHeight,\n\t\t} = attributes;\n\t\tconst onSelectMedia = ( media ) => {\n\t\t\tif ( ! media || ! media.url ) {\n\t\t\t\tsetAttributes( { url: undefined, id: undefined } );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet mediaType;\n\t\t\t// for media selections originated from a file upload.\n\t\t\tif ( media.media_type ) {\n\t\t\t\tif ( media.media_type === IMAGE_BACKGROUND_TYPE ) {\n\t\t\t\t\tmediaType = IMAGE_BACKGROUND_TYPE;\n\t\t\t\t} else {\n\t\t\t\t\t// only images and videos are accepted so if the media_type is not an image we can assume it is a video.\n\t\t\t\t\t// Videos contain the media type of 'file' in the object returned from the rest api.\n\t\t\t\t\tmediaType = VIDEO_BACKGROUND_TYPE;\n\t\t\t\t}\n\t\t\t} else { // for media selections originated from existing files in the media library.\n\t\t\t\tif (\n\t\t\t\t\tmedia.type !== IMAGE_BACKGROUND_TYPE &&\n\t\t\t\t\tmedia.type !== VIDEO_BACKGROUND_TYPE\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmediaType = media.type;\n\t\t\t}\n\n\t\t\tsetAttributes( {\n\t\t\t\turl: media.url,\n\t\t\t\tid: media.id,\n\t\t\t\tbackgroundType: mediaType,\n\t\t\t\t...( mediaType === VIDEO_BACKGROUND_TYPE ?\n\t\t\t\t\t{ focalPoint: undefined, hasParallax: undefined } :\n\t\t\t\t\t{}\n\t\t\t\t),\n\t\t\t} );\n\t\t};\n\n\t\tconst toggleParallax = () => {\n\t\t\tsetAttributes( {\n\t\t\t\thasParallax: ! hasParallax,\n\t\t\t\t...( ! hasParallax ? { focalPoint: undefined } : {} ),\n\t\t\t} );\n\t\t};\n\t\tconst setDimRatio = ( ratio ) => setAttributes( { dimRatio: ratio } );\n\n\t\tconst { temporaryMinHeight } = this.state;\n\n\t\tconst style = {\n\t\t\t...(\n\t\t\t\tbackgroundType === IMAGE_BACKGROUND_TYPE ?\n\t\t\t\t\tbackgroundImageStyles( url ) :\n\t\t\t\t\t{}\n\t\t\t),\n\t\t\tbackgroundColor: overlayColor.color,\n\t\t\tminHeight: ( temporaryMinHeight || minHeight ),\n\t\t};\n\n\t\tif ( focalPoint ) {\n\t\t\tstyle.backgroundPosition = `${ focalPoint.x * 100 }% ${ focalPoint.y * 100 }%`;\n\t\t}\n\n\t\tconst controls = (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t{ !! ( url || overlayColor.color ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\t\t\t\tonSelect={ onSelectMedia }\n\t\t\t\t\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\t\t\t\t\tvalue={ id }\n\t\t\t\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"components-toolbar__control\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={ __( 'Edit media' ) }\n\t\t\t\t\t\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</BlockControls>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t{ !! url && (\n\t\t\t\t\t\t<PanelBody title={ __( 'Media Settings' ) }>\n\t\t\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Fixed Background' ) }\n\t\t\t\t\t\t\t\t\tchecked={ hasParallax }\n\t\t\t\t\t\t\t\t\tonChange={ toggleParallax }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType && ! hasParallax && (\n\t\t\t\t\t\t\t\t<FocalPointPicker\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Focal Point Picker' ) }\n\t\t\t\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\t\t\t\tvalue={ focalPoint }\n\t\t\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { focalPoint: value } ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisDefault\n\t\t\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t\t\t\tclassName=\"block-library-cover__reset-button\"\n\t\t\t\t\t\t\t\t\tonClick={ () => setAttributes( {\n\t\t\t\t\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\t\t\t\t\tbackgroundType: undefined,\n\t\t\t\t\t\t\t\t\t\tdimRatio: undefined,\n\t\t\t\t\t\t\t\t\t\tfocalPoint: undefined,\n\t\t\t\t\t\t\t\t\t\thasParallax: undefined,\n\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Clear Media' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ( url || overlayColor.color ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<PanelBody title={ __( 'Dimensions' ) }>\n\t\t\t\t\t\t\t\t<CoverHeightInput\n\t\t\t\t\t\t\t\t\tvalue={ temporaryMinHeight || minHeight }\n\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t( value ) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\t\tminHeight: value,\n\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\t\t\ttitle={ __( 'Overlay' ) }\n\t\t\t\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\t\t\t\tcolorSettings={ [ {\n\t\t\t\t\t\t\t\t\tvalue: overlayColor.color,\n\t\t\t\t\t\t\t\t\tonChange: setOverlayColor,\n\t\t\t\t\t\t\t\t\tlabel: __( 'Overlay Color' ),\n\t\t\t\t\t\t\t\t} ] }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ !! url && (\n\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\tlabel={ __( 'Background Opacity' ) }\n\t\t\t\t\t\t\t\t\t\tvalue={ dimRatio }\n\t\t\t\t\t\t\t\t\t\tonChange={ setDimRatio }\n\t\t\t\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\t\t\t\tmax={ 100 }\n\t\t\t\t\t\t\t\t\t\tstep={ 10 }\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</PanelColorSettings>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</InspectorControls>\n\t\t\t</>\n\t\t);\n\n\t\tif ( ! ( url || overlayColor.color ) ) {\n\t\t\tconst placeholderIcon = <BlockIcon icon={ icon } />;\n\t\t\tconst label = __( 'Cover' );\n\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{ controls }\n\t\t\t\t\t<MediaPlaceholder\n\t\t\t\t\t\ticon={ placeholderIcon }\n\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\tlabels={ {\n\t\t\t\t\t\t\ttitle: label,\n\t\t\t\t\t\t\tinstructions: __( 'Upload an image or video file, or pick one from your media library.' ),\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonSelect={ onSelectMedia }\n\t\t\t\t\t\taccept=\"image/*,video/*\"\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\tnotices={ noticeUI }\n\t\t\t\t\t\tonError={ this.onUploadError }\n\t\t\t\t\t>\n\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\tdisableCustomColors={ true }\n\t\t\t\t\t\t\tvalue={ overlayColor.color }\n\t\t\t\t\t\t\tonChange={ setOverlayColor }\n\t\t\t\t\t\t\tclearable={ false }\n\t\t\t\t\t\t\tclassName=\"wp-block-cover__placeholder-color-palette\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MediaPlaceholder>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\n\t\tconst classes = classnames(\n\t\t\tclassName,\n\t\t\tdimRatioToClass( dimRatio ),\n\t\t\t{\n\t\t\t\t'is-dark-theme': this.state.isDark,\n\t\t\t\t'has-background-dim': dimRatio !== 0,\n\t\t\t\t'has-parallax': hasParallax,\n\t\t\t\t[ overlayColor.class ]: overlayColor.class,\n\t\t\t}\n\t\t);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ controls }\n\t\t\t\t<ResizableCover\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'block-library-cover__resize-container',\n\t\t\t\t\t\t{ 'is-selected': isSelected },\n\t\t\t\t\t) }\n\t\t\t\t\tonResizeStart={ () => toggleSelection( false ) }\n\t\t\t\t\tonResize={ ( newMinHeight ) => {\n\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\ttemporaryMinHeight: newMinHeight,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tonResizeStop={\n\t\t\t\t\t\t( newMinHeight ) => {\n\t\t\t\t\t\t\ttoggleSelection( true );\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tminHeight: newMinHeight,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\t\ttemporaryMinHeight: null,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tdata-url={ url }\n\t\t\t\t\t\tstyle={ style }\n\t\t\t\t\t\tclassName={ classes }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t// Used only to programmatically check if the image is dark or not\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tref={ this.imageRef }\n\t\t\t\t\t\t\t\taria-hidden\n\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t\tdisplay: 'none',\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ VIDEO_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\tref={ this.videoRef }\n\t\t\t\t\t\t\t\tclassName=\"wp-block-cover__video-background\"\n\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\tmuted\n\t\t\t\t\t\t\t\tloop\n\t\t\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<div className=\"wp-block-cover__inner-container\">\n\t\t\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\t\t\ttemplate={ INNER_BLOCKS_TEMPLATE }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ResizableCover>\n\t\t\t</>\n\t\t);\n\t}\n\n\thandleBackgroundMode( prevProps ) {\n\t\tconst { attributes, overlayColor } = this.props;\n\t\tconst { dimRatio, url } = attributes;\n\t\t// If opacity is greater than 50 the dominant color is the overlay color,\n\t\t// so use that color for the dark mode computation.\n\t\tif ( dimRatio > 50 ) {\n\t\t\tif (\n\t\t\t\tprevProps &&\n\t\t\t\tprevProps.attributes.dimRatio > 50 &&\n\t\t\t\tprevProps.overlayColor.color === overlayColor.color\n\t\t\t) {\n\t\t\t\t// No relevant prop changes happened there is no need to apply any change.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( ! overlayColor.color ) {\n\t\t\t\t// If no overlay color exists the overlay color is black (isDark )\n\t\t\t\tthis.changeIsDarkIfRequired( true );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.changeIsDarkIfRequired(\n\t\t\t\ttinycolor( overlayColor.color ).isDark()\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t// If opacity is lower than 50 the dominant color is the image or video color,\n\t\t// so use that color for the dark mode computation.\n\n\t\tif (\n\t\t\tprevProps &&\n\t\t\tprevProps.attributes.dimRatio <= 50 &&\n\t\t\tprevProps.attributes.url === url\n\t\t) {\n\t\t\t// No relevant prop changes happened there is no need to apply any change.\n\t\t\treturn;\n\t\t}\n\t\tconst { backgroundType } = attributes;\n\n\t\tlet element;\n\n\t\tswitch ( backgroundType ) {\n\t\t\tcase IMAGE_BACKGROUND_TYPE:\n\t\t\t\telement = this.imageRef.current;\n\t\t\t\tbreak;\n\t\t\tcase VIDEO_BACKGROUND_TYPE:\n\t\t\t\telement = this.videoRef.current;\n\t\t\t\tbreak;\n\t\t}\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\t\tretrieveFastAverageColor().getColorAsync( element, ( color ) => {\n\t\t\tthis.changeIsDarkIfRequired( color.isDark );\n\t\t} );\n\t}\n\n\tchangeIsDarkIfRequired( newIsDark ) {\n\t\tif ( this.state.isDark !== newIsDark ) {\n\t\t\tthis.setState( {\n\t\t\t\tisDark: newIsDark,\n\t\t\t} );\n\t\t}\n\t}\n}\n\nexport default compose( [\n\twithDispatch( ( dispatch ) => {\n\t\tconst { toggleSelection } = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\ttoggleSelection,\n\t\t};\n\t} ),\n\twithColors( { overlayColor: 'background-color' } ),\n\twithNotices,\n\twithInstanceId,\n] )( CoverEdit );\n"]}