{"version":3,"sources":["@wordpress/block-library/src/columns/edit.js"],"names":["ALLOWED_BLOCKS","TEMPLATE_OPTIONS","title","icon","template","width","DEFAULT_COLUMNS","ColumnsEdit","attributes","className","updateAlignment","updateColumns","clientId","verticalAlignment","select","count","getBlockCount","setTemplate","forceUseTemplate","setForceUseTemplate","classes","showTemplateSelector","value","nextTemplate","undefined","dispatch","ownProps","registry","setAttributes","updateBlockAttributes","getBlockOrder","innerBlockClientIds","forEach","innerBlockClientId","previousColumns","newColumns","replaceInnerBlocks","getBlocks","innerBlocks","hasExplicitWidths","isAddingColumn","newColumnWidth","widths"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { dropRight, times } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tPanelBody,\n\tRangeControl,\n\tSVG,\n\tPath,\n} from '@wordpress/components';\nimport {\n\tInspectorControls,\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n} from '@wordpress/block-editor';\nimport { withDispatch, useSelect } from '@wordpress/data';\nimport { createBlock } from '@wordpress/blocks';\nimport { useState, useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetColumnsTemplate,\n\thasExplicitColumnWidths,\n\tgetMappedColumnWidths,\n\tgetRedistributedColumnWidths,\n\ttoWidthPrecision,\n} from './utils';\n\n/**\n * Allowed blocks constant is passed to InnerBlocks precisely as specified here.\n * The contents of the array should never change.\n * The array should contain the name of each block that is allowed.\n * In columns block, the only block we allow is 'core/column'.\n *\n * @constant\n * @type {string[]}\n */\nconst ALLOWED_BLOCKS = [ 'core/column' ];\n\n/**\n * Template option choices for predefined columns layouts.\n *\n * @constant\n * @type {Array}\n */\nconst TEMPLATE_OPTIONS = [\n\t{\n\t\ttitle: __( 'Two columns; equal split' ),\n\t\ticon: <SVG width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><Path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M39 12C40.1046 12 41 12.8954 41 14V34C41 35.1046 40.1046 36 39 36H9C7.89543 36 7 35.1046 7 34V14C7 12.8954 7.89543 12 9 12H39ZM39 34V14H25V34H39ZM23 34H9V14H23V34Z\" /></SVG>,\n\t\ttemplate: [\n\t\t\t[ 'core/column' ],\n\t\t\t[ 'core/column' ],\n\t\t],\n\t},\n\t{\n\t\ttitle: __( 'Two columns; one-third, two-thirds split' ),\n\t\ticon: <SVG width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><Path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M39 12C40.1046 12 41 12.8954 41 14V34C41 35.1046 40.1046 36 39 36H9C7.89543 36 7 35.1046 7 34V14C7 12.8954 7.89543 12 9 12H39ZM39 34V14H20V34H39ZM18 34H9V14H18V34Z\" /></SVG>,\n\t\ttemplate: [\n\t\t\t[ 'core/column', { width: 33.33 } ],\n\t\t\t[ 'core/column', { width: 66.66 } ],\n\t\t],\n\t},\n\t{\n\t\ttitle: __( 'Two columns; two-thirds, one-third split' ),\n\t\ticon: <SVG width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><Path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M39 12C40.1046 12 41 12.8954 41 14V34C41 35.1046 40.1046 36 39 36H9C7.89543 36 7 35.1046 7 34V14C7 12.8954 7.89543 12 9 12H39ZM39 34V14H30V34H39ZM28 34H9V14H28V34Z\" /></SVG>,\n\t\ttemplate: [\n\t\t\t[ 'core/column', { width: 66.66 } ],\n\t\t\t[ 'core/column', { width: 33.33 } ],\n\t\t],\n\t},\n\t{\n\t\ttitle: __( 'Three columns; equal split' ),\n\t\ticon: <SVG width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><Path fillRule=\"evenodd\" d=\"M41 14a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h30a2 2 0 0 0 2-2V14zM28.5 34h-9V14h9v20zm2 0V14H39v20h-8.5zm-13 0H9V14h8.5v20z\" /></SVG>,\n\t\ttemplate: [\n\t\t\t[ 'core/column' ],\n\t\t\t[ 'core/column' ],\n\t\t\t[ 'core/column' ],\n\t\t],\n\t},\n\t{\n\t\ttitle: __( 'Three columns; wide center column' ),\n\t\ticon: <SVG width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><Path fillRule=\"evenodd\" d=\"M41 14a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h30a2 2 0 0 0 2-2V14zM31 34H17V14h14v20zm2 0V14h6v20h-6zm-18 0H9V14h6v20z\" /></SVG>,\n\t\ttemplate: [\n\t\t\t[ 'core/column', { width: 25 } ],\n\t\t\t[ 'core/column', { width: 50 } ],\n\t\t\t[ 'core/column', { width: 25 } ],\n\t\t],\n\t},\n];\n\n/**\n * Number of columns to assume for template in case the user opts to skip\n * template option selection.\n *\n * @type {number}\n */\nconst DEFAULT_COLUMNS = 2;\n\nexport function ColumnsEdit( {\n\tattributes,\n\tclassName,\n\tupdateAlignment,\n\tupdateColumns,\n\tclientId,\n} ) {\n\tconst { verticalAlignment } = attributes;\n\n\tconst { count } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tcount: select( 'core/block-editor' ).getBlockCount( clientId ),\n\t\t};\n\t} );\n\tconst [ template, setTemplate ] = useState( getColumnsTemplate( count ) );\n\tconst [ forceUseTemplate, setForceUseTemplate ] = useState( false );\n\n\t// This is used to force the usage of the template even if the count doesn't match the template\n\t// The count doesn't match the template once you use undo/redo (this is used to reset to the placeholder state).\n\tuseEffect( () => {\n\t\t// Once the template is applied, reset it.\n\t\tif ( forceUseTemplate ) {\n\t\t\tsetForceUseTemplate( false );\n\t\t}\n\t}, [ forceUseTemplate ] );\n\n\tconst classes = classnames( className, {\n\t\t[ `are-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t} );\n\n\t// The template selector is shown when we first insert the columns block (count === 0).\n\t// or if there's no template available.\n\t// The count === 0 trick is useful when you use undo/redo.\n\tconst showTemplateSelector = ( count === 0 && ! forceUseTemplate ) || ! template;\n\n\treturn (\n\t\t<>\n\t\t\t{ ! showTemplateSelector && (\n\t\t\t\t<>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<PanelBody>\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\t\tvalue={ count }\n\t\t\t\t\t\t\t\tonChange={ ( value ) => updateColumns( count, value ) }\n\t\t\t\t\t\t\t\tmin={ 2 }\n\t\t\t\t\t\t\t\tmax={ 6 }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<div className={ classes }>\n\t\t\t\t<InnerBlocks\n\t\t\t\t\t__experimentalTemplateOptions={ TEMPLATE_OPTIONS }\n\t\t\t\t\t__experimentalOnSelectTemplateOption={ ( nextTemplate ) => {\n\t\t\t\t\t\tif ( nextTemplate === undefined ) {\n\t\t\t\t\t\t\tnextTemplate = getColumnsTemplate( DEFAULT_COLUMNS );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetTemplate( nextTemplate );\n\t\t\t\t\t\tsetForceUseTemplate( true );\n\t\t\t\t\t} }\n\t\t\t\t\t__experimentalAllowTemplateOptionSkip\n\t\t\t\t\ttemplate={ showTemplateSelector ? null : template }\n\t\t\t\t\ttemplateLock=\"all\"\n\t\t\t\t\tallowedBlocks={ ALLOWED_BLOCKS } />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default withDispatch( ( dispatch, ownProps, registry ) => ( {\n\t/**\n\t * Update all child Column blocks with a new vertical alignment setting\n\t * based on whatever alignment is passed in. This allows change to parent\n\t * to overide anything set on a individual column basis.\n\t *\n\t * @param {string} verticalAlignment the vertical alignment setting\n\t */\n\tupdateAlignment( verticalAlignment ) {\n\t\tconst { clientId, setAttributes } = ownProps;\n\t\tconst { updateBlockAttributes } = dispatch( 'core/block-editor' );\n\t\tconst { getBlockOrder } = registry.select( 'core/block-editor' );\n\n\t\t// Update own alignment.\n\t\tsetAttributes( { verticalAlignment } );\n\n\t\t// Update all child Column Blocks to match\n\t\tconst innerBlockClientIds = getBlockOrder( clientId );\n\t\tinnerBlockClientIds.forEach( ( innerBlockClientId ) => {\n\t\t\tupdateBlockAttributes( innerBlockClientId, {\n\t\t\t\tverticalAlignment,\n\t\t\t} );\n\t\t} );\n\t},\n\n\t/**\n\t * Updates the column count, including necessary revisions to child Column\n\t * blocks to grant required or redistribute available space.\n\t *\n\t * @param {number} previousColumns Previous column count.\n\t * @param {number} newColumns      New column count.\n\t */\n\tupdateColumns( previousColumns, newColumns ) {\n\t\tconst { clientId } = ownProps;\n\t\tconst { replaceInnerBlocks } = dispatch( 'core/block-editor' );\n\t\tconst { getBlocks } = registry.select( 'core/block-editor' );\n\n\t\tlet innerBlocks = getBlocks( clientId );\n\t\tconst hasExplicitWidths = hasExplicitColumnWidths( innerBlocks );\n\n\t\t// Redistribute available width for existing inner blocks.\n\t\tconst isAddingColumn = newColumns > previousColumns;\n\n\t\tif ( isAddingColumn && hasExplicitWidths ) {\n\t\t\t// If adding a new column, assign width to the new column equal to\n\t\t\t// as if it were `1 / columns` of the total available space.\n\t\t\tconst newColumnWidth = toWidthPrecision( 100 / newColumns );\n\n\t\t\t// Redistribute in consideration of pending block insertion as\n\t\t\t// constraining the available working width.\n\t\t\tconst widths = getRedistributedColumnWidths( innerBlocks, 100 - newColumnWidth );\n\n\t\t\tinnerBlocks = [\n\t\t\t\t...getMappedColumnWidths( innerBlocks, widths ),\n\t\t\t\t...times( newColumns - previousColumns, () => {\n\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\twidth: newColumnWidth,\n\t\t\t\t\t} );\n\t\t\t\t} ),\n\t\t\t];\n\t\t} else if ( isAddingColumn ) {\n\t\t\tinnerBlocks = [\n\t\t\t\t...innerBlocks,\n\t\t\t\t...times( newColumns - previousColumns, () => {\n\t\t\t\t\treturn createBlock( 'core/column' );\n\t\t\t\t} ),\n\t\t\t];\n\t\t} else {\n\t\t\t// The removed column will be the last of the inner blocks.\n\t\t\tinnerBlocks = dropRight( innerBlocks, previousColumns - newColumns );\n\n\t\t\tif ( hasExplicitWidths ) {\n\t\t\t\t// Redistribute as if block is already removed.\n\t\t\t\tconst widths = getRedistributedColumnWidths( innerBlocks, 100 );\n\n\t\t\t\tinnerBlocks = getMappedColumnWidths( innerBlocks, widths );\n\t\t\t}\n\t\t}\n\n\t\treplaceInnerBlocks( clientId, innerBlocks, false );\n\t},\n} ) )( ColumnsEdit );\n"]}