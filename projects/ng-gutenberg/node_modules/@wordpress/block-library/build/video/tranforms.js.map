{"version":3,"sources":["@wordpress/block-library/src/video/tranforms.js"],"names":["transforms","from","type","isMatch","files","length","indexOf","transform","file","block","src","tag","attributes","shortcode","named","mp4","m4v","webm","ogv","flv","poster","loop","autoplay","preload"],"mappings":";;;;;;;AAGA;;AACA;;AAJA;;;AAMA,IAAMA,UAAU,GAAG;AAClBC,EAAAA,IAAI,EAAE,CACL;AACCC,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,OAFD,mBAEUC,KAFV,EAEkB;AAChB,aAAOA,KAAK,CAACC,MAAN,KAAiB,CAAjB,IAAsBD,KAAK,CAAE,CAAF,CAAL,CAAWF,IAAX,CAAgBI,OAAhB,CAAyB,QAAzB,MAAwC,CAArE;AACA,KAJF;AAKCC,IAAAA,SALD,qBAKYH,KALZ,EAKoB;AAClB,UAAMI,IAAI,GAAGJ,KAAK,CAAE,CAAF,CAAlB,CADkB,CAElB;AACA;AACA;;AACA,UAAMK,KAAK,GAAG,yBAAa,YAAb,EAA2B;AACxCC,QAAAA,GAAG,EAAE,yBAAeF,IAAf;AADmC,OAA3B,CAAd;AAGA,aAAOC,KAAP;AACA;AAdF,GADK,EAiBL;AACCP,IAAAA,IAAI,EAAE,WADP;AAECS,IAAAA,GAAG,EAAE,OAFN;AAGCC,IAAAA,UAAU,EAAE;AACXF,MAAAA,GAAG,EAAE;AACJR,QAAAA,IAAI,EAAE,QADF;AAEJW,QAAAA,SAAS,EAAE,yBAAoD;AAAA,gCAAhDC,KAAgD;AAAA,cAAvCJ,GAAuC,cAAvCA,GAAuC;AAAA,cAAlCK,GAAkC,cAAlCA,GAAkC;AAAA,cAA7BC,GAA6B,cAA7BA,GAA6B;AAAA,cAAxBC,IAAwB,cAAxBA,IAAwB;AAAA,cAAlBC,GAAkB,cAAlBA,GAAkB;AAAA,cAAbC,GAAa,cAAbA,GAAa;AAC9D,iBAAOT,GAAG,IAAIK,GAAP,IAAcC,GAAd,IAAqBC,IAArB,IAA6BC,GAA7B,IAAoCC,GAA3C;AACA;AAJG,OADM;AAOXC,MAAAA,MAAM,EAAE;AACPlB,QAAAA,IAAI,EAAE,QADC;AAEPW,QAAAA,SAAS,EAAE,0BAA6B;AAAA,cAAhBO,MAAgB,SAAzBN,KAAyB,CAAhBM,MAAgB;AACvC,iBAAOA,MAAP;AACA;AAJM,OAPG;AAaXC,MAAAA,IAAI,EAAE;AACLnB,QAAAA,IAAI,EAAE,QADD;AAELW,QAAAA,SAAS,EAAE,0BAA2B;AAAA,cAAdQ,IAAc,SAAvBP,KAAuB,CAAdO,IAAc;AACrC,iBAAOA,IAAP;AACA;AAJI,OAbK;AAmBXC,MAAAA,QAAQ,EAAE;AACTpB,QAAAA,IAAI,EAAE,QADG;AAETW,QAAAA,SAAS,EAAE,0BAA+B;AAAA,cAAlBS,QAAkB,SAA3BR,KAA2B,CAAlBQ,QAAkB;AACzC,iBAAOA,QAAP;AACA;AAJQ,OAnBC;AAyBXC,MAAAA,OAAO,EAAE;AACRrB,QAAAA,IAAI,EAAE,QADE;AAERW,QAAAA,SAAS,EAAE,0BAA8B;AAAA,cAAjBU,OAAiB,SAA1BT,KAA0B,CAAjBS,OAAiB;AACxC,iBAAOA,OAAP;AACA;AAJO;AAzBE;AAHb,GAjBK;AADY,CAAnB;eAyDevB,U","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlobURL } from '@wordpress/blob';\nimport { createBlock } from '@wordpress/blocks';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'files',\n\t\t\tisMatch( files ) {\n\t\t\t\treturn files.length === 1 && files[ 0 ].type.indexOf( 'video/' ) === 0;\n\t\t\t},\n\t\t\ttransform( files ) {\n\t\t\t\tconst file = files[ 0 ];\n\t\t\t\t// We don't need to upload the media directly here\n\t\t\t\t// It's already done as part of the `componentDidMount`\n\t\t\t\t// in the video block\n\t\t\t\tconst block = createBlock( 'core/video', {\n\t\t\t\t\tsrc: createBlobURL( file ),\n\t\t\t\t} );\n\t\t\t\treturn block;\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'shortcode',\n\t\t\ttag: 'video',\n\t\t\tattributes: {\n\t\t\t\tsrc: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { src, mp4, m4v, webm, ogv, flv } } ) => {\n\t\t\t\t\t\treturn src || mp4 || m4v || webm || ogv || flv;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tposter: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { poster } } ) => {\n\t\t\t\t\t\treturn poster;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tloop: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { loop } } ) => {\n\t\t\t\t\t\treturn loop;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tautoplay: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { autoplay } } ) => {\n\t\t\t\t\t\treturn autoplay;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpreload: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tshortcode: ( { named: { preload } } ) => {\n\t\t\t\t\t\treturn preload;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}