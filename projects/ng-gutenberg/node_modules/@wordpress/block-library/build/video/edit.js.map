{"version":3,"sources":["@wordpress/block-library/src/video/edit.js"],"names":["ALLOWED_MEDIA_TYPES","VIDEO_POSTER_ALLOWED_MEDIA_TYPES","VideoEdit","arguments","state","editing","props","attributes","src","videoPlayer","posterImageButton","toggleAttribute","bind","onSelectURL","onSelectPoster","onRemovePoster","onUploadError","mediaUpload","noticeOperations","setAttributes","id","file","filesList","onFileChange","url","onError","message","setState","createErrorNotice","allowedTypes","prevProps","poster","current","load","attribute","newValue","newSrc","embedBlock","undefined","onReplace","image","focus","removeAllNotices","checked","autoplay","caption","controls","loop","muted","playsInline","preload","className","instanceId","isSelected","noticeUI","switchToEditing","onSelectVideo","media","icon","videoPosterDescription","getAutoplayHelp","value","label","open","RichText","isEmpty","Component","select","getSettings","__experimentalMediaUpload","withNotices","withInstanceId"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getBlobByURL, isBlobURL } from '@wordpress/blob';\nimport {\n\tBaseControl,\n\tButton,\n\tDisabled,\n\tIconButton,\n\tPanelBody,\n\tSelectControl,\n\tToggleControl,\n\tToolbar,\n\twithNotices,\n} from '@wordpress/components';\nimport {\n\tBlockControls,\n\tBlockIcon,\n\tInspectorControls,\n\tMediaPlaceholder,\n\tMediaUpload,\n\tMediaUploadCheck,\n\tRichText,\n} from '@wordpress/block-editor';\nimport { Component, createRef } from '@wordpress/element';\nimport {\n\t__,\n\tsprintf,\n} from '@wordpress/i18n';\nimport {\n\tcompose,\n\twithInstanceId,\n} from '@wordpress/compose';\nimport {\n\twithSelect,\n} from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { createUpgradedEmbedBlock } from '../embed/util';\nimport icon from './icon';\n\nconst ALLOWED_MEDIA_TYPES = [ 'video' ];\nconst VIDEO_POSTER_ALLOWED_MEDIA_TYPES = [ 'image' ];\n\nclass VideoEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\t// edit component has its own src in the state so it can be edited\n\t\t// without setting the actual value outside of the edit UI\n\t\tthis.state = {\n\t\t\tediting: ! this.props.attributes.src,\n\t\t};\n\n\t\tthis.videoPlayer = createRef();\n\t\tthis.posterImageButton = createRef();\n\t\tthis.toggleAttribute = this.toggleAttribute.bind( this );\n\t\tthis.onSelectURL = this.onSelectURL.bind( this );\n\t\tthis.onSelectPoster = this.onSelectPoster.bind( this );\n\t\tthis.onRemovePoster = this.onRemovePoster.bind( this );\n\t\tthis.onUploadError = this.onUploadError.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tmediaUpload,\n\t\t\tnoticeOperations,\n\t\t\tsetAttributes,\n\t\t} = this.props;\n\t\tconst { id, src = '' } = attributes;\n\t\tif ( ! id && isBlobURL( src ) ) {\n\t\t\tconst file = getBlobByURL( src );\n\t\t\tif ( file ) {\n\t\t\t\tmediaUpload( {\n\t\t\t\t\tfilesList: [ file ],\n\t\t\t\t\tonFileChange: ( [ { url } ] ) => {\n\t\t\t\t\t\tsetAttributes( { src: url } );\n\t\t\t\t\t},\n\t\t\t\t\tonError: ( message ) => {\n\t\t\t\t\t\tthis.setState( { editing: true } );\n\t\t\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t\t\t},\n\t\t\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.attributes.poster !== prevProps.attributes.poster ) {\n\t\t\tthis.videoPlayer.current.load();\n\t\t}\n\t}\n\n\ttoggleAttribute( attribute ) {\n\t\treturn ( newValue ) => {\n\t\t\tthis.props.setAttributes( { [ attribute ]: newValue } );\n\t\t};\n\t}\n\n\tonSelectURL( newSrc ) {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { src } = attributes;\n\n\t\t// Set the block's src from the edit component's state, and switch off\n\t\t// the editing UI.\n\t\tif ( newSrc !== src ) {\n\t\t\t// Check if there's an embed block that handles this URL.\n\t\t\tconst embedBlock = createUpgradedEmbedBlock(\n\t\t\t\t{ attributes: { url: newSrc } }\n\t\t\t);\n\t\t\tif ( undefined !== embedBlock ) {\n\t\t\t\tthis.props.onReplace( embedBlock );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetAttributes( { src: newSrc, id: undefined } );\n\t\t}\n\n\t\tthis.setState( { editing: false } );\n\t}\n\n\tonSelectPoster( image ) {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( { poster: image.url } );\n\t}\n\n\tonRemovePoster() {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( { poster: '' } );\n\n\t\t// Move focus back to the Media Upload button.\n\t\tthis.posterImageButton.current.focus();\n\t}\n\n\tonUploadError( message ) {\n\t\tconst { noticeOperations } = this.props;\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\tgetAutoplayHelp( checked ) {\n\t\treturn checked ? __( 'Note: Autoplaying videos may cause usability issues for some visitors.' ) : null;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tautoplay,\n\t\t\tcaption,\n\t\t\tcontrols,\n\t\t\tloop,\n\t\t\tmuted,\n\t\t\tplaysInline,\n\t\t\tposter,\n\t\t\tpreload,\n\t\t\tsrc,\n\t\t} = this.props.attributes;\n\t\tconst {\n\t\t\tclassName,\n\t\t\tinstanceId,\n\t\t\tisSelected,\n\t\t\tnoticeUI,\n\t\t\tsetAttributes,\n\t\t} = this.props;\n\t\tconst { editing } = this.state;\n\t\tconst switchToEditing = () => {\n\t\t\tthis.setState( { editing: true } );\n\t\t};\n\t\tconst onSelectVideo = ( media ) => {\n\t\t\tif ( ! media || ! media.url ) {\n\t\t\t\t// in this case there was an error and we should continue in the editing state\n\t\t\t\t// previous attributes should be removed because they may be temporary blob urls\n\t\t\t\tsetAttributes( { src: undefined, id: undefined } );\n\t\t\t\tswitchToEditing();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// sets the block's attribute and updates the edit component from the\n\t\t\t// selected media, then switches off the editing UI\n\t\t\tsetAttributes( { src: media.url, id: media.id } );\n\t\t\tthis.setState( { src: media.url, editing: false } );\n\t\t};\n\n\t\tif ( editing ) {\n\t\t\treturn (\n\t\t\t\t<MediaPlaceholder\n\t\t\t\t\ticon={ <BlockIcon icon={ icon } /> }\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\tonSelect={ onSelectVideo }\n\t\t\t\t\tonSelectURL={ this.onSelectURL }\n\t\t\t\t\taccept=\"video/*\"\n\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\tvalue={ this.props.attributes }\n\t\t\t\t\tnotices={ noticeUI }\n\t\t\t\t\tonError={ this.onUploadError }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\tconst videoPosterDescription = `video-block__poster-image-description-${ instanceId }`;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tclassName=\"components-icon-button components-toolbar__control\"\n\t\t\t\t\t\t\tlabel={ __( 'Edit video' ) }\n\t\t\t\t\t\t\tonClick={ switchToEditing }\n\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</BlockControls>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Video Settings' ) }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Autoplay' ) }\n\t\t\t\t\t\t\tonChange={ this.toggleAttribute( 'autoplay' ) }\n\t\t\t\t\t\t\tchecked={ autoplay }\n\t\t\t\t\t\t\thelp={ this.getAutoplayHelp }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Loop' ) }\n\t\t\t\t\t\t\tonChange={ this.toggleAttribute( 'loop' ) }\n\t\t\t\t\t\t\tchecked={ loop }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Muted' ) }\n\t\t\t\t\t\t\tonChange={ this.toggleAttribute( 'muted' ) }\n\t\t\t\t\t\t\tchecked={ muted }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Playback Controls' ) }\n\t\t\t\t\t\t\tonChange={ this.toggleAttribute( 'controls' ) }\n\t\t\t\t\t\t\tchecked={ controls }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Play inline' ) }\n\t\t\t\t\t\t\tonChange={ this.toggleAttribute( 'playsInline' ) }\n\t\t\t\t\t\t\tchecked={ playsInline }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Preload' ) }\n\t\t\t\t\t\t\tvalue={ preload }\n\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { preload: value } ) }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{ value: 'auto', label: __( 'Auto' ) },\n\t\t\t\t\t\t\t\t{ value: 'metadata', label: __( 'Metadata' ) },\n\t\t\t\t\t\t\t\t{ value: 'none', label: __( 'None' ) },\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t<BaseControl\n\t\t\t\t\t\t\t\tclassName=\"editor-video-poster-control\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BaseControl.VisualLabel>\n\t\t\t\t\t\t\t\t\t{ __( 'Poster Image' ) }\n\t\t\t\t\t\t\t\t</BaseControl.VisualLabel>\n\t\t\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\t\t\ttitle={ __( 'Select Poster Image' ) }\n\t\t\t\t\t\t\t\t\tonSelect={ this.onSelectPoster }\n\t\t\t\t\t\t\t\t\tallowedTypes={ VIDEO_POSTER_ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisDefault\n\t\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\t\tref={ this.posterImageButton }\n\t\t\t\t\t\t\t\t\t\t\taria-describedby={ videoPosterDescription }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{ ! this.props.attributes.poster ? __( 'Select Poster Image' ) : __( 'Replace image' ) }\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tid={ videoPosterDescription }\n\t\t\t\t\t\t\t\t\thidden\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ this.props.attributes.poster ?\n\t\t\t\t\t\t\t\t\t\tsprintf( __( 'The current poster image url is %s' ), this.props.attributes.poster ) :\n\t\t\t\t\t\t\t\t\t\t__( 'There is no poster image currently selected' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t{ !! this.props.attributes.poster &&\n\t\t\t\t\t\t\t\t\t<Button onClick={ this.onRemovePoster } isLink isDestructive>\n\t\t\t\t\t\t\t\t\t\t{ __( 'Remove Poster Image' ) }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<figure className={ className }>\n\t\t\t\t\t{ /*\n\t\t\t\t\t\tDisable the video tag so the user clicking on it won't play the\n\t\t\t\t\t\tvideo when the controls are enabled.\n\t\t\t\t\t*/ }\n\t\t\t\t\t<Disabled>\n\t\t\t\t\t\t<video\n\t\t\t\t\t\t\tcontrols={ controls }\n\t\t\t\t\t\t\tposter={ poster }\n\t\t\t\t\t\t\tsrc={ src }\n\t\t\t\t\t\t\tref={ this.videoPlayer }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Disabled>\n\t\t\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\t\tplaceholder={ __( 'Write caption…' ) }\n\t\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { caption: value } ) }\n\t\t\t\t\t\t\tinlineToolbar\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</figure>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\tconst { __experimentalMediaUpload } = getSettings();\n\t\treturn {\n\t\t\tmediaUpload: __experimentalMediaUpload,\n\t\t};\n\t} ),\n\twithNotices,\n\twithInstanceId,\n] )( VideoEdit );\n"]}