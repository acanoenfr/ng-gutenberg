{"version":3,"sources":["@wordpress/block-library/src/audio/edit.js"],"names":["ALLOWED_MEDIA_TYPES","AudioEdit","arguments","state","editing","props","attributes","src","toggleAttribute","bind","onSelectURL","onUploadError","mediaUpload","noticeOperations","setAttributes","id","file","filesList","onFileChange","mediaId","url","onError","e","undefined","setState","createErrorNotice","allowedTypes","attribute","newValue","newSrc","embedBlock","onReplace","message","removeAllNotices","checked","autoplay","caption","loop","preload","isSelected","className","noticeUI","switchToEditing","onSelectAudio","media","icon","getAutoplayHelp","value","label","RichText","isEmpty","Component","select","getSettings","__experimentalMediaUpload","withNotices"],"mappings":";;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;AAlBA;;AACA;;AACA;;AASA;;AAQA;;AACA;;AAKA;;AAKA;;AAjCA;;;;AAyBA;;;;AAKA;;;AAKA,IAAMA,mBAAmB,GAAG,CAAE,OAAF,CAA5B;;IAEMC,S;;;;;AACL,uBAAc;AAAA;;AAAA;AACb,gHAAUC,SAAV,GADa,CAEb;AACA;;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,CAAE,MAAKC,KAAL,CAAWC,UAAX,CAAsBC;AADrB,KAAb;AAIA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,6CAAvB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,6CAAnB;AACA,UAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,6CAArB;AAVa;AAWb;;;;wCAEmB;AAAA;;AAAA,wBAMf,KAAKJ,KANU;AAAA,UAElBC,UAFkB,eAElBA,UAFkB;AAAA,UAGlBM,WAHkB,eAGlBA,WAHkB;AAAA,UAIlBC,gBAJkB,eAIlBA,gBAJkB;AAAA,UAKlBC,aALkB,eAKlBA,aALkB;AAAA,UAOXC,EAPW,GAOMT,UAPN,CAOXS,EAPW;AAAA,4BAOMT,UAPN,CAOPC,GAPO;AAAA,UAOPA,GAPO,gCAOD,EAPC;;AASnB,UAAK,CAAEQ,EAAF,IAAQ,qBAAWR,GAAX,CAAb,EAAgC;AAC/B,YAAMS,IAAI,GAAG,wBAAcT,GAAd,CAAb;;AAEA,YAAKS,IAAL,EAAY;AACXJ,UAAAA,WAAW,CAAE;AACZK,YAAAA,SAAS,EAAE,CAAED,IAAF,CADC;AAEZE,YAAAA,YAAY,EAAE,4BAAgC;AAAA;AAAA;AAAA,kBAAtBC,OAAsB,UAA1BJ,EAA0B;AAAA,kBAAbK,GAAa,UAAbA,GAAa;;AAC7CN,cAAAA,aAAa,CAAE;AAAEC,gBAAAA,EAAE,EAAEI,OAAN;AAAeZ,gBAAAA,GAAG,EAAEa;AAApB,eAAF,CAAb;AACA,aAJW;AAKZC,YAAAA,OAAO,EAAE,iBAAEC,CAAF,EAAS;AACjBR,cAAAA,aAAa,CAAE;AAAEP,gBAAAA,GAAG,EAAEgB,SAAP;AAAkBR,gBAAAA,EAAE,EAAEQ;AAAtB,eAAF,CAAb;;AACA,cAAA,MAAI,CAACC,QAAL,CAAe;AAAEpB,gBAAAA,OAAO,EAAE;AAAX,eAAf;;AACAS,cAAAA,gBAAgB,CAACY,iBAAjB,CAAoCH,CAApC;AACA,aATW;AAUZI,YAAAA,YAAY,EAAE1B;AAVF,WAAF,CAAX;AAYA;AACD;AACD;;;oCAEgB2B,S,EAAY;AAAA;;AAC5B,aAAO,UAAEC,QAAF,EAAgB;AACtB,QAAA,MAAI,CAACvB,KAAL,CAAWS,aAAX,mCAA8Ba,SAA9B,EAA2CC,QAA3C;AACA,OAFD;AAGA;;;gCAEYC,M,EAAS;AAAA,yBACiB,KAAKxB,KADtB;AAAA,UACbC,UADa,gBACbA,UADa;AAAA,UACDQ,aADC,gBACDA,aADC;AAAA,UAEbP,GAFa,GAELD,UAFK,CAEbC,GAFa,EAIrB;AACA;;AACA,UAAKsB,MAAM,KAAKtB,GAAhB,EAAsB;AACrB;AACA,YAAMuB,UAAU,GAAG,oCAClB;AAAExB,UAAAA,UAAU,EAAE;AAAEc,YAAAA,GAAG,EAAES;AAAP;AAAd,SADkB,CAAnB;;AAGA,YAAKN,SAAS,KAAKO,UAAnB,EAAgC;AAC/B,eAAKzB,KAAL,CAAW0B,SAAX,CAAsBD,UAAtB;AACA;AACA;;AACDhB,QAAAA,aAAa,CAAE;AAAEP,UAAAA,GAAG,EAAEsB,MAAP;AAAed,UAAAA,EAAE,EAAEQ;AAAnB,SAAF,CAAb;AACA;;AAED,WAAKC,QAAL,CAAe;AAAEpB,QAAAA,OAAO,EAAE;AAAX,OAAf;AACA;;;kCAEc4B,O,EAAU;AAAA,UAChBnB,gBADgB,GACK,KAAKR,KADV,CAChBQ,gBADgB;AAExBA,MAAAA,gBAAgB,CAACoB,gBAAjB;AACApB,MAAAA,gBAAgB,CAACY,iBAAjB,CAAoCO,OAApC;AACA;;;oCAEgBE,O,EAAU;AAC1B,aAAOA,OAAO,GAAG,cAAI,uEAAJ,CAAH,GAAmF,IAAjG;AACA;;;6BAEQ;AAAA;;AAAA,kCAC0C,KAAK7B,KAAL,CAAWC,UADrD;AAAA,UACA6B,QADA,yBACAA,QADA;AAAA,UACUC,OADV,yBACUA,OADV;AAAA,UACmBC,IADnB,yBACmBA,IADnB;AAAA,UACyBC,OADzB,yBACyBA,OADzB;AAAA,UACkC/B,GADlC,yBACkCA,GADlC;AAAA,yBAEmD,KAAKF,KAFxD;AAAA,UAEAS,aAFA,gBAEAA,aAFA;AAAA,UAEeyB,UAFf,gBAEeA,UAFf;AAAA,UAE2BC,SAF3B,gBAE2BA,SAF3B;AAAA,UAEsCC,QAFtC,gBAEsCA,QAFtC;AAAA,UAGArC,OAHA,GAGY,KAAKD,KAHjB,CAGAC,OAHA;;AAIR,UAAMsC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC7B,QAAA,MAAI,CAAClB,QAAL,CAAe;AAAEpB,UAAAA,OAAO,EAAE;AAAX,SAAf;AACA,OAFD;;AAGA,UAAMuC,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,KAAF,EAAa;AAClC,YAAK,CAAEA,KAAF,IAAW,CAAEA,KAAK,CAACxB,GAAxB,EAA8B;AAC7B;AACA;AACAN,UAAAA,aAAa,CAAE;AAAEP,YAAAA,GAAG,EAAEgB,SAAP;AAAkBR,YAAAA,EAAE,EAAEQ;AAAtB,WAAF,CAAb;AACAmB,UAAAA,eAAe;AACf;AACA,SAPiC,CAQlC;AACA;;;AACA5B,QAAAA,aAAa,CAAE;AAAEP,UAAAA,GAAG,EAAEqC,KAAK,CAACxB,GAAb;AAAkBL,UAAAA,EAAE,EAAE6B,KAAK,CAAC7B;AAA5B,SAAF,CAAb;;AACA,QAAA,MAAI,CAACS,QAAL,CAAe;AAAEjB,UAAAA,GAAG,EAAEqC,KAAK,CAACxB,GAAb;AAAkBhB,UAAAA,OAAO,EAAE;AAA3B,SAAf;AACA,OAZD;;AAaA,UAAKA,OAAL,EAAe;AACd,eACC,4BAAC,6BAAD;AACC,UAAA,IAAI,EAAG,4BAAC,sBAAD;AAAW,YAAA,IAAI,EAAGyC;AAAlB,YADR;AAEC,UAAA,SAAS,EAAGL,SAFb;AAGC,UAAA,QAAQ,EAAGG,aAHZ;AAIC,UAAA,WAAW,EAAG,KAAKjC,WAJpB;AAKC,UAAA,MAAM,EAAC,SALR;AAMC,UAAA,YAAY,EAAGV,mBANhB;AAOC,UAAA,KAAK,EAAG,KAAKK,KAAL,CAAWC,UAPpB;AAQC,UAAA,OAAO,EAAGmC,QARX;AASC,UAAA,OAAO,EAAG,KAAK9B;AAThB,UADD;AAaA;;AAED,aACC,qDACC,4BAAC,0BAAD,QACC,4BAAC,mBAAD,QACC,4BAAC,sBAAD;AACC,QAAA,SAAS,EAAC,oDADX;AAEC,QAAA,KAAK,EAAG,cAAI,YAAJ,CAFT;AAGC,QAAA,OAAO,EAAG+B,eAHX;AAIC,QAAA,IAAI,EAAC;AAJN,QADD,CADD,CADD,EAWC,4BAAC,8BAAD,QACC,4BAAC,qBAAD;AAAW,QAAA,KAAK,EAAG,cAAI,gBAAJ;AAAnB,SACC,4BAAC,yBAAD;AACC,QAAA,KAAK,EAAG,cAAI,UAAJ,CADT;AAEC,QAAA,QAAQ,EAAG,KAAKlC,eAAL,CAAsB,UAAtB,CAFZ;AAGC,QAAA,OAAO,EAAG2B,QAHX;AAIC,QAAA,IAAI,EAAG,KAAKW;AAJb,QADD,EAOC,4BAAC,yBAAD;AACC,QAAA,KAAK,EAAG,cAAI,MAAJ,CADT;AAEC,QAAA,QAAQ,EAAG,KAAKtC,eAAL,CAAsB,MAAtB,CAFZ;AAGC,QAAA,OAAO,EAAG6B;AAHX,QAPD,EAYC,4BAAC,yBAAD;AACC,QAAA,KAAK,EAAG,cAAI,SAAJ,CADT;AAEC,QAAA,KAAK,EAAGd,SAAS,KAAKe,OAAd,GAAwBA,OAAxB,GAAkC,MAF3C,CAGC;AAHD;AAIC,QAAA,QAAQ,EAAG,kBAAES,KAAF;AAAA,iBAAajC,aAAa,CAAE;AAAEwB,YAAAA,OAAO,EAAI,WAAWS,KAAb,GAAuBA,KAAvB,GAA+BxB;AAA1C,WAAF,CAA1B;AAAA,SAJZ;AAKC,QAAA,OAAO,EAAG,CACT;AAAEwB,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE,cAAI,MAAJ;AAAxB,SADS,EAET;AAAED,UAAAA,KAAK,EAAE,UAAT;AAAqBC,UAAAA,KAAK,EAAE,cAAI,UAAJ;AAA5B,SAFS,EAGT;AAAED,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE,cAAI,MAAJ;AAAxB,SAHS;AALX,QAZD,CADD,CAXD,EAqCC;AAAQ,QAAA,SAAS,EAAGR;AAApB,SAKC,4BAAC,oBAAD,QACC;AAAO,QAAA,QAAQ,EAAC,UAAhB;AAA2B,QAAA,GAAG,EAAGjC;AAAjC,QADD,CALD,EAQG,CAAE,CAAE0C,sBAASC,OAAT,CAAkBd,OAAlB,CAAF,IAAiCG,UAAnC,KACD,4BAAC,qBAAD;AACC,QAAA,OAAO,EAAC,YADT;AAEC,QAAA,WAAW,EAAG,cAAI,gBAAJ,CAFf;AAGC,QAAA,KAAK,EAAGH,OAHT;AAIC,QAAA,QAAQ,EAAG,kBAAEW,KAAF;AAAA,iBAAajC,aAAa,CAAE;AAAEsB,YAAAA,OAAO,EAAEW;AAAX,WAAF,CAA1B;AAAA,SAJZ;AAKC,QAAA,aAAa;AALd,QATF,CArCD,CADD;AA0DA;;;EA9KsBI,kB;;eAgLT,sBAAS,CACvB,sBAAY,UAAEC,MAAF,EAAc;AAAA,gBACDA,MAAM,CAAE,mBAAF,CADL;AAAA,MACjBC,WADiB,WACjBA,WADiB;;AAAA,qBAEaA,WAAW,EAFxB;AAAA,MAEjBC,yBAFiB,gBAEjBA,yBAFiB;;AAGzB,SAAO;AACN1C,IAAAA,WAAW,EAAE0C;AADP,GAAP;AAGA,CAND,CADuB,EAQvBC,uBARuB,CAAT,EASVtD,SATU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getBlobByURL, isBlobURL } from '@wordpress/blob';\nimport { compose } from '@wordpress/compose';\nimport {\n\tDisabled,\n\tIconButton,\n\tPanelBody,\n\tSelectControl,\n\tToggleControl,\n\tToolbar,\n\twithNotices,\n} from '@wordpress/components';\nimport {\n\tBlockControls,\n\tBlockIcon,\n\tInspectorControls,\n\tMediaPlaceholder,\n\tRichText,\n} from '@wordpress/block-editor';\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport icon from './icon';\n\n/**\n * Internal dependencies\n */\nimport { createUpgradedEmbedBlock } from '../embed/util';\n\nconst ALLOWED_MEDIA_TYPES = [ 'audio' ];\n\nclass AudioEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\t// edit component has its own src in the state so it can be edited\n\t\t// without setting the actual value outside of the edit UI\n\t\tthis.state = {\n\t\t\tediting: ! this.props.attributes.src,\n\t\t};\n\n\t\tthis.toggleAttribute = this.toggleAttribute.bind( this );\n\t\tthis.onSelectURL = this.onSelectURL.bind( this );\n\t\tthis.onUploadError = this.onUploadError.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tmediaUpload,\n\t\t\tnoticeOperations,\n\t\t\tsetAttributes,\n\t\t} = this.props;\n\t\tconst { id, src = '' } = attributes;\n\n\t\tif ( ! id && isBlobURL( src ) ) {\n\t\t\tconst file = getBlobByURL( src );\n\n\t\t\tif ( file ) {\n\t\t\t\tmediaUpload( {\n\t\t\t\t\tfilesList: [ file ],\n\t\t\t\t\tonFileChange: ( [ { id: mediaId, url } ] ) => {\n\t\t\t\t\t\tsetAttributes( { id: mediaId, src: url } );\n\t\t\t\t\t},\n\t\t\t\t\tonError: ( e ) => {\n\t\t\t\t\t\tsetAttributes( { src: undefined, id: undefined } );\n\t\t\t\t\t\tthis.setState( { editing: true } );\n\t\t\t\t\t\tnoticeOperations.createErrorNotice( e );\n\t\t\t\t\t},\n\t\t\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\ttoggleAttribute( attribute ) {\n\t\treturn ( newValue ) => {\n\t\t\tthis.props.setAttributes( { [ attribute ]: newValue } );\n\t\t};\n\t}\n\n\tonSelectURL( newSrc ) {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\tconst { src } = attributes;\n\n\t\t// Set the block's src from the edit component's state, and switch off\n\t\t// the editing UI.\n\t\tif ( newSrc !== src ) {\n\t\t\t// Check if there's an embed block that handles this URL.\n\t\t\tconst embedBlock = createUpgradedEmbedBlock(\n\t\t\t\t{ attributes: { url: newSrc } }\n\t\t\t);\n\t\t\tif ( undefined !== embedBlock ) {\n\t\t\t\tthis.props.onReplace( embedBlock );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetAttributes( { src: newSrc, id: undefined } );\n\t\t}\n\n\t\tthis.setState( { editing: false } );\n\t}\n\n\tonUploadError( message ) {\n\t\tconst { noticeOperations } = this.props;\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\tgetAutoplayHelp( checked ) {\n\t\treturn checked ? __( 'Note: Autoplaying audio may cause usability issues for some visitors.' ) : null;\n\t}\n\n\trender() {\n\t\tconst { autoplay, caption, loop, preload, src } = this.props.attributes;\n\t\tconst { setAttributes, isSelected, className, noticeUI } = this.props;\n\t\tconst { editing } = this.state;\n\t\tconst switchToEditing = () => {\n\t\t\tthis.setState( { editing: true } );\n\t\t};\n\t\tconst onSelectAudio = ( media ) => {\n\t\t\tif ( ! media || ! media.url ) {\n\t\t\t\t// in this case there was an error and we should continue in the editing state\n\t\t\t\t// previous attributes should be removed because they may be temporary blob urls\n\t\t\t\tsetAttributes( { src: undefined, id: undefined } );\n\t\t\t\tswitchToEditing();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// sets the block's attribute and updates the edit component from the\n\t\t\t// selected media, then switches off the editing UI\n\t\t\tsetAttributes( { src: media.url, id: media.id } );\n\t\t\tthis.setState( { src: media.url, editing: false } );\n\t\t};\n\t\tif ( editing ) {\n\t\t\treturn (\n\t\t\t\t<MediaPlaceholder\n\t\t\t\t\ticon={ <BlockIcon icon={ icon } /> }\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\tonSelect={ onSelectAudio }\n\t\t\t\t\tonSelectURL={ this.onSelectURL }\n\t\t\t\t\taccept=\"audio/*\"\n\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\tvalue={ this.props.attributes }\n\t\t\t\t\tnotices={ noticeUI }\n\t\t\t\t\tonError={ this.onUploadError }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tclassName=\"components-icon-button components-toolbar__control\"\n\t\t\t\t\t\t\tlabel={ __( 'Edit audio' ) }\n\t\t\t\t\t\t\tonClick={ switchToEditing }\n\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</BlockControls>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Audio Settings' ) }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Autoplay' ) }\n\t\t\t\t\t\t\tonChange={ this.toggleAttribute( 'autoplay' ) }\n\t\t\t\t\t\t\tchecked={ autoplay }\n\t\t\t\t\t\t\thelp={ this.getAutoplayHelp }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Loop' ) }\n\t\t\t\t\t\t\tonChange={ this.toggleAttribute( 'loop' ) }\n\t\t\t\t\t\t\tchecked={ loop }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Preload' ) }\n\t\t\t\t\t\t\tvalue={ undefined !== preload ? preload : 'none' }\n\t\t\t\t\t\t\t// `undefined` is required for the preload attribute to be unset.\n\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { preload: ( 'none' !== value ) ? value : undefined } ) }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{ value: 'auto', label: __( 'Auto' ) },\n\t\t\t\t\t\t\t\t{ value: 'metadata', label: __( 'Metadata' ) },\n\t\t\t\t\t\t\t\t{ value: 'none', label: __( 'None' ) },\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<figure className={ className }>\n\t\t\t\t\t{ /*\n\t\t\t\t\t\tDisable the audio tag so the user clicking on it won't play the\n\t\t\t\t\t\tfile or change the position slider when the controls are enabled.\n\t\t\t\t\t*/ }\n\t\t\t\t\t<Disabled>\n\t\t\t\t\t\t<audio controls=\"controls\" src={ src } />\n\t\t\t\t\t</Disabled>\n\t\t\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\t\tplaceholder={ __( 'Write caption…' ) }\n\t\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { caption: value } ) }\n\t\t\t\t\t\t\tinlineToolbar\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</figure>\n\t\t\t</>\n\t\t);\n\t}\n}\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\tconst { __experimentalMediaUpload } = getSettings();\n\t\treturn {\n\t\t\tmediaUpload: __experimentalMediaUpload,\n\t\t};\n\t} ),\n\twithNotices,\n] )( AudioEdit );\n"]}