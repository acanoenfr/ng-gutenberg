{"version":3,"sources":["@wordpress/block-library/src/spacer/edit.js"],"names":["SpacerEdit","attributes","isSelected","setAttributes","instanceId","onResizeStart","onResizeStop","height","id","inputHeightValue","setInputHeightValue","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","event","direction","elt","delta","spacerHeight","parseInt","target","value","isNaN","dispatch","toggleSelection","withInstanceId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { BaseControl, PanelBody, ResizableBox } from '@wordpress/components';\nimport { compose, withInstanceId } from '@wordpress/compose';\nimport { withDispatch } from '@wordpress/data';\n\nconst SpacerEdit = ( { attributes, isSelected, setAttributes, instanceId, onResizeStart, onResizeStop } ) => {\n\tconst { height } = attributes;\n\tconst id = `block-spacer-height-input-${ instanceId }`;\n\tconst [ inputHeightValue, setInputHeightValue ] = useState( height );\n\n\treturn (\n\t\t<>\n\t\t\t<ResizableBox\n\t\t\t\tclassName={ classnames(\n\t\t\t\t\t'block-library-spacer__resize-container',\n\t\t\t\t\t{ 'is-selected': isSelected },\n\t\t\t\t) }\n\t\t\t\tsize={ {\n\t\t\t\t\theight,\n\t\t\t\t} }\n\t\t\t\tminHeight=\"20\"\n\t\t\t\tenable={ {\n\t\t\t\t\ttop: false,\n\t\t\t\t\tright: false,\n\t\t\t\t\tbottom: true,\n\t\t\t\t\tleft: false,\n\t\t\t\t\ttopRight: false,\n\t\t\t\t\tbottomRight: false,\n\t\t\t\t\tbottomLeft: false,\n\t\t\t\t\ttopLeft: false,\n\t\t\t\t} }\n\t\t\t\tonResizeStart={ onResizeStart }\n\t\t\t\tonResizeStop={ ( event, direction, elt, delta ) => {\n\t\t\t\t\tonResizeStop();\n\t\t\t\t\tconst spacerHeight = parseInt( height + delta.height, 10 );\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\theight: spacerHeight,\n\t\t\t\t\t} );\n\t\t\t\t\tsetInputHeightValue( spacerHeight );\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Spacer Settings' ) }>\n\t\t\t\t\t<BaseControl label={ __( 'Height in pixels' ) } id={ id }>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tid={ id }\n\t\t\t\t\t\t\tonChange={ ( event ) => {\n\t\t\t\t\t\t\t\tlet spacerHeight = parseInt( event.target.value, 10 );\n\t\t\t\t\t\t\t\tsetInputHeightValue( spacerHeight );\n\t\t\t\t\t\t\t\tif ( isNaN( spacerHeight ) ) {\n\t\t\t\t\t\t\t\t\t// Set spacer height to default size and input box to empty string\n\t\t\t\t\t\t\t\t\tsetInputHeightValue( '' );\n\t\t\t\t\t\t\t\t\tspacerHeight = 100;\n\t\t\t\t\t\t\t\t} else if ( spacerHeight < 20 ) {\n\t\t\t\t\t\t\t\t\t// Set spacer height to minimum size\n\t\t\t\t\t\t\t\t\tspacerHeight = 20;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\theight: spacerHeight,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tvalue={ inputHeightValue }\n\t\t\t\t\t\t\tmin=\"20\"\n\t\t\t\t\t\t\tstep=\"10\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BaseControl>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t</>\n\t);\n};\n\nexport default compose( [\n\twithDispatch( ( dispatch ) => {\n\t\tconst { toggleSelection } = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonResizeStart: () => toggleSelection( false ),\n\t\t\tonResizeStop: () => toggleSelection( true ),\n\t\t};\n\t} ),\n\twithInstanceId,\n] )( SpacerEdit );\n"]}