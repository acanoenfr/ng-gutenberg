{"version":3,"sources":["@wordpress/block-library/src/index.js"],"names":["registerBlock","block","metadata","settings","name","registerCoreBlocks","paragraph","image","heading","gallery","list","quote","shortcode","archives","audio","button","calendar","categories","code","columns","column","cover","embed","common","others","file","group","window","wp","oldEditor","classic","html","mediaText","latestComments","latestPosts","missing","more","nextpage","preformatted","pullquote","rss","search","separator","reusableBlock","spacer","subhead","table","tagCloud","textColumns","verse","video","forEach","__experimentalRegisterExperimentalCoreBlocks","process","env","GUTENBERG_PHASE","__experimentalEnableLegacyWidgetBlock","__experimentalEnableMenuBlock","legacyWidget","navigationMenu","navigationMenuItem","socialLinks","socialLink","sites","undefined"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport '@wordpress/core-data';\nimport '@wordpress/block-editor';\nimport '@wordpress/editor';\nimport {\n\tregisterBlockType,\n\tsetDefaultBlockName,\n\tsetFreeformContentHandlerName,\n\tsetUnregisteredTypeHandlerName,\n\tsetGroupingBlockName,\n\tunstable__bootstrapServerSideBlockDefinitions, // eslint-disable-line camelcase\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport * as paragraph from './paragraph';\nimport * as image from './image';\nimport * as heading from './heading';\nimport * as quote from './quote';\nimport * as gallery from './gallery';\nimport * as archives from './archives';\nimport * as audio from './audio';\nimport * as button from './button';\nimport * as calendar from './calendar';\nimport * as categories from './categories';\nimport * as code from './code';\nimport * as columns from './columns';\nimport * as column from './column';\nimport * as cover from './cover';\nimport * as embed from './embed';\nimport * as file from './file';\nimport * as html from './html';\nimport * as mediaText from './media-text';\nimport * as navigationMenu from './navigation-menu';\nimport * as navigationMenuItem from './navigation-menu-item';\nimport * as latestComments from './latest-comments';\nimport * as latestPosts from './latest-posts';\nimport * as legacyWidget from './legacy-widget';\nimport * as list from './list';\nimport * as missing from './missing';\nimport * as more from './more';\nimport * as nextpage from './nextpage';\nimport * as preformatted from './preformatted';\nimport * as pullquote from './pullquote';\nimport * as reusableBlock from './block';\nimport * as rss from './rss';\nimport * as search from './search';\nimport * as group from './group';\nimport * as separator from './separator';\nimport * as shortcode from './shortcode';\nimport * as spacer from './spacer';\nimport * as subhead from './subhead';\nimport * as table from './table';\nimport * as textColumns from './text-columns';\nimport * as verse from './verse';\nimport * as video from './video';\nimport * as tagCloud from './tag-cloud';\nimport * as classic from './classic';\nimport * as socialLinks from './social-links';\nimport * as socialLink from './social-link';\n\n/**\n * Function to register an individual block.\n *\n * @param {Object} block The block to be registered.\n *\n */\nconst registerBlock = ( block ) => {\n\tif ( ! block ) {\n\t\treturn;\n\t}\n\tconst { metadata, settings, name } = block;\n\tif ( metadata ) {\n\t\tunstable__bootstrapServerSideBlockDefinitions( { [ name ]: metadata } );\n\t}\n\tregisterBlockType( name, settings );\n};\n\n/**\n * Function to register core blocks provided by the block editor.\n *\n * @example\n * ```js\n * import { registerCoreBlocks } from '@wordpress/block-library';\n *\n * registerCoreBlocks();\n * ```\n */\nexport const registerCoreBlocks = () => {\n\t[\n\t\t// Common blocks are grouped at the top to prioritize their display\n\t\t// in various contexts â€” like the inserter and auto-complete components.\n\t\tparagraph,\n\t\timage,\n\t\theading,\n\t\tgallery,\n\t\tlist,\n\t\tquote,\n\n\t\t// Register all remaining core blocks.\n\t\tshortcode,\n\t\tarchives,\n\t\taudio,\n\t\tbutton,\n\t\tcalendar,\n\t\tcategories,\n\t\tcode,\n\t\tcolumns,\n\t\tcolumn,\n\t\tcover,\n\t\tembed,\n\t\t...embed.common,\n\t\t...embed.others,\n\t\tfile,\n\t\tgroup,\n\t\twindow.wp && window.wp.oldEditor ? classic : null, // Only add the classic block in WP Context\n\t\thtml,\n\t\tmediaText,\n\t\tlatestComments,\n\t\tlatestPosts,\n\t\tmissing,\n\t\tmore,\n\t\tnextpage,\n\t\tpreformatted,\n\t\tpullquote,\n\t\trss,\n\t\tsearch,\n\t\tseparator,\n\t\treusableBlock,\n\t\tspacer,\n\t\tsubhead,\n\t\ttable,\n\t\ttagCloud,\n\t\ttextColumns,\n\t\tverse,\n\t\tvideo,\n\t].forEach( registerBlock );\n\n\tsetDefaultBlockName( paragraph.name );\n\tif ( window.wp && window.wp.oldEditor ) {\n\t\tsetFreeformContentHandlerName( classic.name );\n\t}\n\tsetUnregisteredTypeHandlerName( missing.name );\n\n\tif ( group ) {\n\t\tsetGroupingBlockName( group.name );\n\t}\n};\n\n/**\n * Function to register experimental core blocks depending on editor settings.\n *\n * @param {Object} settings Editor settings.\n *\n * @example\n * ```js\n * import { __experimentalRegisterExperimentalCoreBlocks } from '@wordpress/block-library';\n *\n * __experimentalRegisterExperimentalCoreBlocks( settings );\n * ```\n */\nexport const __experimentalRegisterExperimentalCoreBlocks = process.env.GUTENBERG_PHASE === 2 ? ( settings ) => {\n\tconst { __experimentalEnableLegacyWidgetBlock, __experimentalEnableMenuBlock } = settings;\n\n\t[\n\t\t__experimentalEnableLegacyWidgetBlock ? legacyWidget : null,\n\t\t__experimentalEnableMenuBlock ? navigationMenu : null,\n\t\t__experimentalEnableMenuBlock ? navigationMenuItem : null,\n\t\tsocialLinks,\n\t\t...socialLink.sites,\n\t].forEach( registerBlock );\n} : undefined;\n"]}