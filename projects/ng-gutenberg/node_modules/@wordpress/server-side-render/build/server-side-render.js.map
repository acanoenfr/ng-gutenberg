{"version":3,"sources":["@wordpress/server-side-render/src/server-side-render.js"],"names":["rendererPath","block","attributes","urlQueryArgs","context","ServerSideRender","props","state","response","isStillMounted","fetch","prevProps","setState","path","fetchRequest","currentFetchRequest","then","rendered","catch","error","errorMsg","message","className","EmptyResponsePlaceholder","ErrorResponsePlaceholder","LoadingResponsePlaceholder","Component","defaultProps","errorMessage"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { isEqual, debounce } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tComponent,\n\tRawHTML,\n} from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport {\n\tPlaceholder,\n\tSpinner,\n} from '@wordpress/components';\n\nexport function rendererPath( block, attributes = null, urlQueryArgs = {} ) {\n\treturn addQueryArgs( `/wp/v2/block-renderer/${ block }`, {\n\t\tcontext: 'edit',\n\t\t...( null !== attributes ? { attributes } : {} ),\n\t\t...urlQueryArgs,\n\t} );\n}\n\nexport class ServerSideRender extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tresponse: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isStillMounted = true;\n\t\tthis.fetch( this.props );\n\t\t// Only debounce once the initial fetch occurs to ensure that the first\n\t\t// renders show data as soon as possible.\n\t\tthis.fetch = debounce( this.fetch, 500 );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.isStillMounted = false;\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! isEqual( prevProps, this.props ) ) {\n\t\t\tthis.fetch( this.props );\n\t\t}\n\t}\n\n\tfetch( props ) {\n\t\tif ( ! this.isStillMounted ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( null !== this.state.response ) {\n\t\t\tthis.setState( { response: null } );\n\t\t}\n\t\tconst { block, attributes = null, urlQueryArgs = {} } = props;\n\n\t\tconst path = rendererPath( block, attributes, urlQueryArgs );\n\t\t// Store the latest fetch request so that when we process it, we can\n\t\t// check if it is the current request, to avoid race conditions on slow networks.\n\t\tconst fetchRequest = this.currentFetchRequest = apiFetch( { path } )\n\t\t\t.then( ( response ) => {\n\t\t\t\tif ( this.isStillMounted && fetchRequest === this.currentFetchRequest && response ) {\n\t\t\t\t\tthis.setState( { response: response.rendered } );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tif ( this.isStillMounted && fetchRequest === this.currentFetchRequest ) {\n\t\t\t\t\tthis.setState( { response: {\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t\terrorMsg: error.message,\n\t\t\t\t\t} } );\n\t\t\t\t}\n\t\t\t} );\n\t\treturn fetchRequest;\n\t}\n\n\trender() {\n\t\tconst response = this.state.response;\n\t\tconst { className, EmptyResponsePlaceholder, ErrorResponsePlaceholder, LoadingResponsePlaceholder } = this.props;\n\n\t\tif ( response === '' ) {\n\t\t\treturn (\n\t\t\t\t<EmptyResponsePlaceholder response={ response } { ...this.props } />\n\t\t\t);\n\t\t} else if ( ! response ) {\n\t\t\treturn (\n\t\t\t\t<LoadingResponsePlaceholder response={ response } { ...this.props } />\n\t\t\t);\n\t\t} else if ( response.error ) {\n\t\t\treturn (\n\t\t\t\t<ErrorResponsePlaceholder response={ response } { ...this.props } />\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<RawHTML\n\t\t\t\tkey=\"html\"\n\t\t\t\tclassName={ className }\n\t\t\t>\n\t\t\t\t{ response }\n\t\t\t</RawHTML>\n\t\t);\n\t}\n}\n\nServerSideRender.defaultProps = {\n\tEmptyResponsePlaceholder: ( { className } ) => (\n\t\t<Placeholder\n\t\t\tclassName={ className }\n\t\t>\n\t\t\t{ __( 'Block rendered as empty.' ) + className }\n\t\t</Placeholder>\n\t),\n\tErrorResponsePlaceholder: ( { response, className } ) => {\n\t\t// translators: %s: error message describing the problem\n\t\tconst errorMessage = sprintf( __( 'Error loading block: %s' ), response.errorMsg );\n\t\treturn (\n\t\t\t<Placeholder\n\t\t\t\tclassName={ className }\n\t\t\t>\n\t\t\t\t{ errorMessage }\n\t\t\t</Placeholder>\n\t\t);\n\t},\n\tLoadingResponsePlaceholder: ( { className } ) => {\n\t\treturn (\n\t\t\t<Placeholder\n\t\t\t\tclassName={ className }\n\t\t\t>\n\t\t\t\t<Spinner />\n\t\t\t</Placeholder>\n\t\t);\n\t},\n};\n\nexport default ServerSideRender;\n"]}