{"version":3,"sources":["@wordpress/rich-text/src/component/index.native.js"],"names":["RCTAztecView","View","Platform","pickBy","memize","Component","compose","withSelect","childrenBlock","decodeEntities","BACKSPACE","isURL","FormatEdit","applyFormat","getActiveFormat","getActiveFormats","isEmpty","isEmptyLine","create","split","toHTMLString","insert","insertLineSeparator","removeLineSeparator","isCollapsed","remove","styles","unescapeSpaces","text","replace","saferPasteHandler","originalPasteHandler","options","error","window","console","log","HTML","gutenbergFormatNamesToAztec","RichText","value","multiline","__unstableMultiline","selectionStart","selectionEnd","arguments","isMultiline","multilineTag","multilineWrapperTags","onSplit","bind","isIOS","OS","createRecord","onChange","onEnter","onBackspace","onPaste","onFocus","onBlur","onTextUpdate","onContentSizeChange","onFormatChange","formatToValue","maxSize","onSelectionChange","onSelectionChangeFromAztec","valueToFormat","willTrimSpaces","getHtmlToRender","state","activeFormats","selectedFormat","height","needsSelectionUpdate","savedContent","isTouched","lastAztecEventType","lastHistoryValue","props","start","end","String","trimLeft","formats","replacements","html","range","Math","min","length","record","pastedBlocks","onReplace","__unstableOnReplace","__unstableOnSplit","onSplitMiddle","__unstableOnSplitMiddle","blocks","before","after","hasPastedBlocks","push","indexToSelect","lastEventCount","undefined","removeRootTagsProduceByAztec","formatTypes","map","name","filter","Boolean","changeHandlers","v","key","startsWith","Object","values","forEach","changeHandler","setState","onCreateUndoLevel","__unstableOnCreateUndoLevel","result","removeRootTag","tagName","rootTagsToEliminate","element","tagsToEliminate","removeTag","tag","openingTagRegexp","RegExp","closingTagRegexp","event","contentWithoutRootTag","nativeEvent","eventCount","comesFromAztec","firedAfterTextChanged","refresh","contentSize","contentHeight","canSplit","currentRecord","shiftKey","insertedLineBreak","insertedLineSeparator","onMerge","__unstableOnMerge","onRemove","__unstableOnRemove","keyCode","isReverse","newValue","empty","preventDefault","pasteHandler","__unstablePasteHandler","pastedText","pastedHtml","files","uploadId","Number","MAX_SAFE_INTEGER","file","content","mode","shouldReplace","trimmedText","trim","linkedRecord","type","attributes","href","pastedContent","plainText","canUserUseUnfilteredHTML","recordToInsert","resultingRecord","resultingContent","unstableOnFocus","index","hasChanged","isManual","realStart","realEnd","max","Array","isArray","toHTML","format","nextProps","__unstableIsSelected","blockIsSelected","__unstableMobileNoFocusOnMount","_editor","focus","isFocused","shouldBlurOnUnmount","blur","prevProps","isSelected","prevIsSelected","blockHtmlElements","leadingOrTrailingSpaces","matches","match","style","children","getRecord","minHeight","defaultPlaceholderTextColor","color","defaultColor","defaultTextDecorationColor","textDecorationColor","defaultFontFamily","fontFamily","selection","warn","ref","setRef","placeholder","placeholderTextColor","deleteEnter","getActiveFormatNames","onCaretVerticalPositionChange","fontSize","fontWeight","fontStyle","disableEditingMenu","textAlign","defaultProps","select","getFormatTypes"],"mappings":"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","sourcesContent":["/*eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n\n/**\n * External dependencies\n */\nimport RCTAztecView from 'react-native-aztec';\nimport { View, Platform } from 'react-native';\nimport {\n\tpickBy,\n} from 'lodash';\nimport memize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\nimport { withSelect } from '@wordpress/data';\nimport { childrenBlock } from '@wordpress/blocks';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { BACKSPACE } from '@wordpress/keycodes';\nimport { isURL } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport { applyFormat } from '../apply-format';\nimport { getActiveFormat } from '../get-active-format';\nimport { getActiveFormats } from '../get-active-formats';\nimport { isEmpty, isEmptyLine } from '../is-empty';\nimport { create } from '../create';\nimport { split } from '../split';\nimport { toHTMLString } from '../to-html-string';\nimport { insert } from '../insert';\nimport { insertLineSeparator } from '../insert-line-separator';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isCollapsed } from '../is-collapsed';\nimport { remove } from '../remove';\nimport styles from './style.scss';\n\nconst unescapeSpaces = ( text ) => {\n\treturn text.replace( /&nbsp;|&#160;/gi, ' ' );\n};\n\n/**\n * Calls {@link pasteHandler} with a fallback to plain text when HTML processing\n * results in errors\n *\n * @param {Function}  originalPasteHandler  The original handler function\n * @param {Object}  [options]     The options to pass to {@link pasteHandler}\n *\n * @return {Array|string}         A list of blocks or a string, depending on\n *                                `handlerMode`.\n */\nconst saferPasteHandler = ( originalPasteHandler, options ) => {\n\ttry {\n\t\treturn originalPasteHandler( options );\n\t} catch ( error ) {\n\t\twindow.console.log( 'Pasting HTML failed:', error );\n\t\twindow.console.log( 'HTML:', options.HTML );\n\t\twindow.console.log( 'Falling back to plain text.' );\n\t\t// fallback to plain text\n\t\treturn originalPasteHandler( { ...options, HTML: '' } );\n\t}\n};\n\nconst gutenbergFormatNamesToAztec = {\n\t'core/bold': 'bold',\n\t'core/italic': 'italic',\n\t'core/strikethrough': 'strikethrough',\n};\n\nexport class RichText extends Component {\n\tconstructor( { value, __unstableMultiline: multiline, selectionStart, selectionEnd } ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.isMultiline = false;\n\t\tif ( multiline === true || multiline === 'p' || multiline === 'li' ) {\n\t\t\tthis.multilineTag = multiline === true ? 'p' : multiline;\n\t\t\tthis.isMultiline = true;\n\t\t}\n\n\t\tif ( this.multilineTag === 'li' ) {\n\t\t\tthis.multilineWrapperTags = [ 'ul', 'ol' ];\n\t\t}\n\t\tthis.onSplit = this.onSplit.bind( this );\n\t\tthis.isIOS = Platform.OS === 'ios';\n\t\tthis.createRecord = this.createRecord.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.onEnter = this.onEnter.bind( this );\n\t\tthis.onBackspace = this.onBackspace.bind( this );\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onTextUpdate = this.onTextUpdate.bind( this );\n\t\tthis.onContentSizeChange = this.onContentSizeChange.bind( this );\n\t\tthis.onFormatChange = this.onFormatChange.bind( this );\n\t\tthis.formatToValue = memize(\n\t\t\tthis.formatToValue.bind( this ),\n\t\t\t{ maxSize: 1 }\n\t\t);\n\n\t\t// This prevents a bug in Aztec which triggers onSelectionChange twice on format change\n\t\tthis.onSelectionChange = this.onSelectionChange.bind( this );\n\t\tthis.onSelectionChangeFromAztec = this.onSelectionChangeFromAztec.bind( this );\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.willTrimSpaces = this.willTrimSpaces.bind( this );\n\t\tthis.getHtmlToRender = this.getHtmlToRender.bind( this );\n\t\tthis.state = {\n\t\t\tactiveFormats: [],\n\t\t\tselectedFormat: null,\n\t\t\theight: 0,\n\t\t};\n\t\tthis.needsSelectionUpdate = false;\n\t\tthis.savedContent = '';\n\t\tthis.isTouched = false;\n\t\tthis.lastAztecEventType = null;\n\n\t\tthis.lastHistoryValue = value;\n\n\t\t// Internal values that are update synchronously, unlike props.\n\t\tthis.value = value;\n\t\tthis.selectionStart = selectionStart;\n\t\tthis.selectionEnd = selectionEnd;\n\t}\n\n\t/**\n\t * Get the current record (value and selection) from props and state.\n\t *\n\t * @return {Object} The current record (value and selection).\n\t */\n\tgetRecord() {\n\t\tconst { selectionStart: start, selectionEnd: end } = this.props;\n\t\tlet { value } = this.props;\n\n\t\t// Since we get the text selection from Aztec we need to be in sync with the HTML `value`\n\t\t// Removing leading white spaces using `trim()` should make sure this is the case.\n\t\tif ( typeof value === 'string' || value instanceof String ) {\n\t\t\tvalue = value.trimLeft();\n\t\t}\n\n\t\tconst { formats, replacements, text } = this.formatToValue( value );\n\t\tconst { activeFormats } = this.state;\n\n\t\treturn { formats, replacements, text, start, end, activeFormats };\n\t}\n\n\t/**\n\t * Creates a RichText value \"record\" from the current content and selection\n\t * information\n\t *\n\t *\n\t * @return {Object} A RichText value with formats and selection.\n\t */\n\tcreateRecord() {\n\t\tconst value = {\n\t\t\tstart: this.selectionStart,\n\t\t\tend: this.selectionEnd,\n\t\t\t...create( {\n\t\t\t\thtml: this.value,\n\t\t\t\trange: null,\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t} ),\n\t\t};\n\t\tconst start = Math.min( this.selectionStart, value.text.length );\n\t\tconst end = Math.min( this.selectionEnd, value.text.length );\n\t\treturn { ...value, start, end };\n\t}\n\n\t/**\n\t * Signals to the RichText owner that the block can be replaced with two\n\t * blocks as a result of splitting the block by pressing enter, or with\n\t * blocks as a result of splitting the block by pasting block content in the\n\t * instance.\n\t *\n\t * @param  {Object} record       The rich text value to split.\n\t * @param  {Array}  pastedBlocks The pasted blocks to insert, if any.\n\t */\n\tonSplit( record, pastedBlocks = [] ) {\n\t\tconst {\n\t\t\t__unstableOnReplace: onReplace,\n\t\t\t__unstableOnSplit: onSplit,\n\t\t\t__unstableOnSplitMiddle: onSplitMiddle,\n\t\t} = this.props;\n\n\t\tif ( ! onReplace || ! onSplit ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst blocks = [];\n\t\tconst [ before, after ] = split( record );\n\t\tconst hasPastedBlocks = pastedBlocks.length > 0;\n\n\t\t// Create a block with the content before the caret if there's no pasted\n\t\t// blocks, or if there are pasted blocks and the value is not empty.\n\t\t// We do not want a leading empty block on paste, but we do if split\n\t\t// with e.g. the enter key.\n\t\tif ( ! hasPastedBlocks || ! isEmpty( before ) ) {\n\t\t\tblocks.push( onSplit( this.valueToFormat( before ) ) );\n\t\t}\n\n\t\tif ( hasPastedBlocks ) {\n\t\t\tblocks.push( ...pastedBlocks );\n\t\t} else if ( onSplitMiddle ) {\n\t\t\tblocks.push( onSplitMiddle() );\n\t\t}\n\n\t\t// If there's pasted blocks, append a block with the content after the\n\t\t// caret. Otherwise, do append and empty block if there is no\n\t\t// `onSplitMiddle` prop, but if there is and the content is empty, the\n\t\t// middle block is enough to set focus in.\n\t\tif ( hasPastedBlocks || ! onSplitMiddle || ! isEmpty( after ) ) {\n\t\t\tblocks.push( onSplit( this.valueToFormat( after ) ) );\n\t\t}\n\n\t\t// If there are pasted blocks, set the selection to the last one.\n\t\t// Otherwise, set the selection to the second block.\n\t\tconst indexToSelect = hasPastedBlocks ? blocks.length - 1 : 1;\n\t\t// The onSplit event can cause a content update event for this block.  Such event should\n\t\t// definitely be processed by our native components, since they have no knowledge of\n\t\t// how the split works.  Setting lastEventCount to undefined forces the native component to\n\t\t// always update when provided with new content.\n\t\tthis.lastEventCount = undefined;\n\t\tonReplace( blocks, indexToSelect );\n\t}\n\n\tvalueToFormat( value ) {\n\t\t// remove the outer root tags\n\t\treturn this.removeRootTagsProduceByAztec( toHTMLString( {\n\t\t\tvalue,\n\t\t\tmultilineTag: this.multilineTag,\n\t\t} ) );\n\t}\n\n\tgetActiveFormatNames( record ) {\n\t\tconst {\n\t\t\tformatTypes,\n\t\t} = this.props;\n\n\t\treturn formatTypes.map( ( { name } ) => name ).filter( ( name ) => {\n\t\t\treturn getActiveFormat( record, name ) !== undefined;\n\t\t} ).map( ( name ) => gutenbergFormatNamesToAztec[ name ] ).filter( Boolean );\n\t}\n\n\tonFormatChange( record ) {\n\t\tconst { start, end, activeFormats = [] } = record;\n\t\tconst changeHandlers = pickBy( this.props, ( v, key ) =>\n\t\t\tkey.startsWith( 'format_on_change_functions_' )\n\t\t);\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( record.formats, record.text );\n\t\t} );\n\n\t\tthis.value = this.valueToFormat( record );\n\t\tthis.props.onChange( this.value );\n\t\tthis.setState( { activeFormats } );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.selectionStart = start;\n\t\tthis.selectionEnd = end;\n\n\t\tthis.onCreateUndoLevel();\n\n\t\tthis.lastAztecEventType = 'format change';\n\t}\n\n\tonCreateUndoLevel() {\n\t\tconst { __unstableOnCreateUndoLevel: onCreateUndoLevel } = this.props;\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( this.lastHistoryValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonCreateUndoLevel();\n\t\tthis.lastHistoryValue = this.value;\n\t}\n\n\t/*\n\t * Cleans up any root tags produced by aztec.\n\t * TODO: This should be removed on a later version when aztec doesn't return the top tag of the text being edited\n\t */\n\tremoveRootTagsProduceByAztec( html ) {\n\t\tlet result = this.removeRootTag( this.props.tagName, html );\n\t\t// Temporary workaround for https://github.com/WordPress/gutenberg/pull/13763\n\t\tif ( this.props.rootTagsToEliminate ) {\n\t\t\tthis.props.rootTagsToEliminate.forEach( ( element ) => {\n\t\t\t\tresult = this.removeRootTag( element, result );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.props.tagsToEliminate ) {\n\t\t\tthis.props.tagsToEliminate.forEach( ( element ) => {\n\t\t\t\tresult = this.removeTag( element, result );\n\t\t\t} );\n\t\t}\n\t\treturn result;\n\t}\n\n\tremoveRootTag( tag, html ) {\n\t\tconst openingTagRegexp = RegExp( '^<' + tag + '>', 'gim' );\n\t\tconst closingTagRegexp = RegExp( '</' + tag + '>$', 'gim' );\n\t\treturn html.replace( openingTagRegexp, '' ).replace( closingTagRegexp, '' );\n\t}\n\tremoveTag( tag, html ) {\n\t\tconst openingTagRegexp = RegExp( '<' + tag + '>', 'gim' );\n\t\tconst closingTagRegexp = RegExp( '</' + tag + '>', 'gim' );\n\t\treturn html.replace( openingTagRegexp, '' ).replace( closingTagRegexp, '' );\n\t}\n\n\t/*\n\t * Handles any case where the content of the AztecRN instance has changed\n\t */\n\tonChange( event ) {\n\t\tconst contentWithoutRootTag = this.removeRootTagsProduceByAztec( unescapeSpaces( event.nativeEvent.text ) );\n\t\t// On iOS, onChange can be triggered after selection changes, even though there are no content changes.\n\t\tif ( contentWithoutRootTag === this.value ) {\n\t\t\treturn;\n\t\t}\n\t\tthis.lastEventCount = event.nativeEvent.eventCount;\n\t\tthis.comesFromAztec = true;\n\t\tthis.firedAfterTextChanged = true; // the onChange event always fires after the fact\n\t\tthis.onTextUpdate( event );\n\t\tthis.lastAztecEventType = 'input';\n\t}\n\n\tonTextUpdate( event ) {\n\t\tconst contentWithoutRootTag = this.removeRootTagsProduceByAztec( unescapeSpaces( event.nativeEvent.text ) );\n\n\t\tconst refresh = this.value !== contentWithoutRootTag;\n\t\tthis.value = contentWithoutRootTag;\n\n\t\t// we don't want to refresh if our goal is just to create a record\n\t\tif ( refresh ) {\n\t\t\tthis.props.onChange( contentWithoutRootTag );\n\t\t}\n\t}\n\n\t/*\n\t * Handles any case where the content of the AztecRN instance has changed in size\n\t */\n\tonContentSizeChange( contentSize ) {\n\t\tconst contentHeight = contentSize.height;\n\t\tthis.setState( { height: contentHeight } );\n\t\tthis.lastAztecEventType = 'content size change';\n\t}\n\n\tonEnter( event ) {\n\t\tif ( this.props.onEnter ) {\n\t\t\tthis.props.onEnter();\n\t\t\treturn;\n\t\t}\n\t\tconst {\n\t\t\t__unstableOnReplace: onReplace,\n\t\t\t__unstableOnSplit: onSplit,\n\t\t} = this.props;\n\n\t\tthis.lastEventCount = event.nativeEvent.eventCount;\n\t\tthis.comesFromAztec = true;\n\t\tthis.firedAfterTextChanged = event.nativeEvent.firedAfterTextChanged;\n\n\t\tconst canSplit = onReplace && onSplit;\n\t\tconst currentRecord = this.createRecord();\n\t\tif ( this.multilineTag ) {\n\t\t\tif ( event.shiftKey ) {\n\t\t\t\tthis.needsSelectionUpdate = true;\n\t\t\t\tconst insertedLineBreak = { ...insert( currentRecord, '\\n' ) };\n\t\t\t\tthis.onFormatChange( insertedLineBreak );\n\t\t\t} else if ( canSplit && isEmptyLine( currentRecord ) ) {\n\t\t\t\tthis.onSplit( currentRecord );\n\t\t\t} else {\n\t\t\t\tthis.needsSelectionUpdate = true;\n\t\t\t\tconst insertedLineSeparator = { ...insertLineSeparator( currentRecord ) };\n\t\t\t\tthis.onFormatChange( insertedLineSeparator );\n\t\t\t}\n\t\t} else if ( event.shiftKey || ! onSplit ) {\n\t\t\tthis.needsSelectionUpdate = true;\n\t\t\tconst insertedLineBreak = { ...insert( currentRecord, '\\n' ) };\n\t\t\tthis.onFormatChange( insertedLineBreak );\n\t\t} else {\n\t\t\tthis.onSplit( currentRecord );\n\t\t}\n\t\tthis.lastAztecEventType = 'input';\n\t}\n\n\tonBackspace( event ) {\n\t\tconst {\n\t\t\t__unstableOnMerge: onMerge,\n\t\t\t__unstableOnRemove: onRemove,\n\t\t\tonChange,\n\t\t} = this.props;\n\t\tif ( ! onMerge && ! onRemove ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst keyCode = BACKSPACE; // TODO : should we differentiate BACKSPACE and DELETE?\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\tthis.lastEventCount = event.nativeEvent.eventCount;\n\t\tthis.comesFromAztec = true;\n\t\tthis.firedAfterTextChanged = event.nativeEvent.firedAfterTextChanged;\n\t\tconst value = this.createRecord();\n\t\tconst { start, end } = value;\n\t\tlet newValue;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end >= value.text.length ) {\n\t\t\tnewValue = remove( value, start, end );\n\t\t\tonChange( newValue );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.multilineTag ) {\n\t\t\tnewValue = removeLineSeparator( value, keyCode === BACKSPACE );\n\t\t\tif ( newValue ) {\n\t\t\t\tthis.onFormatChange( newValue );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst empty = this.isEmpty();\n\n\t\tif ( onMerge ) {\n\t\t\tonMerge( ! isReverse );\n\t\t}\n\n\t\t// Only handle remove on Backspace. This serves dual-purpose of being\n\t\t// an intentional user interaction distinguishing between Backspace and\n\t\t// Delete to remove the empty field, but also to avoid merge & remove\n\t\t// causing destruction of two fields (merge, then removed merged).\n\t\tif ( onRemove && empty && isReverse ) {\n\t\t\tonRemove( ! isReverse );\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tthis.lastAztecEventType = 'input';\n\t}\n\n\t/**\n\t * Handles a paste event from the native Aztec Wrapper.\n\t *\n\t * @param {PasteEvent} event The paste event which wraps `nativeEvent`.\n\t */\n\tonPaste( event ) {\n\t\tconst {\n\t\t\ttagName,\n\t\t\t__unstablePasteHandler: pasteHandler,\n\t\t\t__unstableOnReplace: onReplace,\n\t\t\t__unstableOnSplit: onSplit,\n\t\t\tonChange,\n\t\t} = this.props;\n\n\t\tconst { pastedText, pastedHtml, files } = event.nativeEvent;\n\t\tconst currentRecord = this.createRecord();\n\n\t\tevent.preventDefault();\n\n\t\t// Only process file if no HTML is present.\n\t\t// Note: a pasted file may have the URL as plain text.\n\t\tif ( files && files.length > 0 ) {\n\t\t\tconst uploadId = Number.MAX_SAFE_INTEGER;\n\t\t\tlet html = '';\n\t\t\tfiles.forEach( ( file ) => {\n\t\t\t\thtml += `<img src=\"${ file }\" class=\"wp-image-${ uploadId }\">`;\n\t\t\t} );\n\t\t\tconst content = pasteHandler( {\n\t\t\t\tHTML: html,\n\t\t\t\tmode: 'BLOCKS',\n\t\t\t\ttagName,\n\t\t\t} );\n\t\t\tconst shouldReplace = onReplace && this.isEmpty();\n\n\t\t\tif ( shouldReplace ) {\n\t\t\t\tonReplace( content );\n\t\t\t} else {\n\t\t\t\tthis.onSplit( currentRecord, content );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// There is a selection, check if a URL is pasted.\n\t\tif ( ! isCollapsed( currentRecord ) ) {\n\t\t\tconst trimmedText = ( pastedHtml || pastedText ).replace( /<[^>]+>/g, '' )\n\t\t\t\t.trim();\n\n\t\t\t// A URL was pasted, turn the selection into a link\n\t\t\tif ( isURL( trimmedText ) ) {\n\t\t\t\tconst linkedRecord = applyFormat( currentRecord, {\n\t\t\t\t\ttype: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: decodeEntities( trimmedText ),\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t\tthis.value = this.valueToFormat( linkedRecord );\n\t\t\t\tonChange( this.value );\n\n\t\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\t\twindow.console.log( 'Created link:\\n\\n', trimmedText );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst shouldReplace = this.props.onReplace && this.isEmpty();\n\n\t\tlet mode = 'INLINE';\n\n\t\tif ( shouldReplace ) {\n\t\t\tmode = 'BLOCKS';\n\t\t} else if ( onSplit ) {\n\t\t\tmode = 'AUTO';\n\t\t}\n\n\t\tconst pastedContent = saferPasteHandler( pasteHandler, {\n\t\t\tHTML: pastedHtml,\n\t\t\tplainText: pastedText,\n\t\t\tmode,\n\t\t\ttagName: this.props.tagName,\n\t\t\tcanUserUseUnfilteredHTML: this.props.canUserUseUnfilteredHTML,\n\t\t} );\n\n\t\tif ( typeof pastedContent === 'string' ) {\n\t\t\tconst recordToInsert = create( { html: pastedContent } );\n\t\t\tconst resultingRecord = insert( currentRecord, recordToInsert );\n\t\t\tconst resultingContent = this.valueToFormat( resultingRecord );\n\n\t\t\tthis.lastEventCount = undefined;\n\t\t\tthis.value = resultingContent;\n\n\t\t\t// explicitly set selection after inline paste\n\t\t\tthis.onSelectionChange( resultingRecord.start, resultingRecord.end );\n\n\t\t\tonChange( this.value );\n\t\t} else if ( onSplit ) {\n\t\t\tif ( ! pastedContent.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( shouldReplace ) {\n\t\t\t\tonReplace( pastedContent );\n\t\t\t} else {\n\t\t\t\tthis.onSplit( currentRecord, pastedContent );\n\t\t\t}\n\t\t}\n\t}\n\n\tonFocus() {\n\t\tthis.isTouched = true;\n\n\t\tconst {\n\t\t\tunstableOnFocus,\n\t\t\tonSelectionChange,\n\t\t} = this.props;\n\n\t\tif ( unstableOnFocus ) {\n\t\t\tunstableOnFocus();\n\t\t}\n\n\t\t// We know for certain that on focus, the old selection is invalid. It\n\t\t// will be recalculated on `selectionchange`.\n\t\tconst index = undefined;\n\n\t\tonSelectionChange( index, index );\n\n\t\tthis.lastAztecEventType = 'focus';\n\t}\n\n\tonBlur( event ) {\n\t\tthis.isTouched = false;\n\n\t\tif ( this.props.onBlur ) {\n\t\t\tthis.props.onBlur( event );\n\t\t}\n\n\t\tthis.lastAztecEventType = 'blur';\n\t}\n\n\tonSelectionChange( start, end ) {\n\t\tconst hasChanged = this.selectionStart !== start || this.selectionEnd !== end;\n\n\t\tthis.selectionStart = start;\n\t\tthis.selectionEnd = end;\n\n\t\t// This is a manual selection change event if onChange was not triggered just before\n\t\t// and we did not just trigger a text update\n\t\t// `onChange` could be the last event and could have been triggered a long time ago so\n\t\t// this approach is not perfectly reliable\n\t\tconst isManual = this.lastAztecEventType !== 'input' && this.props.value === this.value;\n\t\tif ( hasChanged && isManual ) {\n\t\t\tconst value = this.createRecord();\n\t\t\tconst activeFormats = getActiveFormats( value );\n\t\t\tthis.setState( { activeFormats } );\n\t\t}\n\n\t\tthis.props.onSelectionChange( start, end );\n\t}\n\n\tonSelectionChangeFromAztec( start, end, text, event ) {\n\t\t// `end` can be less than `start` on iOS\n\t\t// Let's fix that here so `rich-text/slice` can work properly\n\t\tconst realStart = Math.min( start, end );\n\t\tconst realEnd = Math.max( start, end );\n\n\t\t// check and dicsard stray event, where the text and selection is equal to the ones already cached\n\t\tconst contentWithoutRootTag = this.removeRootTagsProduceByAztec( unescapeSpaces( event.nativeEvent.text ) );\n\t\tif ( contentWithoutRootTag === this.value && realStart === this.selectionStart && realEnd === this.selectionEnd ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.comesFromAztec = true;\n\t\tthis.firedAfterTextChanged = true; // Selection change event always fires after the fact\n\n\t\t// update text before updating selection\n\t\t// Make sure there are changes made to the content before upgrading it upward\n\t\tthis.onTextUpdate( event );\n\n\t\tthis.onSelectionChange( realStart, realEnd );\n\n\t\t// Update lastEventCount to prevent Aztec from re-rendering the content it just sent\n\t\tthis.lastEventCount = event.nativeEvent.eventCount;\n\n\t\tthis.lastAztecEventType = 'selection change';\n\t}\n\n\tisEmpty() {\n\t\treturn isEmpty( this.formatToValue( this.props.value ) );\n\t}\n\n\tformatToValue( value ) {\n\t\t// Handle deprecated `children` and `node` sources.\n\t\tif ( Array.isArray( value ) ) {\n\t\t\treturn create( {\n\t\t\t\thtml: childrenBlock.toHTML( value ),\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.props.format === 'string' ) {\n\t\t\treturn create( {\n\t\t\t\thtml: value,\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t} );\n\t\t}\n\n\t\t// Guard for blocks passing `null` in onSplit callbacks. May be removed\n\t\t// if onSplit is revised to not pass a `null` value.\n\t\tif ( value === null ) {\n\t\t\treturn create();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tshouldComponentUpdate( nextProps ) {\n\t\tif ( nextProps.tagName !== this.props.tagName ) {\n\t\t\tthis.lastEventCount = undefined;\n\t\t\tthis.value = undefined;\n\t\t\treturn true;\n\t\t}\n\n\t\t// TODO: Please re-introduce the check to avoid updating the content right after an `onChange` call.\n\t\t// It was removed in https://github.com/WordPress/gutenberg/pull/12417 to fix undo/redo problem.\n\n\t\t// If the component is changed React side (undo/redo/merging/splitting/custom text actions)\n\t\t// we need to make sure the native is updated as well.\n\n\t\t// Also, don't trust the \"this.lastContent\" as on Android, incomplete text events arrive\n\t\t//  with only some of the text, while the virtual keyboard's suggestion system does its magic.\n\t\t// ** compare with this.lastContent for optimizing performance by not forcing Aztec with text it already has\n\t\t// , but compare with props.value to not lose \"half word\" text because of Android virtual keyb autosuggestion behavior\n\t\tif ( ( typeof nextProps.value !== 'undefined' ) &&\n\t\t\t\t( typeof this.props.value !== 'undefined' ) &&\n\t\t\t\t( ! this.comesFromAztec || ! this.firedAfterTextChanged ) &&\n\t\t\t\tnextProps.value !== this.props.value ) {\n\t\t\t// Gutenberg seems to try to mirror the caret state even on events that only change the content so,\n\t\t\t//  let's force caret update if state has selection set.\n\t\t\tif ( typeof nextProps.selectionStart !== 'undefined' && typeof nextProps.selectionEnd !== 'undefined' ) {\n\t\t\t\tthis.needsSelectionUpdate = true;\n\t\t\t}\n\n\t\t\tthis.lastEventCount = undefined; // force a refresh on the native side\n\t\t}\n\n\t\tif ( ! this.comesFromAztec ) {\n\t\t\tif ( ( typeof nextProps.selectionStart !== 'undefined' ) &&\n\t\t\t\t\t( typeof nextProps.selectionEnd !== 'undefined' ) &&\n\t\t\t\t\tnextProps.selectionStart !== this.props.selectionStart &&\n\t\t\t\t\tnextProps.selectionStart !== this.selectionStart &&\n\t\t\t\t\tnextProps.__unstableIsSelected ) {\n\t\t\t\tthis.needsSelectionUpdate = true;\n\t\t\t\tthis.lastEventCount = undefined; // force a refresh on the native side\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcomponentDidMount() {\n\t\t// Request focus if wrapping block is selected and parent hasn't inhibited the focus request. This method of focusing\n\t\t//  is trying to implement the web-side counterpart of BlockList's `focusTabbable` where the BlockList is focusing an\n\t\t//  inputbox by searching the DOM. We don't have the DOM in RN so, using the combination of blockIsSelected and __unstableMobileNoFocusOnMount\n\t\t//  to determine if we should focus the RichText.\n\t\tif ( this.props.blockIsSelected && ! this.props.__unstableMobileNoFocusOnMount ) {\n\t\t\tthis._editor.focus();\n\t\t\tthis.onSelectionChange( this.props.selectionStart || 0, this.props.selectionEnd || 0 );\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this._editor.isFocused() && this.props.shouldBlurOnUnmount ) {\n\t\t\tthis._editor.blur();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.value !== this.value ) {\n\t\t\tthis.value = this.props.value;\n\t\t\tthis.lastEventCount = undefined;\n\t\t}\n\t\tconst {\n\t\t\t__unstableIsSelected: isSelected,\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\t__unstableIsSelected: prevIsSelected,\n\t\t} = prevProps;\n\n\t\tif ( isSelected && ! prevIsSelected ) {\n\t\t\tthis._editor.focus();\n\t\t\t// Update selection props explicitly when component is selected as Aztec won't call onSelectionChange\n\t\t\t// if its internal value hasn't change. When created, default value is 0, 0\n\t\t\tthis.onSelectionChange( this.props.selectionStart || 0, this.props.selectionEnd || 0 );\n\t\t} else if ( ! isSelected && prevIsSelected ) {\n\t\t\tthis._editor.blur();\n\t\t}\n\t}\n\n\twillTrimSpaces( html ) {\n\t\t// regex for detecting spaces around block element html tags\n\t\tconst blockHtmlElements = '(div|br|blockquote|ul|ol|li|p|pre|h1|h2|h3|h4|h5|h6|iframe|hr)';\n\t\tconst leadingOrTrailingSpaces = new RegExp( `(\\\\s+)<\\/?${ blockHtmlElements }>|<\\/?${ blockHtmlElements }>(\\\\s+)`, 'g' );\n\t\tconst matches = html.match( leadingOrTrailingSpaces );\n\t\tif ( matches && matches.length > 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetHtmlToRender( record, tagName ) {\n\t\t// Save back to HTML from React tree\n\t\tconst value = this.valueToFormat( record );\n\n\t\tif ( value === undefined || value === '' ) {\n\t\t\tthis.lastEventCount = undefined; // force a refresh on the native side\n\t\t\treturn '';\n\t\t} else if ( tagName ) {\n\t\t\treturn `<${ tagName }>${ value }</${ tagName }>`;\n\t\t}\n\t\treturn value;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\ttagName,\n\t\t\tstyle,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t\tchildren,\n\t\t} = this.props;\n\n\t\tconst record = this.getRecord();\n\t\tconst html = this.getHtmlToRender( record, tagName );\n\n\t\tlet minHeight = styles[ 'rich-text' ].minHeight;\n\t\tif ( style && style.minHeight ) {\n\t\t\tminHeight = style.minHeight;\n\t\t}\n\n\t\tconst {\n\t\t\tcolor: defaultPlaceholderTextColor,\n\t\t} = styles[ 'rich-text-placeholder' ];\n\n\t\tconst {\n\t\t\tcolor: defaultColor,\n\t\t\ttextDecorationColor: defaultTextDecorationColor,\n\t\t\tfontFamily: defaultFontFamily,\n\t\t} = styles[ 'rich-text' ];\n\n\t\tlet selection = null;\n\t\tif ( this.needsSelectionUpdate ) {\n\t\t\tthis.needsSelectionUpdate = false;\n\t\t\tselection = { start: this.props.selectionStart, end: this.props.selectionEnd };\n\n\t\t\t// On AztecAndroid, setting the caret to an out-of-bounds position will crash the editor so, let's check for some cases.\n\t\t\tif ( ! this.isIOS ) {\n\t\t\t\t// Aztec performs some html text cleanup while parsing it so, its internal representation gets out-of-sync with the\n\t\t\t\t// representation of the format-lib on the RN side. We need to avoid trying to set the caret position because it may\n\t\t\t\t// be outside the text bounds and crash Aztec, at least on Android.\n\t\t\t\tif ( this.willTrimSpaces( html ) ) {\n\t\t\t\t\t// the html will get trimmed by the cleaning up functions in Aztec and caret position will get out-of-sync.\n\t\t\t\t\t// So, skip forcing it, let Aztec just do its best and just log the fact.\n\t\t\t\t\tconsole.warn( 'RichText value will be trimmed for spaces! Avoiding setting the caret position manually.' );\n\t\t\t\t\tselection = null;\n\t\t\t\t} else if ( this.props.selectionStart > record.text.length || this.props.selectionEnd > record.text.length ) {\n\t\t\t\t\tconsole.warn( 'Oops, selection will land outside the text, skipping setting it...' );\n\t\t\t\t\tselection = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( this.comesFromAztec ) {\n\t\t\tthis.comesFromAztec = false;\n\t\t\tthis.firedAfterTextChanged = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t{ children && children( {\n\t\t\t\t\tisSelected,\n\t\t\t\t\tvalue: record,\n\t\t\t\t\tonChange: this.onFormatChange,\n\t\t\t\t} ) }\n\t\t\t\t<RCTAztecView\n\t\t\t\t\tref={ ( ref ) => {\n\t\t\t\t\t\tthis._editor = ref;\n\n\t\t\t\t\t\tif ( this.props.setRef ) {\n\t\t\t\t\t\t\tthis.props.setRef( ref );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t...style,\n\t\t\t\t\t\tminHeight: Math.max( minHeight, this.state.height ),\n\t\t\t\t\t} }\n\t\t\t\t\ttext={ { text: html, eventCount: this.lastEventCount, selection } }\n\t\t\t\t\tplaceholder={ this.props.placeholder }\n\t\t\t\t\tplaceholderTextColor={ this.props.placeholderTextColor || defaultPlaceholderTextColor }\n\t\t\t\t\tdeleteEnter={ this.props.deleteEnter }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\tonEnter={ this.onEnter }\n\t\t\t\t\tonBackspace={ this.onBackspace }\n\t\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\t\tactiveFormats={ this.getActiveFormatNames( record ) }\n\t\t\t\t\tonContentSizeChange={ this.onContentSizeChange }\n\t\t\t\t\tonCaretVerticalPositionChange={ this.props.onCaretVerticalPositionChange }\n\t\t\t\t\tonSelectionChange={ this.onSelectionChangeFromAztec }\n\t\t\t\t\tblockType={ { tag: tagName } }\n\t\t\t\t\tcolor={ defaultColor }\n\t\t\t\t\tlinkTextColor={ defaultTextDecorationColor }\n\t\t\t\t\tmaxImagesWidth={ 200 }\n\t\t\t\t\tfontFamily={ this.props.fontFamily || defaultFontFamily }\n\t\t\t\t\tfontSize={ this.props.fontSize || ( style && style.fontSize ) }\n\t\t\t\t\tfontWeight={ this.props.fontWeight }\n\t\t\t\t\tfontStyle={ this.props.fontStyle }\n\t\t\t\t\tdisableEditingMenu={ this.props.disableEditingMenu }\n\t\t\t\t\tisMultiline={ this.isMultiline }\n\t\t\t\t\ttextAlign={ this.props.textAlign }\n\t\t\t\t/>\n\t\t\t\t{ isSelected && <FormatEdit value={ record } onChange={ this.onFormatChange } /> }\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n\ttagName: 'div',\n};\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tformatTypes: select( 'core/rich-text' ).getFormatTypes(),\n\t} ) ),\n] )( RichText );\n"]}