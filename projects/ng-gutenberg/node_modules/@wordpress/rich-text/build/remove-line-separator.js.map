{"version":3,"sources":["@wordpress/rich-text/src/remove-line-separator.js"],"names":["removeLineSeparator","value","backward","replacements","text","start","end","collapsed","index","removeStart","removeEnd","LINE_SEPARATOR","newValue","length","newReplacements","slice"],"mappings":";;;;;;;;;;;AAIA;;AACA;;AACA;;AANA;;;;AAQA;;;;;;;;;AASO,SAASA,mBAAT,CACNC,KADM,EAGL;AAAA,MADDC,QACC,uEADU,IACV;AAAA,MACOC,YADP,GAC0CF,KAD1C,CACOE,YADP;AAAA,MACqBC,IADrB,GAC0CH,KAD1C,CACqBG,IADrB;AAAA,MAC2BC,KAD3B,GAC0CJ,KAD1C,CAC2BI,KAD3B;AAAA,MACkCC,GADlC,GAC0CL,KAD1C,CACkCK,GADlC;AAED,MAAMC,SAAS,GAAG,8BAAaN,KAAb,CAAlB;AACA,MAAIO,KAAK,GAAGH,KAAK,GAAG,CAApB;AACA,MAAII,WAAW,GAAGF,SAAS,GAAGF,KAAK,GAAG,CAAX,GAAeA,KAA1C;AACA,MAAIK,SAAS,GAAGJ,GAAhB;;AACA,MAAK,CAAEJ,QAAP,EAAkB;AACjBM,IAAAA,KAAK,GAAGF,GAAR;AACAG,IAAAA,WAAW,GAAGJ,KAAd;AACAK,IAAAA,SAAS,GAAGH,SAAS,GAAGD,GAAG,GAAG,CAAT,GAAaA,GAAlC;AACA;;AAED,MAAKF,IAAI,CAAEI,KAAF,CAAJ,KAAkBG,iCAAvB,EAAwC;AACvC;AACA;;AAED,MAAIC,QAAJ,CAhBC,CAiBD;AACA;;AACA,MAAKL,SAAS,IAAIJ,YAAY,CAAEK,KAAF,CAAzB,IAAsCL,YAAY,CAAEK,KAAF,CAAZ,CAAsBK,MAAjE,EAA0E;AACzE,QAAMC,eAAe,GAAGX,YAAY,CAACY,KAAb,EAAxB;AAEAD,IAAAA,eAAe,CAAEN,KAAF,CAAf,GAA2BL,YAAY,CAAEK,KAAF,CAAZ,CAAsBO,KAAtB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,CAA3B;AACAH,IAAAA,QAAQ,mCACJX,KADI;AAEPE,MAAAA,YAAY,EAAEW;AAFP,MAAR;AAIA,GARD,MAQO;AACNF,IAAAA,QAAQ,GAAG,oBACVX,KADU,EAEVQ,WAFU,EAGVC,SAHU,CAAX;AAKA;;AACD,SAAOE,QAAP;AACA","sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { isCollapsed } from './is-collapsed';\nimport { remove } from './remove';\n\n/**\n * Removes a line separator character, if existing, from a Rich Text value at the current\n * indices. If no line separator exists on the indices it will return undefined.\n *\n * @param {Object} value Value to modify.\n * @param {boolean} backward indicates if are removing from the start index or the end index.\n *\n * @return {Object|undefined} A new value with the line separator removed. Or undefined if no line separator is found on the position.\n */\nexport function removeLineSeparator(\n\tvalue,\n\tbackward = true,\n) {\n\tconst { replacements, text, start, end } = value;\n\tconst collapsed = isCollapsed( value );\n\tlet index = start - 1;\n\tlet removeStart = collapsed ? start - 1 : start;\n\tlet removeEnd = end;\n\tif ( ! backward ) {\n\t\tindex = end;\n\t\tremoveStart = start;\n\t\tremoveEnd = collapsed ? end + 1 : end;\n\t}\n\n\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\treturn;\n\t}\n\n\tlet newValue;\n\t// If the line separator that is about te be removed\n\t// contains wrappers, remove the wrappers first.\n\tif ( collapsed && replacements[ index ] && replacements[ index ].length ) {\n\t\tconst newReplacements = replacements.slice();\n\n\t\tnewReplacements[ index ] = replacements[ index ].slice( 0, -1 );\n\t\tnewValue = {\n\t\t\t...value,\n\t\t\treplacements: newReplacements,\n\t\t};\n\t} else {\n\t\tnewValue = remove(\n\t\t\tvalue,\n\t\t\tremoveStart,\n\t\t\tremoveEnd\n\t\t);\n\t}\n\treturn newValue;\n}\n"]}