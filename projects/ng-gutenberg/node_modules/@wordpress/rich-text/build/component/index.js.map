{"version":3,"sources":["@wordpress/rich-text/src/component/index.js"],"names":["window","getSelection","getComputedStyle","INSERTION_INPUT_TYPES_TO_IGNORE","Set","globalStyle","document","createElement","head","appendChild","createPrepareEditableTree","props","prefix","fns","Object","keys","reduce","accumulator","key","startsWith","push","value","fn","text","formats","fixPlaceholderSelection","selection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","getAttribute","collapseToStart","RichText","selectionStart","selectionEnd","arguments","onFocus","bind","onBlur","onChange","handleDelete","handleEnter","handleSpace","handleHorizontalNavigation","onPaste","onCreateUndoLevel","onInput","onCompositionEnd","onSelectionChange","createRecord","applyRecord","valueToFormat","setRef","valueToEditableHTML","onPointerDown","formatToValue","Editable","onKeyDown","event","defaultPrevented","state","lastHistoryValue","record","start","end","removeEventListener","cancelAnimationFrame","rafId","node","process","env","NODE_ENV","computedStyle","display","console","warn","editableRef","multilineTag","__unstableMultilineTag","range","rangeCount","getRangeAt","element","multilineWrapperTags","undefined","__unstableIsEditableTree","domOnly","current","prepareEditableTree","__unstableDomOnly","placeholder","formatTypes","clipboardData","items","files","plainText","html","getData","error1","error2","preventDefault","log","transformed","accumlator","__unstablePasteRule","image","type","test","removeEditorOnlyFormats","unstableOnFocus","recalculateBoundaryStyle","index","activeFormats","setState","requestAnimationFrame","addEventListener","setFocusedElement","alternative","instanceId","nativeEvent","isComposing","inputType","indexOf","has","change","withoutHistory","inputRule","__unstableInputRule","markAutomaticChange","__unstableMarkAutomaticChange","setTimeout","clearTimeout","timeout","__unstableIsSelected","length","isCaretWithinFormattedText","__unstableIsCaretWithinFormattedText","onEnterFormattedText","__unstableOnEnterFormattedText","onExitFormattedText","__unstableOnExitFormattedText","newValue","boundarySelector","querySelector","newColor","color","replace","selector","rule","innerHTML","changeHandlers","v","values","forEach","changeHandler","__unstableOnCreateUndoLevel","keyCode","DELETE","BACKSPACE","ESCAPE","__unstableDidAutomaticChange","__unstableUndo","onDelete","isReverse","ENTER","onEnter","shiftKey","altKey","metaKey","ctrlKey","tagName","SPACE","characterBefore","LINE_SEPARATOR","LEFT","RIGHT","collapsed","direction","reverseKey","formatsBefore","formatsAfter","newActiveFormatsLength","source","newActiveFormats","slice","newPos","target","textContent","parentNode","Array","from","ownerDocument","createRange","setStart","setEnd","removeAllRanges","addRange","prevProps","isSelected","shouldReapply","predicate","prepareProps","prevPrepareProps","format","prepare","body","formatType","__experimentalCreatePrepareEditableTree","name","Tagname","style","className","children","allowedFormats","withoutInteractiveFormatting","Component","defaultProps","select","getFormatTypes","withSafeTimeout"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport {\n\tfind,\n\tisNil,\n\tpickBy,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { BACKSPACE, DELETE, ENTER, LEFT, RIGHT, SPACE, ESCAPE } from '@wordpress/keycodes';\nimport { withSelect } from '@wordpress/data';\nimport { withSafeTimeout, compose } from '@wordpress/compose';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport Editable from './editable';\nimport { pickAriaProps } from './aria';\nimport { create } from '../create';\nimport { apply, toDom } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { remove } from '../remove';\nimport { removeFormat } from '../remove-format';\nimport { isCollapsed } from '../is-collapsed';\nimport { LINE_SEPARATOR } from '../special-characters';\nimport { indentListItems } from '../indent-list-items';\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\nimport { removeLineSeparator } from '../remove-line-separator';\n\n/**\n * Browser dependencies\n */\n\nconst { getSelection, getComputedStyle } = window;\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\n/**\n * Global stylesheet.\n */\nconst globalStyle = document.createElement( 'style' );\n\ndocument.head.appendChild( globalStyle );\n\nfunction createPrepareEditableTree( props, prefix ) {\n\tconst fns = Object.keys( props ).reduce( ( accumulator, key ) => {\n\t\tif ( key.startsWith( prefix ) ) {\n\t\t\taccumulator.push( props[ key ] );\n\t\t}\n\n\t\treturn accumulator;\n\t}, [] );\n\n\treturn ( value ) => fns.reduce( ( accumulator, fn ) => {\n\t\treturn fn( accumulator, value.text );\n\t}, value.formats );\n}\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n */\nfunction fixPlaceholderSelection() {\n\tconst selection = window.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.getAttribute( 'data-rich-text-placeholder' )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\n/**\n * See export statement below.\n */\nclass RichText extends Component {\n\tconstructor( {\n\t\tvalue,\n\t\tselectionStart,\n\t\tselectionEnd,\n\t} ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.handleDelete = this.handleDelete.bind( this );\n\t\tthis.handleEnter = this.handleEnter.bind( this );\n\t\tthis.handleSpace = this.handleSpace.bind( this );\n\t\tthis.handleHorizontalNavigation = this.handleHorizontalNavigation.bind( this );\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onCreateUndoLevel = this.onCreateUndoLevel.bind( this );\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onCompositionEnd = this.onCompositionEnd.bind( this );\n\t\tthis.onSelectionChange = this.onSelectionChange.bind( this );\n\t\tthis.createRecord = this.createRecord.bind( this );\n\t\tthis.applyRecord = this.applyRecord.bind( this );\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.setRef = this.setRef.bind( this );\n\t\tthis.valueToEditableHTML = this.valueToEditableHTML.bind( this );\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.formatToValue = this.formatToValue.bind( this );\n\t\tthis.Editable = this.Editable.bind( this );\n\n\t\tthis.onKeyDown = ( event ) => {\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.handleDelete( event );\n\t\t\tthis.handleEnter( event );\n\t\t\tthis.handleSpace( event );\n\t\t\tthis.handleHorizontalNavigation( event );\n\t\t};\n\n\t\tthis.state = {};\n\t\tthis.lastHistoryValue = value;\n\n\t\t// Internal values are updated synchronously, unlike props and state.\n\t\tthis.value = value;\n\t\tthis.record = this.formatToValue( value );\n\t\tthis.record.start = selectionStart;\n\t\tthis.record.end = selectionEnd;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener( 'selectionchange', this.onSelectionChange );\n\t\twindow.cancelAnimationFrame( this.rafId );\n\t}\n\n\tsetRef( node ) {\n\t\tif ( node ) {\n\t\t\tif ( process.env.NODE_ENV === 'development' ) {\n\t\t\t\tconst computedStyle = getComputedStyle( node );\n\n\t\t\t\tif ( computedStyle.display === 'inline' ) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn( 'RichText cannot be used with an inline container. Please use a different tagName.' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.editableRef = node;\n\t\t} else {\n\t\t\tdelete this.editableRef;\n\t\t}\n\t}\n\n\tcreateRecord() {\n\t\tconst { __unstableMultilineTag: multilineTag } = this.props;\n\t\tconst selection = getSelection();\n\t\tconst range = selection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: this.editableRef,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags: multilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t} );\n\t}\n\n\tapplyRecord( record, { domOnly } = {} ) {\n\t\tconst { __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tapply( {\n\t\t\tvalue: record,\n\t\t\tcurrent: this.editableRef,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags: multilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: createPrepareEditableTree( this.props, 'format_prepare_functions' ),\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder: this.props.placeholder,\n\t\t} );\n\t}\n\n\t/**\n\t * Handles a paste event.\n\t *\n\t * Saves the pasted data as plain text in `pastedPlainText`.\n\t *\n\t * @param {PasteEvent} event The paste event.\n\t */\n\tonPaste( event ) {\n\t\tconst { formatTypes, onPaste } = this.props;\n\t\tconst clipboardData = event.clipboardData;\n\t\tlet { items, files } = clipboardData;\n\n\t\t// In Edge these properties can be null instead of undefined, so a more\n\t\t// rigorous test is required over using default values.\n\t\titems = isNil( items ) ? [] : items;\n\t\tfiles = isNil( files ) ? [] : files;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tconst record = this.record;\n\t\tconst transformed = formatTypes.reduce( ( accumlator, { __unstablePasteRule } ) => {\n\t\t\t// Only allow one transform.\n\t\t\tif ( __unstablePasteRule && accumlator === record ) {\n\t\t\t\taccumlator = __unstablePasteRule( record, { html, plainText } );\n\t\t\t}\n\n\t\t\treturn accumlator;\n\t\t}, record );\n\n\t\tif ( transformed !== record ) {\n\t\t\tthis.onChange( transformed );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onPaste ) {\n\t\t\t// Only process file if no HTML is present.\n\t\t\t// Note: a pasted file may have the URL as plain text.\n\t\t\tconst image = find( [ ...items, ...files ], ( { type } ) =>\n\t\t\t\t/^image\\/(?:jpe?g|png|gif)$/.test( type )\n\t\t\t);\n\n\t\t\tonPaste( {\n\t\t\t\tvalue: this.removeEditorOnlyFormats( record ),\n\t\t\t\tonChange: this.onChange,\n\t\t\t\thtml,\n\t\t\t\tplainText,\n\t\t\t\timage,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Handles a focus event on the contenteditable field, calling the\n\t * `unstableOnFocus` prop callback if one is defined. The callback does not\n\t * receive any arguments.\n\t *\n\t * This is marked as a private API and the `unstableOnFocus` prop is not\n\t * documented, as the current requirements where it is used are subject to\n\t * future refactoring following `isSelected` handling.\n\t *\n\t * In contrast with `setFocusedElement`, this is only triggered in response\n\t * to focus within the contenteditable field, whereas `setFocusedElement`\n\t * is triggered on focus within any `RichText` descendent element.\n\t *\n\t * @see setFocusedElement\n\t *\n\t * @private\n\t */\n\tonFocus() {\n\t\tconst { unstableOnFocus } = this.props;\n\n\t\tif ( unstableOnFocus ) {\n\t\t\tunstableOnFocus();\n\t\t}\n\n\t\tthis.recalculateBoundaryStyle();\n\n\t\t// We know for certain that on focus, the old selection is invalid. It\n\t\t// will be recalculated on the next mouseup, keyup, or touchend event.\n\t\tconst index = undefined;\n\t\tconst activeFormats = undefined;\n\n\t\tthis.record = {\n\t\t\t...this.record,\n\t\t\tstart: index,\n\t\t\tend: index,\n\t\t\tactiveFormats,\n\t\t};\n\t\tthis.props.onSelectionChange( index, index );\n\t\tthis.setState( { activeFormats } );\n\n\t\t// Update selection as soon as possible, which is at the next animation\n\t\t// frame. The event listener for selection changes may be added too late\n\t\t// at this point, but this focus event is still too early to calculate\n\t\t// the selection.\n\t\tthis.rafId = window.requestAnimationFrame( this.onSelectionChange );\n\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\n\t\tif ( this.props.setFocusedElement ) {\n\t\t\tdeprecated( 'wp.blockEditor.RichText setFocusedElement prop', {\n\t\t\t\talternative: 'selection state from the block editor store.',\n\t\t\t} );\n\t\t\tthis.props.setFocusedElement( this.props.instanceId );\n\t\t}\n\t}\n\n\tonBlur() {\n\t\tdocument.removeEventListener( 'selectionchange', this.onSelectionChange );\n\t}\n\n\t/**\n\t * Handle input on the next selection change event.\n\t *\n\t * @param {SyntheticEvent} event Synthetic input event.\n\t */\n\tonInput( event ) {\n\t\t// For Input Method Editor (IME), used in Chinese, Japanese, and Korean\n\t\t// (CJK), do not trigger a change if characters are being composed.\n\t\t// Browsers setting `isComposing` to `true` will usually emit a final\n\t\t// `input` event when the characters are composed.\n\t\tif (\n\t\t\tevent &&\n\t\t\tevent.nativeEvent &&\n\t\t\tevent.nativeEvent.isComposing\n\t\t) {\n\t\t\t// Also don't update any selection.\n\t\t\tdocument.removeEventListener( 'selectionchange', this.onSelectionChange );\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tif ( ! inputType ) {\n\t\t\tinputType = event.nativeEvent.inputType;\n\t\t}\n\n\t\t// The browser formatted something or tried to insert HTML.\n\t\t// Overwrite it. It will be handled later by the format library if\n\t\t// needed.\n\t\tif ( inputType && (\n\t\t\tinputType.indexOf( 'format' ) === 0 ||\n\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType )\n\t\t) ) {\n\t\t\tthis.applyRecord( this.record );\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\t\tconst { start, activeFormats = [] } = this.record;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue,\n\t\t\tstart,\n\t\t\tend: value.start,\n\t\t\tformats: activeFormats,\n\t\t} );\n\n\t\tthis.onChange( change, { withoutHistory: true } );\n\n\t\tconst {\n\t\t\t__unstableInputRule: inputRule,\n\t\t\t__unstableMarkAutomaticChange: markAutomaticChange,\n\t\t\tformatTypes,\n\t\t\tsetTimeout,\n\t\t\tclearTimeout,\n\t\t} = this.props;\n\n\t\t// Create an undo level when input stops for over a second.\n\t\tclearTimeout( this.onInput.timeout );\n\t\tthis.onInput.timeout = setTimeout( this.onCreateUndoLevel, 1000 );\n\n\t\t// Only run input rules when inserting text.\n\t\tif ( inputType !== 'insertText' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( inputRule ) {\n\t\t\tinputRule( change, this.valueToFormat );\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce( ( accumlator, { __unstableInputRule } ) => {\n\t\t\tif ( __unstableInputRule ) {\n\t\t\t\taccumlator = __unstableInputRule( accumlator );\n\t\t\t}\n\n\t\t\treturn accumlator;\n\t\t}, change );\n\n\t\tif ( transformed !== change ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t\tthis.onChange( { ...transformed, activeFormats } );\n\t\t\tmarkAutomaticChange();\n\t\t}\n\t}\n\n\tonCompositionEnd() {\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\tthis.onInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\t}\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t * animation frames after the `focus` event.\n\t *\n\t * @param {Event|SyntheticEvent|DOMHighResTimeStamp} event\n\t */\n\tonSelectionChange( event ) {\n\t\tif (\n\t\t\tevent.type !== 'selectionchange' &&\n\t\t\t! this.props.__unstableIsSelected\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif (\n\t\t\tevent.nativeEvent &&\n\t\t\tevent.nativeEvent.isComposing\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = this.createRecord();\n\t\tconst value = this.record;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== value.text ) {\n\t\t\tthis.onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === value.start && end === value.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( value.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\t__unstableIsCaretWithinFormattedText: isCaretWithinFormattedText,\n\t\t\t__unstableOnEnterFormattedText: onEnterFormattedText,\n\t\t\t__unstableOnExitFormattedText: onExitFormattedText,\n\t\t} = this.props;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// Allow `getActiveFormats` to get new `activeFormats`.\n\t\t\tactiveFormats: undefined,\n\t\t};\n\n\t\tconst activeFormats = getActiveFormats( newValue );\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = activeFormats;\n\n\t\tif ( ! isCaretWithinFormattedText && activeFormats.length ) {\n\t\t\tonEnterFormattedText();\n\t\t} else if ( isCaretWithinFormattedText && ! activeFormats.length ) {\n\t\t\tonExitFormattedText();\n\t\t}\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue, { domOnly: true } );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.setState( { activeFormats } );\n\n\t\tif ( activeFormats.length > 0 ) {\n\t\t\tthis.recalculateBoundaryStyle();\n\t\t}\n\t}\n\n\trecalculateBoundaryStyle() {\n\t\tconst boundarySelector = '*[data-rich-text-format-boundary]';\n\t\tconst element = this.editableRef.querySelector( boundarySelector );\n\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computedStyle = getComputedStyle( element );\n\t\tconst newColor = computedStyle.color\n\t\t\t.replace( ')', ', 0.2)' )\n\t\t\t.replace( 'rgb', 'rgba' );\n\t\tconst selector = `.rich-text:focus ${ boundarySelector }`;\n\t\tconst rule = `background-color: ${ newColor }`;\n\n\t\tglobalStyle.innerHTML = `${ selector } {${ rule }}`;\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object}  record            The record to sync and apply.\n\t * @param {Object}  $2                Named options.\n\t * @param {boolean} $2.withoutHistory If true, no undo level will be\n\t *                                    created.\n\t */\n\tonChange( record, { withoutHistory } = {} ) {\n\t\tthis.applyRecord( record );\n\n\t\tconst { start, end, activeFormats = [] } = record;\n\t\tconst changeHandlers = pickBy( this.props, ( v, key ) =>\n\t\t\tkey.startsWith( 'format_on_change_functions_' )\n\t\t);\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( record.formats, record.text );\n\t\t} );\n\n\t\tthis.value = this.valueToFormat( record );\n\t\tthis.record = record;\n\t\tthis.props.onChange( this.value );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.setState( { activeFormats } );\n\n\t\tif ( ! withoutHistory ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t}\n\t}\n\n\tonCreateUndoLevel() {\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( this.lastHistoryValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.props.__unstableOnCreateUndoLevel();\n\t\tthis.lastHistoryValue = this.value;\n\t}\n\n\t/**\n\t * Handles delete on keydown:\n\t * - outdent list items,\n\t * - delete content if everything is selected,\n\t * - trigger the onDelete prop when selection is uncollapsed and at an edge.\n\t *\n\t * @param {SyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleDelete( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif ( keyCode !== DELETE && keyCode !== BACKSPACE && keyCode !== ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.__unstableDidAutomaticChange ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.__unstableUndo();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode === ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { onDelete, __unstableMultilineTag: multilineTag } = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\t\tconst value = this.createRecord();\n\t\tconst { start, end, text } = value;\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\tif ( multilineTag ) {\n\t\t\tconst newValue = removeLineSeparator( value, isReverse );\n\t\t\tif ( newValue ) {\n\t\t\t\tthis.onChange( newValue );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\tthis.onChange( remove( value ) );\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\tif (\n\t\t\t! onDelete ||\n\t\t\t! isCollapsed( value ) ||\n\t\t\tactiveFormats.length ||\n\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t( ! isReverse && end !== text.length )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDelete( { isReverse, value } );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Triggers the `onEnter` prop on keydown.\n\t *\n\t * @param {SyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleEnter( event ) {\n\t\tif ( event.keyCode !== ENTER ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst { onEnter } = this.props;\n\n\t\tif ( ! onEnter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonEnter( {\n\t\t\tvalue: this.removeEditorOnlyFormats( this.createRecord() ),\n\t\t\tonChange: this.onChange,\n\t\t\tshiftKey: event.shiftKey,\n\t\t} );\n\t}\n\n\t/**\n\t * Indents list items on space keydown.\n\t *\n\t * @param {SyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleSpace( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\t\tconst { tagName, __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tif (\n\t\t\t// Only override when no modifiers are pressed.\n\t\t\tshiftKey || altKey || metaKey || ctrlKey ||\n\t\t\tkeyCode !== SPACE || multilineTag !== 'li'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\n\t\tif ( ! isCollapsed( value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { text, start } = value;\n\t\tconst characterBefore = text[ start - 1 ];\n\n\t\t// The caret must be at the start of a line.\n\t\tif ( characterBefore && characterBefore !== LINE_SEPARATOR ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChange( indentListItems( value, { type: tagName } ) );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles horizontal keyboard navigation when no modifiers are pressed. The\n\t * navigation is handled separately to move correctly around format\n\t * boundaries.\n\t *\n\t * @param  {SyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleHorizontalNavigation( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey || altKey || metaKey || ctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.record;\n\t\tconst { text, formats, start, end, activeFormats = [] } = value;\n\t\tconst collapsed = isCollapsed( value );\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = getComputedStyle( this.editableRef );\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && activeFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In all other cases, prevent default behaviour.\n\t\tevent.preventDefault();\n\n\t\tconst formatsBefore = formats[ start - 1 ] || [];\n\t\tconst formatsAfter = formats[ start ] || [];\n\n\t\tlet newActiveFormatsLength = activeFormats.length;\n\t\tlet source = formatsAfter;\n\n\t\tif ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tsource = formatsBefore;\n\t\t}\n\n\t\t// If the amount of formats before the caret and after the caret is\n\t\t// different, the caret is at a format boundary.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length < formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length > formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\t\t} else if ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length > formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length < formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\t\t}\n\n\t\t// Wait for boundary class to be added.\n\t\tthis.props.setTimeout( () => this.recalculateBoundaryStyle() );\n\n\t\tif ( newActiveFormatsLength !== activeFormats.length ) {\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = { ...value, activeFormats: newActiveFormats };\n\t\t\tthis.record = newValue;\n\t\t\tthis.applyRecord( newValue );\n\t\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPos = start + ( isReverse ? -1 : 1 );\n\t\tconst newActiveFormats = isReverse ? formatsBefore : formatsAfter;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart: newPos,\n\t\t\tend: newPos,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue );\n\t\tthis.props.onSelectionChange( newPos, newPos );\n\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t}\n\n\t/**\n\t * Select object when they are clicked. The browser will not set any\n\t * selection when clicking e.g. an image.\n\t *\n\t * @param  {SyntheticEvent} event Synthetic mousedown or touchstart event.\n\t */\n\tonPointerDown( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif ( target === this.editableRef || target.textContent ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { parentNode } = target;\n\t\tconst index = Array.from( parentNode.childNodes ).indexOf( target );\n\t\tconst range = target.ownerDocument.createRange();\n\t\tconst selection = getSelection();\n\n\t\trange.setStart( target.parentNode, index );\n\t\trange.setEnd( target.parentNode, index + 1 );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst {\n\t\t\ttagName,\n\t\t\tvalue,\n\t\t\tselectionStart,\n\t\t\tselectionEnd,\n\t\t\tplaceholder,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t} = this.props;\n\n\t\t// Check if the content changed.\n\t\tlet shouldReapply = (\n\t\t\ttagName === prevProps.tagName &&\n\t\t\tvalue !== prevProps.value &&\n\t\t\tvalue !== this.value\n\t\t);\n\n\t\t// Check if the selection changed.\n\t\tshouldReapply = shouldReapply || (\n\t\t\tisSelected && ! prevProps.isSelected && (\n\t\t\t\tthis.record.start !== selectionStart ||\n\t\t\t\tthis.record.end !== selectionEnd\n\t\t\t)\n\t\t);\n\n\t\tconst prefix = 'format_prepare_props_';\n\t\tconst predicate = ( v, key ) => key.startsWith( prefix );\n\t\tconst prepareProps = pickBy( this.props, predicate );\n\t\tconst prevPrepareProps = pickBy( prevProps, predicate );\n\n\t\t// Check if any format props changed.\n\t\tshouldReapply = shouldReapply ||\n\t\t\t! isShallowEqual( prepareProps, prevPrepareProps );\n\n\t\t// Rerender if the placeholder changed.\n\t\tshouldReapply = shouldReapply ||\n\t\t\tplaceholder !== prevProps.placeholder;\n\n\t\tif ( shouldReapply ) {\n\t\t\tthis.value = value;\n\t\t\tthis.record = this.formatToValue( value );\n\t\t\tthis.record.start = selectionStart;\n\t\t\tthis.record.end = selectionEnd;\n\t\t\tthis.applyRecord( this.record );\n\t\t} else if (\n\t\t\tthis.record.start !== selectionStart ||\n\t\t\tthis.record.end !== selectionEnd\n\t\t) {\n\t\t\tthis.record = {\n\t\t\t\t...this.record,\n\t\t\t\tstart: selectionStart,\n\t\t\t\tend: selectionEnd,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Converts the outside data structure to our internal representation.\n\t *\n\t * @param {*} value The outside value, data type depends on props.\n\t * @return {Object} An internal rich-text value.\n\t */\n\tformatToValue( value ) {\n\t\tconst { format, __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst prepare = createPrepareEditableTree( this.props, 'format_value_functions' );\n\n\t\tvalue = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags: multilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t} );\n\t\tvalue.formats = prepare( value );\n\n\t\treturn value;\n\t}\n\n\tvalueToEditableHTML( value ) {\n\t\tconst { __unstableMultilineTag: multilineTag } = this.props;\n\n\t\treturn toDom( {\n\t\t\tvalue,\n\t\t\tmultilineTag,\n\t\t\tprepareEditableTree: createPrepareEditableTree( this.props, 'format_prepare_functions' ),\n\t\t\tplaceholder: this.props.placeholder,\n\t\t} ).body.innerHTML;\n\t}\n\n\t/**\n\t * Removes editor only formats from the value.\n\t *\n\t * Editor only formats are applied using `prepareEditableTree`, so we need to\n\t * remove them before converting the internal state\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {Object} A new rich-text value.\n\t */\n\tremoveEditorOnlyFormats( value ) {\n\t\tthis.props.formatTypes.forEach( ( formatType ) => {\n\t\t\t// Remove formats created by prepareEditableTree, because they are editor only.\n\t\t\tif ( formatType.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\tvalue = removeFormat( value, formatType.name, 0, value.text.length );\n\t\t\t}\n\t\t} );\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Converts the internal value to the external data format.\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {*} The external data format, data type depends on props.\n\t */\n\tvalueToFormat( value ) {\n\t\tconst { format, __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tvalue = this.removeEditorOnlyFormats( value );\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn toHTMLString( { value, multilineTag } );\n\t}\n\n\tEditable( props ) {\n\t\tconst {\n\t\t\ttagName: Tagname = 'div',\n\t\t\tstyle,\n\t\t\tclassName,\n\t\t\tplaceholder,\n\t\t} = this.props;\n\t\t// Generating a key that includes `tagName` ensures that if the tag\n\t\t// changes, we replace the relevant element. This is needed because we\n\t\t// prevent Editable component updates.\n\t\tconst key = Tagname;\n\n\t\treturn (\n\t\t\t<Editable\n\t\t\t\t{ ...props }\n\t\t\t\ttagName={ Tagname }\n\t\t\t\tstyle={ style }\n\t\t\t\trecord={ this.record }\n\t\t\t\tvalueToEditableHTML={ this.valueToEditableHTML }\n\t\t\t\taria-label={ placeholder }\n\t\t\t\t{ ...pickAriaProps( this.props ) }\n\t\t\t\tclassName={ classnames( 'rich-text', className ) }\n\t\t\t\tkey={ key }\n\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\tonInput={ this.onInput }\n\t\t\t\tonCompositionEnd={ this.onCompositionEnd }\n\t\t\t\tonKeyDown={ props.onKeyDown ? ( event ) => {\n\t\t\t\t\tprops.onKeyDown( event );\n\t\t\t\t\tthis.onKeyDown( event );\n\t\t\t\t} : this.onKeyDown }\n\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\tonMouseDown={ this.onPointerDown }\n\t\t\t\tonTouchStart={ this.onPointerDown }\n\t\t\t\tsetRef={ this.setRef }\n\t\t\t\t// Selection updates must be done at these events as they\n\t\t\t\t// happen before the `selectionchange` event. In some cases,\n\t\t\t\t// the `selectionchange` event may not even fire, for\n\t\t\t\t// example when the window receives focus again on click.\n\t\t\t\tonKeyUp={ this.onSelectionChange }\n\t\t\t\tonMouseUp={ this.onSelectionChange }\n\t\t\t\tonTouchEnd={ this.onSelectionChange }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t__unstableIsSelected: isSelected,\n\t\t\tchildren,\n\t\t\tallowedFormats,\n\t\t\twithoutInteractiveFormatting,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ isSelected && <FormatEdit\n\t\t\t\t\tallowedFormats={ allowedFormats }\n\t\t\t\t\twithoutInteractiveFormatting={ withoutInteractiveFormatting }\n\t\t\t\t\tvalue={ this.record }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t/> }\n\t\t\t\t{ children && children( {\n\t\t\t\t\tisSelected,\n\t\t\t\t\tvalue: this.record,\n\t\t\t\t\tonChange: this.onChange,\n\t\t\t\t\tEditable: this.Editable,\n\t\t\t\t} ) }\n\t\t\t\t{ ! children && <this.Editable /> }\n\t\t\t</>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\n/**\n * Renders a rich content input, providing users with the option to format the\n * content.\n */\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tformatTypes: select( 'core/rich-text' ).getFormatTypes(),\n\t} ) ),\n\twithSafeTimeout,\n] )( RichText );\n"]}